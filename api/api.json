{
    "title": "Ace API",
    "date": "Thu, 25 Oct 2012 20:19:19 GMT",
    "tree": {
        "children": [
            {
                "id": "Ace",
                "type": "class",
                "description": "The main class required to set up an Ace instance in the browser.",
                "short_description": "The main class required to set up an Ace instance in the browser.",
                "line": 31,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "Ace.edit",
                        "type": "class method",
                        "description": "Embeds the Ace editor into the DOM, at the element provided by `el`.",
                        "short_description": "Embeds the Ace editor into the DOM, at the element provided by `el`.",
                        "line": 57,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "el",
                                            "description": "Either the id of an element, or the element itself",
                                            "types": [
                                                "String",
                                                "DOMElement"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/ace.js",
                        "name": "edit",
                        "name_prefix": "Ace.",
                        "path": "Ace.edit",
                        "outFile": "ace.html#Ace.edit"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/ace.js",
                "subclasses": [],
                "name": "Ace",
                "path": "Ace",
                "outFile": "ace.html"
            },
            {
                "id": "Anchor",
                "type": "class",
                "description": "Defines the floating pointer in the document. Whenever text is inserted or deleted before the cursor, the position of the cursor is updated.",
                "short_description": "Defines the floating pointer in the document. Whenever text is inserted or deleted before the cursor, the position of the cursor is updated.",
                "line": 125,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "Anchor.$clipPositionToDocument",
                        "type": "class method",
                        "description": "Clips the anchor position to the specified row and column.",
                        "short_description": "Clips the anchor position to the specified row and column.",
                        "line": 304,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row index to clip the anchor to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "The column index to clip the anchor to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/anchor.js",
                        "name": "$clipPositionToDocument",
                        "name_prefix": "Anchor.",
                        "path": "Anchor.$clipPositionToDocument",
                        "outFile": "anchor.html#Anchor.$clipPositionToDocument"
                    },
                    {
                        "id": "Anchor.detach",
                        "type": "class method",
                        "description": "When called, the `'change'` event listener is removed.",
                        "short_description": "When called, the `'change'` event listener is removed.",
                        "line": 295,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/anchor.js",
                        "name": "detach",
                        "name_prefix": "Anchor.",
                        "path": "Anchor.detach",
                        "outFile": "anchor.html#Anchor.detach"
                    },
                    {
                        "id": "Anchor.getDocument",
                        "type": "class method",
                        "description": "Returns the current document.",
                        "short_description": "Returns the current document.",
                        "line": 167,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Document",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/anchor.js",
                        "name": "getDocument",
                        "name_prefix": "Anchor.",
                        "path": "Anchor.getDocument",
                        "outFile": "anchor.html#Anchor.getDocument"
                    },
                    {
                        "id": "Anchor.getPosition",
                        "type": "class method",
                        "description": "Returns an object identifying the `row` and `column` position of the current anchor.",
                        "short_description": "Returns an object identifying the `row` and `column` position of the current anchor.",
                        "line": 158,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/anchor.js",
                        "name": "getPosition",
                        "name_prefix": "Anchor.",
                        "path": "Anchor.getPosition",
                        "outFile": "anchor.html#Anchor.getPosition"
                    },
                    {
                        "id": "new Anchor",
                        "type": "constructor",
                        "description": "Creates a new `Anchor` and associates it with a document.",
                        "short_description": "Creates a new `Anchor` and associates it with a document.",
                        "line": 132,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "doc",
                                            "description": "The document to associate with the anchor",
                                            "types": [
                                                "Document"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "row",
                                            "description": "The starting row position",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "The starting column position",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/anchor.js",
                        "name": "new",
                        "name_prefix": "Anchor.",
                        "path": "Anchor.new",
                        "outFile": "anchor.html#Anchor.new"
                    },
                    {
                        "id": "Anchor.setPosition",
                        "type": "class method",
                        "description": "Sets the anchor position to the specified row and column. If `noClip` is `true`, the position is not clipped.",
                        "short_description": "Sets the anchor position to the specified row and column. If `noClip` is `true`, the position is not clipped.",
                        "line": 257,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row index to move the anchor to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "The column index to move the anchor to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "noClip",
                                            "description": "Identifies if you want the position to be clipped",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/anchor.js",
                        "name": "setPosition",
                        "name_prefix": "Anchor.",
                        "path": "Anchor.setPosition",
                        "outFile": "anchor.html#Anchor.setPosition"
                    },
                    {
                        "id": "Anchor@change",
                        "type": "event",
                        "description": "Fires whenever the anchor position changes.\n\nBoth of these objects have a `row` and `column` property corresponding to the position.\n\nEvents that can trigger this function include [[Anchor.setPosition `setPosition()`]].",
                        "short_description": "Fires whenever the anchor position changes.\n",
                        "line": 177,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "e",
                                            "description": "An object containing information about the anchor position. It has two properties:  \n- `old`: An object describing the old Anchor position\n- `value`: An object describing the new Anchor position",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/anchor.js",
                        "name": "change",
                        "name_prefix": "Anchor@",
                        "path": "Anchor.event.change",
                        "outFile": "anchor.html#Anchor.event.change"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/anchor.js",
                "subclasses": [],
                "name": "Anchor",
                "path": "Anchor",
                "outFile": "anchor.html"
            },
            {
                "id": "BackgroundTokenizer",
                "type": "class",
                "description": "Tokenizes the current [[Document `Document`]] in the background, and caches the tokenized rows for future use. \n\nIf a certain row is changed, everything below that row is re-tokenized.",
                "short_description": "Tokenizes the current [[Document `Document`]] in the background, and caches the tokenized rows for future use. \n",
                "line": 343,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "BackgroundTokenizer.fireUpdateEvent",
                        "type": "class method",
                        "description": "Emits the `'update'` event. `firstRow` and `lastRow` are used to define the boundaries of the region to be updated.",
                        "short_description": "Emits the `'update'` event. `firstRow` and `lastRow` are used to define the boundaries of the region to be updated.",
                        "line": 439,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "firstRow",
                                            "description": "The starting row region",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "lastRow",
                                            "description": "The final row region",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/background_tokenizer.js",
                        "name": "fireUpdateEvent",
                        "name_prefix": "BackgroundTokenizer.",
                        "path": "BackgroundTokenizer.fireUpdateEvent",
                        "outFile": "background_tokenizer.html#BackgroundTokenizer.fireUpdateEvent"
                    },
                    {
                        "id": "BackgroundTokenizer.getState",
                        "type": "class method",
                        "description": "[Returns the state of tokenization at the end of a row.]{: #BackgroundTokenizer.getState}",
                        "short_description": "[Returns the state of tokenization at the end of a row.]{: #BackgroundTokenizer.getState}",
                        "line": 517,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row to get state at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/background_tokenizer.js",
                        "name": "getState",
                        "name_prefix": "BackgroundTokenizer.",
                        "path": "BackgroundTokenizer.getState",
                        "outFile": "background_tokenizer.html#BackgroundTokenizer.getState"
                    },
                    {
                        "id": "BackgroundTokenizer.getTokens",
                        "type": "class method",
                        "description": "Gives list of tokens of the row. (tokens are cached)",
                        "short_description": "Gives list of tokens of the row. (tokens are cached)",
                        "line": 505,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row to get tokens at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/background_tokenizer.js",
                        "name": "getTokens",
                        "name_prefix": "BackgroundTokenizer.",
                        "path": "BackgroundTokenizer.getTokens",
                        "outFile": "background_tokenizer.html#BackgroundTokenizer.getTokens"
                    },
                    {
                        "id": "new BackgroundTokenizer",
                        "type": "constructor",
                        "description": "Creates a new `BackgroundTokenizer` object.",
                        "short_description": "Creates a new `BackgroundTokenizer` object.",
                        "line": 353,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "tokenizer",
                                            "description": "The tokenizer to use",
                                            "types": [
                                                "Tokenizer"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "editor",
                                            "description": "The editor to associate with",
                                            "types": [
                                                "Editor"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/background_tokenizer.js",
                        "name": "new",
                        "name_prefix": "BackgroundTokenizer.",
                        "path": "BackgroundTokenizer.new",
                        "outFile": "background_tokenizer.html#BackgroundTokenizer.new"
                    },
                    {
                        "id": "BackgroundTokenizer.setDocument",
                        "type": "class method",
                        "description": "Sets a new document to associate with this object.",
                        "short_description": "Sets a new document to associate with this object.",
                        "line": 420,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "doc",
                                            "description": "The new document to associate with",
                                            "types": [
                                                "Document"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/background_tokenizer.js",
                        "name": "setDocument",
                        "name_prefix": "BackgroundTokenizer.",
                        "path": "BackgroundTokenizer.setDocument",
                        "outFile": "background_tokenizer.html#BackgroundTokenizer.setDocument"
                    },
                    {
                        "id": "BackgroundTokenizer.setTokenizer",
                        "type": "class method",
                        "description": "Sets a new tokenizer for this object.",
                        "short_description": "Sets a new tokenizer for this object.",
                        "line": 406,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "tokenizer",
                                            "description": "The new tokenizer to use",
                                            "types": [
                                                "Tokenizer"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/background_tokenizer.js",
                        "name": "setTokenizer",
                        "name_prefix": "BackgroundTokenizer.",
                        "path": "BackgroundTokenizer.setTokenizer",
                        "outFile": "background_tokenizer.html#BackgroundTokenizer.setTokenizer"
                    },
                    {
                        "id": "BackgroundTokenizer.start",
                        "type": "class method",
                        "description": "Starts tokenizing at the row indicated.",
                        "short_description": "Starts tokenizing at the row indicated.",
                        "line": 453,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "startRow",
                                            "description": "The row to start at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/background_tokenizer.js",
                        "name": "start",
                        "name_prefix": "BackgroundTokenizer.",
                        "path": "BackgroundTokenizer.start",
                        "outFile": "background_tokenizer.html#BackgroundTokenizer.start"
                    },
                    {
                        "id": "BackgroundTokenizer.stop",
                        "type": "class method",
                        "description": "Stops tokenizing.",
                        "short_description": "Stops tokenizing.",
                        "line": 495,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/background_tokenizer.js",
                        "name": "stop",
                        "name_prefix": "BackgroundTokenizer.",
                        "path": "BackgroundTokenizer.stop",
                        "outFile": "background_tokenizer.html#BackgroundTokenizer.stop"
                    },
                    {
                        "id": "BackgroundTokenizer@update",
                        "type": "event",
                        "description": "Fires whenever the background tokeniziers between a range of rows are going to be updated.",
                        "short_description": "Fires whenever the background tokeniziers between a range of rows are going to be updated.",
                        "line": 432,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "e",
                                            "description": "An object containing two properties, `first` and `last`, which indicate the rows of the region being updated.",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/background_tokenizer.js",
                        "name": "update",
                        "name_prefix": "BackgroundTokenizer@",
                        "path": "BackgroundTokenizer.event.update",
                        "outFile": "background_tokenizer.html#BackgroundTokenizer.event.update"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/background_tokenizer.js",
                "subclasses": [],
                "name": "BackgroundTokenizer",
                "path": "BackgroundTokenizer",
                "outFile": "background_tokenizer.html"
            },
            {
                "id": "CommandManager",
                "type": "class",
                "description": "new CommandManager(platform, commands)",
                "short_description": "new CommandManager(platform, commands)",
                "line": 523,
                "author": [],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/commands/command_manager.js",
                "subclasses": [],
                "name": "CommandManager",
                "path": "CommandManager",
                "outFile": "command_manager.html"
            },
            {
                "id": "Document",
                "type": "class",
                "description": "Contains the text of the document. Document can be attached to several [[EditSession `EditSession`]]s. \n\nAt its core, `Document`s are just an array of strings, with each row in the document matching up to the array index.",
                "short_description": "Contains the text of the document. Document can be attached to several [[EditSession `EditSession`]]s. \n",
                "line": 945,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "Document.$split",
                        "type": "class method",
                        "description": "Splits a string of text on any newline (`\\n`) or carriage-return ('\\r') characters.",
                        "short_description": "Splits a string of text on any newline (`\\n`) or carriage-return ('\\r') characters.",
                        "line": 1007,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "text",
                                            "description": "The text to work with",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": "A String array, with each index containing a piece of the original `text` string."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "$split",
                        "name_prefix": "Document.",
                        "path": "Document.$split",
                        "outFile": "document.html#Document.$split"
                    },
                    {
                        "id": "Document.applyDeltas",
                        "type": "class method",
                        "description": "Applies all the changes previously accumulated. These can be either `'includeText'`, `'insertLines'`, `'removeText'`, and `'removeLines'`.",
                        "short_description": "Applies all the changes previously accumulated. These can be either `'includeText'`, `'insertLines'`, `'removeText'`, and `'removeLines'`.",
                        "line": 1466,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "deltas",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "applyDeltas",
                        "name_prefix": "Document.",
                        "path": "Document.applyDeltas",
                        "outFile": "document.html#Document.applyDeltas"
                    },
                    {
                        "id": "Document.createAnchor",
                        "type": "class method",
                        "description": "Creates a new `Anchor` to define a floating point in the document.",
                        "short_description": "Creates a new `Anchor` to define a floating point in the document.",
                        "line": 996,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row number to use",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "The column number to use",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "createAnchor",
                        "name_prefix": "Document.",
                        "path": "Document.createAnchor",
                        "outFile": "document.html#Document.createAnchor"
                    },
                    {
                        "id": "Document.getAllLines",
                        "type": "class method",
                        "description": "Returns all lines in the document as string array. Warning: The caller should not modify this array!",
                        "short_description": "Returns all lines in the document as string array. Warning: The caller should not modify this array!",
                        "line": 1118,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "getAllLines",
                        "name_prefix": "Document.",
                        "path": "Document.getAllLines",
                        "outFile": "document.html#Document.getAllLines"
                    },
                    {
                        "id": "Document.getLength",
                        "type": "class method",
                        "description": "Returns the number of rows in the document.",
                        "short_description": "Returns the number of rows in the document.",
                        "line": 1125,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "getLength",
                        "name_prefix": "Document.",
                        "path": "Document.getLength",
                        "outFile": "document.html#Document.getLength"
                    },
                    {
                        "id": "Document.getLine",
                        "type": "class method",
                        "description": "Returns a verbatim copy of the given line as it is in the document",
                        "short_description": "Returns a verbatim copy of the given line as it is in the document",
                        "line": 1095,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row index to retrieve",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "getLine",
                        "name_prefix": "Document.",
                        "path": "Document.getLine",
                        "outFile": "document.html#Document.getLine"
                    },
                    {
                        "id": "Document.getLines",
                        "type": "class method",
                        "description": "Returns an array of strings of the rows between `firstRow` and `lastRow`. This function is inclusive of `lastRow`.",
                        "short_description": "Returns an array of strings of the rows between `firstRow` and `lastRow`. This function is inclusive of `lastRow`.",
                        "line": 1106,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "firstRow",
                                            "description": "The first row index to retrieve",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "lastRow",
                                            "description": "The final row index to retrieve",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "getLines",
                        "name_prefix": "Document.",
                        "path": "Document.getLines",
                        "outFile": "document.html#Document.getLines"
                    },
                    {
                        "id": "Document.getNewLineCharacter",
                        "type": "class method",
                        "description": "Returns the newline character that's being used, depending on the value of `newLineMode`.",
                        "short_description": "Returns the newline character that's being used, depending on the value of `newLineMode`.",
                        "line": 1038,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": "If `newLineMode == windows`, `\\r\\n` is returned.  \nIf `newLineMode == unix`, `\\n` is returned.  \nIf `newLineMode == auto`, the value of `autoNewLine` is returned."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "getNewLineCharacter",
                        "name_prefix": "Document.",
                        "path": "Document.getNewLineCharacter",
                        "outFile": "document.html#Document.getNewLineCharacter"
                    },
                    {
                        "id": "Document.getNewLineMode",
                        "type": "class method",
                        "description": "[Returns the type of newlines being used; either `windows`, `unix`, or `auto`]{: #Document.getNewLineMode}",
                        "short_description": "[Returns the type of newlines being used; either `windows`, `unix`, or `auto`]{: #Document.getNewLineMode}",
                        "line": 1076,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "getNewLineMode",
                        "name_prefix": "Document.",
                        "path": "Document.getNewLineMode",
                        "outFile": "document.html#Document.getNewLineMode"
                    },
                    {
                        "id": "Document.getTextRange",
                        "type": "class method",
                        "description": "[Given a range within the document, this function returns all the text within that range as a single string.]{: #Document.getTextRange.desc}",
                        "short_description": "[Given a range within the document, this function returns all the text within that range as a single string.]{: #Document.getTextRange.desc}",
                        "line": 1132,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "range",
                                            "description": "The range to work with",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "getTextRange",
                        "name_prefix": "Document.",
                        "path": "Document.getTextRange",
                        "outFile": "document.html#Document.getTextRange"
                    },
                    {
                        "id": "Document.getValue",
                        "type": "class method",
                        "description": "Returns all the lines in the document as a single string, split by the new line character.",
                        "short_description": "Returns all the lines in the document as a single string, split by the new line character.",
                        "line": 989,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "getValue",
                        "name_prefix": "Document.",
                        "path": "Document.getValue",
                        "outFile": "document.html#Document.getValue"
                    },
                    {
                        "id": "Document.insert",
                        "type": "class method",
                        "description": "Inserts a block of `text` and the indicated `position`.",
                        "short_description": "Inserts a block of `text` and the indicated `position`.",
                        "line": 1160,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "position",
                                            "description": "The position to start inserting at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "text",
                                            "description": "A chunk of text to insert",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "The position of the last line of `text`. If the length of `text` is 0, this function simply returns `position`."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "insert",
                        "name_prefix": "Document.",
                        "path": "Document.insert",
                        "outFile": "document.html#Document.insert"
                    },
                    {
                        "id": "Document.insertInLine",
                        "type": "class method",
                        "description": "Inserts `text` into the `position` at the current row. This method also triggers the `'change'` event.",
                        "short_description": "Inserts `text` into the `position` at the current row. This method also triggers the `'change'` event.",
                        "line": 1288,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "position",
                                            "description": "The position to insert at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "text",
                                            "description": "A chunk of text",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": "Returns an object containing the final row and column, like this:  \n    ```\n    {row: endRow, column: 0}\n```"
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "insertInLine",
                        "name_prefix": "Document.",
                        "path": "Document.insertInLine",
                        "outFile": "document.html#Document.insertInLine"
                    },
                    {
                        "id": "Document.insertLines",
                        "type": "class method",
                        "description": "Inserts the elements in `lines` into the document, starting at the row index given by `row`. This method also triggers the `'change'` event.",
                        "short_description": "Inserts the elements in `lines` into the document, starting at the row index given by `row`. This method also triggers the `'change'` event.",
                        "line": 1215,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The index of the row to insert at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "lines",
                                            "description": "An array of strings",
                                            "types": [
                                                "Array"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": "Contains the final row and column, like this:  \n  ```\n  {row: endRow, column: 0}\n```  \nIf `lines` is empty, this function returns an object containing the current row, and column, like this:  \n  ``` \n  {row: row, column: 0}\n```"
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "insertLines",
                        "name_prefix": "Document.",
                        "path": "Document.insertLines",
                        "outFile": "document.html#Document.insertLines"
                    },
                    {
                        "id": "Document.insertNewLine",
                        "type": "class method",
                        "description": "Inserts a new line into the document at the current row's `position`. This method also triggers the `'change'` event.",
                        "short_description": "Inserts a new line into the document at the current row's `position`. This method also triggers the `'change'` event.",
                        "line": 1257,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "position",
                                            "description": "The position to insert at",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": "Returns an object containing the final row and column, like this:<br/>\n   ```\n   {row: endRow, column: 0}\n```"
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "insertNewLine",
                        "name_prefix": "Document.",
                        "path": "Document.insertNewLine",
                        "outFile": "document.html#Document.insertNewLine"
                    },
                    {
                        "id": "Document.isNewLine",
                        "type": "class method",
                        "description": "Returns `true` if `text` is a newline character (either `\\r\\n`, `\\r`, or `\\n`).",
                        "short_description": "Returns `true` if `text` is a newline character (either `\\r\\n`, `\\r`, or `\\n`).",
                        "line": 1084,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "text",
                                            "description": "The text to check",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "isNewLine",
                        "name_prefix": "Document.",
                        "path": "Document.isNewLine",
                        "outFile": "document.html#Document.isNewLine"
                    },
                    {
                        "id": "new Document",
                        "type": "constructor",
                        "description": "Creates a new `Document`. If `text` is included, the `Document` contains those strings; otherwise, it's empty.",
                        "short_description": "Creates a new `Document`. If `text` is included, the `Document` contains those strings; otherwise, it's empty.",
                        "line": 953,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "text",
                                            "description": "The starting text",
                                            "types": [
                                                "String",
                                                "Array"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "new",
                        "name_prefix": "Document.",
                        "path": "Document.new",
                        "outFile": "document.html#Document.new"
                    },
                    {
                        "id": "Document.remove",
                        "type": "class method",
                        "description": "Removes the `range` from the document.",
                        "short_description": "Removes the `range` from the document.",
                        "line": 1324,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "range",
                                            "description": "A specified Range to remove",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": "Returns the new `start` property of the range, which contains `startRow` and `startColumn`. If `range` is empty, this function returns the unmodified value of `range.start`."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "remove",
                        "name_prefix": "Document.",
                        "path": "Document.remove",
                        "outFile": "document.html#Document.remove"
                    },
                    {
                        "id": "Document.removeInLine",
                        "type": "class method",
                        "description": "Removes the specified columns from the `row`. This method also triggers the `'change'` event.",
                        "short_description": "Removes the specified columns from the `row`. This method also triggers the `'change'` event.",
                        "line": 1363,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row to remove from",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "startColumn",
                                            "description": "The column to start removing at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "endColumn",
                                            "description": "The column to stop removing at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": "Returns an object containing `startRow` and `startColumn`, indicating the new row and column values.<br/>If `startColumn` is equal to `endColumn`, this function returns nothing."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "removeInLine",
                        "name_prefix": "Document.",
                        "path": "Document.removeInLine",
                        "outFile": "document.html#Document.removeInLine"
                    },
                    {
                        "id": "Document.removeLines",
                        "type": "class method",
                        "description": "Removes a range of full lines. This method also triggers the `'change'` event.",
                        "short_description": "Removes a range of full lines. This method also triggers the `'change'` event.",
                        "line": 1391,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "firstRow",
                                            "description": "The first row to be removed",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "lastRow",
                                            "description": "The last row to be removed",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "isArray": true,
                                        "description": "Returns all the removed lines."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "removeLines",
                        "name_prefix": "Document.",
                        "path": "Document.removeLines",
                        "outFile": "document.html#Document.removeLines"
                    },
                    {
                        "id": "Document.removeNewLine",
                        "type": "class method",
                        "description": "Removes the new line between `row` and the row immediately following it. This method also triggers the `'change'` event.",
                        "short_description": "Removes the new line between `row` and the row immediately following it. This method also triggers the `'change'` event.",
                        "line": 1413,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row to check",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "removeNewLine",
                        "name_prefix": "Document.",
                        "path": "Document.removeNewLine",
                        "outFile": "document.html#Document.removeNewLine"
                    },
                    {
                        "id": "Document.replace",
                        "type": "class method",
                        "description": "Replaces a range in the document with the new `text`.",
                        "short_description": "Replaces a range in the document with the new `text`.",
                        "line": 1435,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "range",
                                            "description": "A specified Range to replace",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "text",
                                            "description": "The new text to use as a replacement",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": "Returns an object containing the final row and column, like this:\n{row: endRow, column: 0}\nIf the text and range are empty, this function returns an object containing the current `range.start` value.\nIf the text is the exact same as what currently exists, this function returns an object containing the current `range.end` value."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "replace",
                        "name_prefix": "Document.",
                        "path": "Document.replace",
                        "outFile": "document.html#Document.replace"
                    },
                    {
                        "id": "Document.revertDeltas",
                        "type": "class method",
                        "description": "Reverts any changes previously applied. These can be either `'includeText'`, `'insertLines'`, `'removeText'`, and `'removeLines'`.",
                        "short_description": "Reverts any changes previously applied. These can be either `'includeText'`, `'insertLines'`, `'removeText'`, and `'removeLines'`.",
                        "line": 1485,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "deltas",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "revertDeltas",
                        "name_prefix": "Document.",
                        "path": "Document.revertDeltas",
                        "outFile": "document.html#Document.revertDeltas"
                    },
                    {
                        "id": "Document.setNewLineMode",
                        "type": "class method",
                        "description": "[Sets the new line mode.]{: #Document.setNewLineMode.desc}",
                        "short_description": "[Sets the new line mode.]{: #Document.setNewLineMode.desc}",
                        "line": 1063,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "newLineMode",
                                            "description": "[The newline mode to use; can be either `windows`, `unix`, or `auto`]{: #Document.setNewLineMode.param}",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "setNewLineMode",
                        "name_prefix": "Document.",
                        "path": "Document.setNewLineMode",
                        "outFile": "document.html#Document.setNewLineMode"
                    },
                    {
                        "id": "Document.setValue",
                        "type": "class method",
                        "description": "Replaces all the lines in the current `Document` with the value of `text`.",
                        "short_description": "Replaces all the lines in the current `Document` with the value of `text`.",
                        "line": 978,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "text",
                                            "description": "The text to use",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "setValue",
                        "name_prefix": "Document.",
                        "path": "Document.setValue",
                        "outFile": "document.html#Document.setValue"
                    },
                    {
                        "id": "Document@change",
                        "type": "event",
                        "description": "Fires whenever the document changes.\n\nSeveral methods trigger different `\"change\"` events. Below is a list of each action type, followed by each property that's also available:\n\n* `\"insertLines\"` (emitted by [[Document.insertLines]])\n* `range`: the [[Range]] of the change within the document\n* `lines`: the lines in the document that are changing\n* `\"insertText\"` (emitted by [[Document.insertNewLine]])\n* `range`: the [[Range]] of the change within the document\n* `text`: the text that's being added\n* `\"removeLines\"` (emitted by [[Document.insertLines]])\n* `range`: the [[Range]] of the change within the document\n* `lines`: the lines in the document that were removed\n* `nl`: the new line character (as defined by [[Document.getNewLineCharacter]])\n* `\"removeText\"` (emitted by [[Document.removeInLine]] and [[Document.removeNewLine]])\n* `range`: the [[Range]] of the change within the document\n* `text`: the text that's being removed",
                        "short_description": "Fires whenever the document changes.\n",
                        "line": 1192,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "e",
                                            "description": "Contains at least one property called `\"action\"`. `\"action\"` indicates the action that triggered the change. Each action also has a set of additional properties.",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                        "name": "change",
                        "name_prefix": "Document@",
                        "path": "Document.event.change",
                        "outFile": "document.html#Document.event.change"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/document.js",
                "subclasses": [],
                "name": "Document",
                "path": "Document",
                "outFile": "document.html"
            },
            {
                "id": "Editor",
                "type": "class",
                "description": "The main entry point into the Ace functionality. \n\nThe `Editor` manages the `[[EditSession]]` (which manages `[[Document]]`s), as well as the `[[VirtualRenderer]]`, which draws everything to the screen. \n\nEvent sessions dealing with the mouse and keyboard are bubbled up from `Document` to the `Editor`, which decides what to do with them.",
                "short_description": "The main entry point into the Ace functionality. \n",
                "line": 5118,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "Editor.$getSelectedRows",
                        "type": "class method",
                        "description": "Returns an object indicating the currently selected rows. The object looks like this:\n```json\n{ first: range.start.row, last: range.end.row }\n```",
                        "short_description": "Returns an object indicating the currently selected rows. The object looks like this:\n```json\n{ first: range.start.row, last: range.end.row }\n```",
                        "line": 6490,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "$getSelectedRows",
                        "name_prefix": "Editor.",
                        "path": "Editor.$getSelectedRows",
                        "outFile": "editor.html#Editor.$getSelectedRows"
                    },
                    {
                        "id": "Editor.$getVisibleRowCount",
                        "type": "class method",
                        "description": "Returns the number of currently visibile rows.",
                        "short_description": "Returns the number of currently visibile rows.",
                        "line": 6557,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "$getVisibleRowCount",
                        "name_prefix": "Editor.",
                        "path": "Editor.$getVisibleRowCount",
                        "outFile": "editor.html#Editor.$getVisibleRowCount"
                    },
                    {
                        "id": "Editor.$moveLines",
                        "type": "class method",
                        "description": "Executes a specific function, which can be anything that manipulates selected lines, such as copying them, duplicating them, or shifting them.",
                        "short_description": "Executes a specific function, which can be anything that manipulates selected lines, such as copying them, duplicating them, or shifting them.",
                        "line": 6461,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "mover",
                                            "description": "A method to call on each selected row",
                                            "types": [
                                                "Function"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "$moveLines",
                        "name_prefix": "Editor.",
                        "path": "Editor.$moveLines",
                        "outFile": "editor.html#Editor.$moveLines"
                    },
                    {
                        "id": "Editor.blockOutdent",
                        "type": "class method",
                        "description": "Outdents the current line.",
                        "short_description": "Outdents the current line.",
                        "line": 6316,
                        "author": [],
                        "related": "EditSession.outdentRows",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "blockOutdent",
                        "name_prefix": "Editor.",
                        "path": "Editor.blockOutdent",
                        "outFile": "editor.html#Editor.blockOutdent"
                    },
                    {
                        "id": "Editor.blur",
                        "type": "class method",
                        "description": "Blurs the current `textInput`.",
                        "short_description": "Blurs the current `textInput`.",
                        "line": 5455,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "blur",
                        "name_prefix": "Editor.",
                        "path": "Editor.blur",
                        "outFile": "editor.html#Editor.blur"
                    },
                    {
                        "id": "Editor.centerSelection",
                        "type": "class method",
                        "description": "Attempts to center the current selection on the screen.",
                        "short_description": "Attempts to center the current selection on the screen.",
                        "line": 6654,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "centerSelection",
                        "name_prefix": "Editor.",
                        "path": "Editor.centerSelection",
                        "outFile": "editor.html#Editor.centerSelection"
                    },
                    {
                        "id": "Editor.clearSelection",
                        "type": "class method",
                        "description": "{:Selection.clearSelection}",
                        "short_description": "{:Selection.clearSelection}",
                        "line": 6708,
                        "author": [],
                        "related": "Selection.clearSelection",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "clearSelection",
                        "name_prefix": "Editor.",
                        "path": "Editor.clearSelection",
                        "outFile": "editor.html#Editor.clearSelection"
                    },
                    {
                        "id": "Editor.copyLinesDown",
                        "type": "class method",
                        "description": "Copies all the selected lines down one row.",
                        "short_description": "Copies all the selected lines down one row.",
                        "line": 6448,
                        "author": [],
                        "related": "EditSession.duplicateLines",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "On success, returns the number of new rows added; in other words, `lastRow - firstRow + 1`."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "copyLinesDown",
                        "name_prefix": "Editor.",
                        "path": "Editor.copyLinesDown",
                        "outFile": "editor.html#Editor.copyLinesDown"
                    },
                    {
                        "id": "Editor.copyLinesUp",
                        "type": "class method",
                        "description": "Copies all the selected lines up one row.",
                        "short_description": "Copies all the selected lines up one row.",
                        "line": 6436,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "On success, returns 0."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "copyLinesUp",
                        "name_prefix": "Editor.",
                        "path": "Editor.copyLinesUp",
                        "outFile": "editor.html#Editor.copyLinesUp"
                    },
                    {
                        "id": "Editor.destroy",
                        "type": "class method",
                        "description": "Cleans up the entire editor.",
                        "short_description": "Cleans up the entire editor.",
                        "line": 7116,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "destroy",
                        "name_prefix": "Editor.",
                        "path": "Editor.destroy",
                        "outFile": "editor.html#Editor.destroy"
                    },
                    {
                        "id": "Editor.find",
                        "type": "class method",
                        "description": "Attempts to find `needle` within the document. For more information on `options`, see [[Search `Search`]].",
                        "short_description": "Attempts to find `needle` within the document. For more information on `options`, see [[Search `Search`]].",
                        "line": 7010,
                        "author": [],
                        "related": "Search.find",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "needle",
                                            "description": "The text to search for (optional)",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "options",
                                            "description": "An object defining various search properties",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "animate",
                                            "description": "If `true` animate scrolling",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "find",
                        "name_prefix": "Editor.",
                        "path": "Editor.find",
                        "outFile": "editor.html#Editor.find"
                    },
                    {
                        "id": "Editor.findNext",
                        "type": "class method",
                        "description": "Performs another search for `needle` in the document. For more information on `options`, see [[Search `Search`]].",
                        "short_description": "Performs another search for `needle` in the document. For more information on `options`, see [[Search `Search`]].",
                        "line": 7058,
                        "author": [],
                        "related": "Editor.find",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "options",
                                            "description": "search options",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "animate",
                                            "description": "If `true` animate scrolling",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "findNext",
                        "name_prefix": "Editor.",
                        "path": "Editor.findNext",
                        "outFile": "editor.html#Editor.findNext"
                    },
                    {
                        "id": "Editor.findPrevious",
                        "type": "class method",
                        "description": "Performs a search for `needle` backwards. For more information on `options`, see [[Search `Search`]].",
                        "short_description": "Performs a search for `needle` backwards. For more information on `options`, see [[Search `Search`]].",
                        "line": 7070,
                        "author": [],
                        "related": "Editor.find",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "options",
                                            "description": "search options",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "animate",
                                            "description": "If `true` animate scrolling",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "findPrevious",
                        "name_prefix": "Editor.",
                        "path": "Editor.findPrevious",
                        "outFile": "editor.html#Editor.findPrevious"
                    },
                    {
                        "id": "Editor.focus",
                        "type": "class method",
                        "description": "Brings the current `textInput` into focus.",
                        "short_description": "Brings the current `textInput` into focus.",
                        "line": 5432,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "focus",
                        "name_prefix": "Editor.",
                        "path": "Editor.focus",
                        "outFile": "editor.html#Editor.focus"
                    },
                    {
                        "id": "Editor.getBehavioursEnabled",
                        "type": "class method",
                        "description": "Returns `true` if the behaviors are currently enabled. {:BehaviorsDef}",
                        "short_description": "Returns `true` if the behaviors are currently enabled. {:BehaviorsDef}",
                        "line": 6099,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getBehavioursEnabled",
                        "name_prefix": "Editor.",
                        "path": "Editor.getBehavioursEnabled",
                        "outFile": "editor.html#Editor.getBehavioursEnabled"
                    },
                    {
                        "id": "Editor.getCopyText",
                        "type": "class method",
                        "description": "Returns the string of text currently highlighted.",
                        "short_description": "Returns the string of text currently highlighted.",
                        "line": 5679,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getCopyText",
                        "name_prefix": "Editor.",
                        "path": "Editor.getCopyText",
                        "outFile": "editor.html#Editor.getCopyText"
                    },
                    {
                        "id": "Editor.getCursorPosition",
                        "type": "class method",
                        "description": "Gets the current position of the cursor.",
                        "short_description": "Gets the current position of the cursor.",
                        "line": 6666,
                        "author": [],
                        "related": "Selection.getCursor",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": "An object that looks something like this:  \n```json\n{ row: currRow, column: currCol }\n```"
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getCursorPosition",
                        "name_prefix": "Editor.",
                        "path": "Editor.getCursorPosition",
                        "outFile": "editor.html#Editor.getCursorPosition"
                    },
                    {
                        "id": "Editor.getCursorPositionScreen",
                        "type": "class method",
                        "description": "Returns the screen position of the cursor.",
                        "short_description": "Returns the screen position of the cursor.",
                        "line": 6679,
                        "author": [],
                        "related": "EditSession.documentToScreenPosition",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getCursorPositionScreen",
                        "name_prefix": "Editor.",
                        "path": "Editor.getCursorPositionScreen",
                        "outFile": "editor.html#Editor.getCursorPositionScreen"
                    },
                    {
                        "id": "Editor.getDragDelay",
                        "type": "class method",
                        "description": "Returns the current mouse drag delay.",
                        "short_description": "Returns the current mouse drag delay.",
                        "line": 5893,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getDragDelay",
                        "name_prefix": "Editor.",
                        "path": "Editor.getDragDelay",
                        "outFile": "editor.html#Editor.getDragDelay"
                    },
                    {
                        "id": "Editor.getFirstVisibleRow",
                        "type": "class method",
                        "description": "{:VirtualRenderer.getFirstVisibleRow}",
                        "short_description": "{:VirtualRenderer.getFirstVisibleRow}",
                        "line": 6518,
                        "author": [],
                        "related": "VirtualRenderer.getFirstVisibleRow",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getFirstVisibleRow",
                        "name_prefix": "Editor.",
                        "path": "Editor.getFirstVisibleRow",
                        "outFile": "editor.html#Editor.getFirstVisibleRow"
                    },
                    {
                        "id": "Editor.getHighlightActiveLine",
                        "type": "class method",
                        "description": "Returns `true` if current lines are always highlighted.",
                        "short_description": "Returns `true` if current lines are always highlighted.",
                        "line": 5953,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getHighlightActiveLine",
                        "name_prefix": "Editor.",
                        "path": "Editor.getHighlightActiveLine",
                        "outFile": "editor.html#Editor.getHighlightActiveLine"
                    },
                    {
                        "id": "Editor.getHighlightSelectedWord",
                        "type": "class method",
                        "description": "Returns `true` if currently highlighted words are to be highlighted.",
                        "short_description": "Returns `true` if currently highlighted words are to be highlighted.",
                        "line": 5989,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getHighlightSelectedWord",
                        "name_prefix": "Editor.",
                        "path": "Editor.getHighlightSelectedWord",
                        "outFile": "editor.html#Editor.getHighlightSelectedWord"
                    },
                    {
                        "id": "Editor.getKeyboardHandler",
                        "type": "class method",
                        "description": "Returns the keyboard handler, such as \"vim\" or \"windows\".",
                        "short_description": "Returns the keyboard handler, such as \"vim\" or \"windows\".",
                        "line": 5174,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getKeyboardHandler",
                        "name_prefix": "Editor.",
                        "path": "Editor.getKeyboardHandler",
                        "outFile": "editor.html#Editor.getKeyboardHandler"
                    },
                    {
                        "id": "Editor.getLastSearchOptions",
                        "type": "class method",
                        "description": "{:Search.getOptions} For more information on `options`, see [[Search `Search`]].",
                        "short_description": "{:Search.getOptions} For more information on `options`, see [[Search `Search`]].",
                        "line": 7001,
                        "author": [],
                        "related": "Search.getOptions",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getLastSearchOptions",
                        "name_prefix": "Editor.",
                        "path": "Editor.getLastSearchOptions",
                        "outFile": "editor.html#Editor.getLastSearchOptions"
                    },
                    {
                        "id": "Editor.getLastVisibleRow",
                        "type": "class method",
                        "description": "{:VirtualRenderer.getLastVisibleRow}",
                        "short_description": "{:VirtualRenderer.getLastVisibleRow}",
                        "line": 6527,
                        "author": [],
                        "related": "VirtualRenderer.getLastVisibleRow",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getLastVisibleRow",
                        "name_prefix": "Editor.",
                        "path": "Editor.getLastVisibleRow",
                        "outFile": "editor.html#Editor.getLastVisibleRow"
                    },
                    {
                        "id": "Editor.getOverwrite",
                        "type": "class method",
                        "description": "Returns `true` if overwrites are enabled; `false` otherwise.",
                        "short_description": "Returns `true` if overwrites are enabled; `false` otherwise.",
                        "line": 5846,
                        "author": [],
                        "related": "EditSession.getOverwrite",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getOverwrite",
                        "name_prefix": "Editor.",
                        "path": "Editor.getOverwrite",
                        "outFile": "editor.html#Editor.getOverwrite"
                    },
                    {
                        "id": "Editor.getPrintMarginColumn",
                        "type": "class method",
                        "description": "Returns the column number of where the print margin is.",
                        "short_description": "Returns the column number of where the print margin is.",
                        "line": 6060,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getPrintMarginColumn",
                        "name_prefix": "Editor.",
                        "path": "Editor.getPrintMarginColumn",
                        "outFile": "editor.html#Editor.getPrintMarginColumn"
                    },
                    {
                        "id": "Editor.getReadOnly",
                        "type": "class method",
                        "description": "Returns `true` if the editor is set to read-only mode.",
                        "short_description": "Returns `true` if the editor is set to read-only mode.",
                        "line": 6079,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getReadOnly",
                        "name_prefix": "Editor.",
                        "path": "Editor.getReadOnly",
                        "outFile": "editor.html#Editor.getReadOnly"
                    },
                    {
                        "id": "Editor.getScrollSpeed",
                        "type": "class method",
                        "description": "Returns the value indicating how fast the mouse scroll speed is.",
                        "short_description": "Returns the value indicating how fast the mouse scroll speed is.",
                        "line": 5874,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getScrollSpeed",
                        "name_prefix": "Editor.",
                        "path": "Editor.getScrollSpeed",
                        "outFile": "editor.html#Editor.getScrollSpeed"
                    },
                    {
                        "id": "Editor.getSelection",
                        "type": "class method",
                        "description": "Returns the currently highlighted selection.",
                        "short_description": "Returns the currently highlighted selection.",
                        "line": 5338,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": "The highlighted selection"
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getSelection",
                        "name_prefix": "Editor.",
                        "path": "Editor.getSelection",
                        "outFile": "editor.html#Editor.getSelection"
                    },
                    {
                        "id": "Editor.getSelectionRange",
                        "type": "class method",
                        "description": "{:Selection.getRange}",
                        "short_description": "{:Selection.getRange}",
                        "line": 6688,
                        "author": [],
                        "related": "Selection.getRange",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getSelectionRange",
                        "name_prefix": "Editor.",
                        "path": "Editor.getSelectionRange",
                        "outFile": "editor.html#Editor.getSelectionRange"
                    },
                    {
                        "id": "Editor.getSelectionStyle",
                        "type": "class method",
                        "description": "Returns the current selection style.",
                        "short_description": "Returns the current selection style.",
                        "line": 5928,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getSelectionStyle",
                        "name_prefix": "Editor.",
                        "path": "Editor.getSelectionStyle",
                        "outFile": "editor.html#Editor.getSelectionStyle"
                    },
                    {
                        "id": "Editor.getSession",
                        "type": "class method",
                        "description": "Returns the current session being used.",
                        "short_description": "Returns the current session being used.",
                        "line": 5297,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "EditSession",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getSession",
                        "name_prefix": "Editor.",
                        "path": "Editor.getSession",
                        "outFile": "editor.html#Editor.getSession"
                    },
                    {
                        "id": "Editor.getShowFoldWidgets",
                        "type": "class method",
                        "description": "Returns `true` if the fold widgets are shown.",
                        "short_description": "Returns `true` if the fold widgets are shown.",
                        "line": 6124,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getShowFoldWidgets",
                        "name_prefix": "Editor.",
                        "path": "Editor.getShowFoldWidgets",
                        "outFile": "editor.html#Editor.getShowFoldWidgets"
                    },
                    {
                        "id": "Editor.getShowInvisibles",
                        "type": "class method",
                        "description": "Returns `true` if invisible characters are being shown.",
                        "short_description": "Returns `true` if invisible characters are being shown.",
                        "line": 6015,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getShowInvisibles",
                        "name_prefix": "Editor.",
                        "path": "Editor.getShowInvisibles",
                        "outFile": "editor.html#Editor.getShowInvisibles"
                    },
                    {
                        "id": "Editor.getShowPrintMargin",
                        "type": "class method",
                        "description": "Returns `true` if the print margin is being shown.",
                        "short_description": "Returns `true` if the print margin is being shown.",
                        "line": 6041,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getShowPrintMargin",
                        "name_prefix": "Editor.",
                        "path": "Editor.getShowPrintMargin",
                        "outFile": "editor.html#Editor.getShowPrintMargin"
                    },
                    {
                        "id": "Editor.getTheme",
                        "type": "class method",
                        "description": "{:VirtualRenderer.getTheme}",
                        "short_description": "{:VirtualRenderer.getTheme}",
                        "line": 5368,
                        "author": [],
                        "related": "VirtualRenderer.getTheme",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": "The set theme"
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getTheme",
                        "name_prefix": "Editor.",
                        "path": "Editor.getTheme",
                        "outFile": "editor.html#Editor.getTheme"
                    },
                    {
                        "id": "Editor.getValue",
                        "type": "class method",
                        "description": "Returns the current session's content.",
                        "short_description": "Returns the current session's content.",
                        "line": 5328,
                        "author": [],
                        "related": "EditSession.getValue",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "getValue",
                        "name_prefix": "Editor.",
                        "path": "Editor.getValue",
                        "outFile": "editor.html#Editor.getValue"
                    },
                    {
                        "id": "Editor.gotoLine",
                        "type": "class method",
                        "description": "Moves the cursor to the specified line number, and also into the indiciated column.",
                        "short_description": "Moves the cursor to the specified line number, and also into the indiciated column.",
                        "line": 6774,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "lineNumber",
                                            "description": "The line number to go to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "A column number to go to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "animate",
                                            "description": "If `true` animates scolling",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "gotoLine",
                        "name_prefix": "Editor.",
                        "path": "Editor.gotoLine",
                        "outFile": "editor.html#Editor.gotoLine"
                    },
                    {
                        "id": "Editor.gotoPageDown",
                        "type": "class method",
                        "description": "Shifts the document to wherever \"page down\" is, as well as moving the cursor position.",
                        "short_description": "Shifts the document to wherever \"page down\" is, as well as moving the cursor position.",
                        "line": 6604,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "gotoPageDown",
                        "name_prefix": "Editor.",
                        "path": "Editor.gotoPageDown",
                        "outFile": "editor.html#Editor.gotoPageDown"
                    },
                    {
                        "id": "Editor.gotoPageUp",
                        "type": "class method",
                        "description": "Shifts the document to wherever \"page up\" is, as well as moving the cursor position.",
                        "short_description": "Shifts the document to wherever \"page up\" is, as well as moving the cursor position.",
                        "line": 6611,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "gotoPageUp",
                        "name_prefix": "Editor.",
                        "path": "Editor.gotoPageUp",
                        "outFile": "editor.html#Editor.gotoPageUp"
                    },
                    {
                        "id": "Editor.indent",
                        "type": "class method",
                        "description": "Indents the current line.",
                        "short_description": "Indents the current line.",
                        "line": 6288,
                        "author": [],
                        "related": "EditSession.indentRows",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "indent",
                        "name_prefix": "Editor.",
                        "path": "Editor.indent",
                        "outFile": "editor.html#Editor.indent"
                    },
                    {
                        "id": "Editor.insert",
                        "type": "class method",
                        "description": "Inserts `text` into wherever the cursor is pointing.",
                        "short_description": "Inserts `text` into wherever the cursor is pointing.",
                        "line": 5729,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "text",
                                            "description": "The new text to add",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "insert",
                        "name_prefix": "Editor.",
                        "path": "Editor.insert",
                        "outFile": "editor.html#Editor.insert"
                    },
                    {
                        "id": "Editor.isFocused",
                        "type": "class method",
                        "description": "Returns `true` if the current `textInput` is in focus.",
                        "short_description": "Returns `true` if the current `textInput` is in focus.",
                        "line": 5447,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "isFocused",
                        "name_prefix": "Editor.",
                        "path": "Editor.isFocused",
                        "outFile": "editor.html#Editor.isFocused"
                    },
                    {
                        "id": "Editor.isRowFullyVisible",
                        "type": "class method",
                        "description": "Indicates if the entire row is currently visible on the screen.",
                        "short_description": "Indicates if the entire row is currently visible on the screen.",
                        "line": 6546,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row to check",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "isRowFullyVisible",
                        "name_prefix": "Editor.",
                        "path": "Editor.isRowFullyVisible",
                        "outFile": "editor.html#Editor.isRowFullyVisible"
                    },
                    {
                        "id": "Editor.isRowVisible",
                        "type": "class method",
                        "description": "Indicates if the row is currently visible on the screen.",
                        "short_description": "Indicates if the row is currently visible on the screen.",
                        "line": 6536,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row to check",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "isRowVisible",
                        "name_prefix": "Editor.",
                        "path": "Editor.isRowVisible",
                        "outFile": "editor.html#Editor.isRowVisible"
                    },
                    {
                        "id": "Editor.jumpToMatching",
                        "type": "class method",
                        "description": "Moves the cursor's row and column to the next matching bracket.",
                        "short_description": "Moves the cursor's row and column to the next matching bracket.",
                        "line": 6739,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "select",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "jumpToMatching",
                        "name_prefix": "Editor.",
                        "path": "Editor.jumpToMatching",
                        "outFile": "editor.html#Editor.jumpToMatching"
                    },
                    {
                        "id": "Editor.moveCursorTo",
                        "type": "class method",
                        "description": "Moves the cursor to the specified row and column. Note that this does not de-select the current selection.",
                        "short_description": "Moves the cursor to the specified row and column. Note that this does not de-select the current selection.",
                        "line": 6716,
                        "author": [],
                        "related": "Selection.moveCursorTo",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The new row number",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "The new column number",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "moveCursorTo",
                        "name_prefix": "Editor.",
                        "path": "Editor.moveCursorTo",
                        "outFile": "editor.html#Editor.moveCursorTo"
                    },
                    {
                        "id": "Editor.moveCursorToPosition",
                        "type": "class method",
                        "description": "Moves the cursor to the position indicated by `pos.row` and `pos.column`.",
                        "short_description": "Moves the cursor to the position indicated by `pos.row` and `pos.column`.",
                        "line": 6728,
                        "author": [],
                        "related": "Selection.moveCursorToPosition",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "pos",
                                            "description": "An object with two properties, row and column",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "moveCursorToPosition",
                        "name_prefix": "Editor.",
                        "path": "Editor.moveCursorToPosition",
                        "outFile": "editor.html#Editor.moveCursorToPosition"
                    },
                    {
                        "id": "Editor.moveLinesDown",
                        "type": "class method",
                        "description": "Shifts all the selected lines down one row.",
                        "short_description": "Shifts all the selected lines down one row.",
                        "line": 6395,
                        "author": [],
                        "related": "EditSession.moveLinesUp",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "On success, it returns -1."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "moveLinesDown",
                        "name_prefix": "Editor.",
                        "path": "Editor.moveLinesDown",
                        "outFile": "editor.html#Editor.moveLinesDown"
                    },
                    {
                        "id": "Editor.moveLinesUp",
                        "type": "class method",
                        "description": "Shifts all the selected lines up one row.",
                        "short_description": "Shifts all the selected lines up one row.",
                        "line": 6407,
                        "author": [],
                        "related": "EditSession.moveLinesDown",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "On success, it returns -1."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "moveLinesUp",
                        "name_prefix": "Editor.",
                        "path": "Editor.moveLinesUp",
                        "outFile": "editor.html#Editor.moveLinesUp"
                    },
                    {
                        "id": "Editor.moveText",
                        "type": "class method",
                        "description": "Moves a range of text from the given range to the given position. `toPosition` is an object that looks like this:\n```json\n   { row: newRowLocation, column: newColumnLocation }\n```",
                        "short_description": "Moves a range of text from the given range to the given position. `toPosition` is an object that looks like this:\n```json\n   { row: newRowLocation, column: newColumnLocation }\n```",
                        "line": 6418,
                        "author": [],
                        "related": "EditSession.moveText",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "fromRange",
                                            "description": "The range of text you want moved within the document",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "toPosition",
                                            "description": "The location (row and column) where you want to move the text to",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": "The new range where the text was moved to."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "moveText",
                        "name_prefix": "Editor.",
                        "path": "Editor.moveText",
                        "outFile": "editor.html#Editor.moveText"
                    },
                    {
                        "id": "Editor.navigateDown",
                        "type": "class method",
                        "description": "Moves the cursor down in the document the specified number of times. Note that this does de-select the current selection.",
                        "short_description": "Moves the cursor down in the document the specified number of times. Note that this does de-select the current selection.",
                        "line": 6818,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "times",
                                            "description": "The number of times to change navigation",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "navigateDown",
                        "name_prefix": "Editor.",
                        "path": "Editor.navigateDown",
                        "outFile": "editor.html#Editor.navigateDown"
                    },
                    {
                        "id": "Editor.navigateFileEnd",
                        "type": "class method",
                        "description": "Moves the cursor to the end of the current file. Note that this does de-select the current selection.",
                        "short_description": "Moves the cursor to the end of the current file. Note that this does de-select the current selection.",
                        "line": 6888,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "navigateFileEnd",
                        "name_prefix": "Editor.",
                        "path": "Editor.navigateFileEnd",
                        "outFile": "editor.html#Editor.navigateFileEnd"
                    },
                    {
                        "id": "Editor.navigateFileStart",
                        "type": "class method",
                        "description": "Moves the cursor to the start of the current file. Note that this does de-select the current selection.",
                        "short_description": "Moves the cursor to the start of the current file. Note that this does de-select the current selection.",
                        "line": 6899,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "navigateFileStart",
                        "name_prefix": "Editor.",
                        "path": "Editor.navigateFileStart",
                        "outFile": "editor.html#Editor.navigateFileStart"
                    },
                    {
                        "id": "Editor.navigateLeft",
                        "type": "class method",
                        "description": "Moves the cursor left in the document the specified number of times. Note that this does de-select the current selection.",
                        "short_description": "Moves the cursor left in the document the specified number of times. Note that this does de-select the current selection.",
                        "line": 6830,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "times",
                                            "description": "The number of times to change navigation",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "navigateLeft",
                        "name_prefix": "Editor.",
                        "path": "Editor.navigateLeft",
                        "outFile": "editor.html#Editor.navigateLeft"
                    },
                    {
                        "id": "Editor.navigateLineEnd",
                        "type": "class method",
                        "description": "Moves the cursor to the end of the current line. Note that this does de-select the current selection.",
                        "short_description": "Moves the cursor to the end of the current line. Note that this does de-select the current selection.",
                        "line": 6879,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "navigateLineEnd",
                        "name_prefix": "Editor.",
                        "path": "Editor.navigateLineEnd",
                        "outFile": "editor.html#Editor.navigateLineEnd"
                    },
                    {
                        "id": "Editor.navigateLineStart",
                        "type": "class method",
                        "description": "Moves the cursor to the start of the current line. Note that this does de-select the current selection.",
                        "short_description": "Moves the cursor to the start of the current line. Note that this does de-select the current selection.",
                        "line": 6870,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "navigateLineStart",
                        "name_prefix": "Editor.",
                        "path": "Editor.navigateLineStart",
                        "outFile": "editor.html#Editor.navigateLineStart"
                    },
                    {
                        "id": "Editor.navigateRight",
                        "type": "class method",
                        "description": "Moves the cursor right in the document the specified number of times. Note that this does de-select the current selection.",
                        "short_description": "Moves the cursor right in the document the specified number of times. Note that this does de-select the current selection.",
                        "line": 6850,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "times",
                                            "description": "The number of times to change navigation",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "navigateRight",
                        "name_prefix": "Editor.",
                        "path": "Editor.navigateRight",
                        "outFile": "editor.html#Editor.navigateRight"
                    },
                    {
                        "id": "Editor.navigateTo",
                        "type": "class method",
                        "description": "Moves the cursor to the specified row and column. Note that this does de-select the current selection.",
                        "short_description": "Moves the cursor to the specified row and column. Note that this does de-select the current selection.",
                        "line": 6793,
                        "author": [],
                        "related": "Editor.moveCursorTo",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The new row number",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "The new column number",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "navigateTo",
                        "name_prefix": "Editor.",
                        "path": "Editor.navigateTo",
                        "outFile": "editor.html#Editor.navigateTo"
                    },
                    {
                        "id": "Editor.navigateUp",
                        "type": "class method",
                        "description": "Moves the cursor up in the document the specified number of times. Note that this does de-select the current selection.",
                        "short_description": "Moves the cursor up in the document the specified number of times. Note that this does de-select the current selection.",
                        "line": 6806,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "times",
                                            "description": "The number of times to change navigation",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "navigateUp",
                        "name_prefix": "Editor.",
                        "path": "Editor.navigateUp",
                        "outFile": "editor.html#Editor.navigateUp"
                    },
                    {
                        "id": "Editor.navigateWordLeft",
                        "type": "class method",
                        "description": "Moves the cursor to the word immediately to the left of the current position. Note that this does de-select the current selection.",
                        "short_description": "Moves the cursor to the word immediately to the left of the current position. Note that this does de-select the current selection.",
                        "line": 6919,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "navigateWordLeft",
                        "name_prefix": "Editor.",
                        "path": "Editor.navigateWordLeft",
                        "outFile": "editor.html#Editor.navigateWordLeft"
                    },
                    {
                        "id": "Editor.navigateWordRight",
                        "type": "class method",
                        "description": "Moves the cursor to the word immediately to the right of the current position. Note that this does de-select the current selection.",
                        "short_description": "Moves the cursor to the word immediately to the right of the current position. Note that this does de-select the current selection.",
                        "line": 6910,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "navigateWordRight",
                        "name_prefix": "Editor.",
                        "path": "Editor.navigateWordRight",
                        "outFile": "editor.html#Editor.navigateWordRight"
                    },
                    {
                        "id": "new Editor",
                        "type": "constructor",
                        "description": "Creates a new `Editor` object.",
                        "short_description": "Creates a new `Editor` object.",
                        "line": 5129,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "renderer",
                                            "description": "Associated `VirtualRenderer` that draws everything",
                                            "types": [
                                                "VirtualRenderer"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "session",
                                            "description": "The `EditSession` to refer to",
                                            "types": [
                                                "EditSession"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "new",
                        "name_prefix": "Editor.",
                        "path": "Editor.new",
                        "outFile": "editor.html#Editor.new"
                    },
                    {
                        "id": "Editor.onCopy",
                        "type": "class method",
                        "description": "Called whenever a text \"copy\" happens.",
                        "short_description": "Called whenever a text \"copy\" happens.",
                        "line": 5694,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "onCopy",
                        "name_prefix": "Editor.",
                        "path": "Editor.onCopy",
                        "outFile": "editor.html#Editor.onCopy"
                    },
                    {
                        "id": "Editor.onCursorChange",
                        "type": "class method",
                        "description": "Emitted when the selection changes.",
                        "short_description": "Emitted when the selection changes.",
                        "line": 5536,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "onCursorChange",
                        "name_prefix": "Editor.",
                        "path": "Editor.onCursorChange",
                        "outFile": "editor.html#Editor.onCursorChange"
                    },
                    {
                        "id": "Editor.onCut",
                        "type": "class method",
                        "description": "Called whenever a text \"cut\" happens.",
                        "short_description": "Called whenever a text \"cut\" happens.",
                        "line": 5701,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "onCut",
                        "name_prefix": "Editor.",
                        "path": "Editor.onCut",
                        "outFile": "editor.html#Editor.onCut"
                    },
                    {
                        "id": "Editor.onPaste",
                        "type": "class method",
                        "description": "Called whenever a text \"paste\" happens.",
                        "short_description": "Called whenever a text \"paste\" happens.",
                        "line": 5715,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "text",
                                            "description": "The pasted text",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "onPaste",
                        "name_prefix": "Editor.",
                        "path": "Editor.onPaste",
                        "outFile": "editor.html#Editor.onPaste"
                    },
                    {
                        "id": "Editor.redo",
                        "type": "class method",
                        "description": "{:UndoManager.redo}",
                        "short_description": "{:UndoManager.redo}",
                        "line": 7105,
                        "author": [],
                        "related": "UndoManager.redo",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "redo",
                        "name_prefix": "Editor.",
                        "path": "Editor.redo",
                        "outFile": "editor.html#Editor.redo"
                    },
                    {
                        "id": "Editor.remove",
                        "type": "class method",
                        "description": "Removes words of text from the editor. A \"word\" is defined as a string of characters bookended by whitespace.",
                        "short_description": "Removes words of text from the editor. A \"word\" is defined as a string of characters bookended by whitespace.",
                        "line": 6140,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "dir",
                                            "description": "The direction of the deletion to occur, either \"left\" or \"right\"",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "remove",
                        "name_prefix": "Editor.",
                        "path": "Editor.remove",
                        "outFile": "editor.html#Editor.remove"
                    },
                    {
                        "id": "Editor.removeLines",
                        "type": "class method",
                        "description": "Removes all the lines in the current selection",
                        "short_description": "Removes all the lines in the current selection",
                        "line": 6359,
                        "author": [],
                        "related": "EditSession.remove",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "removeLines",
                        "name_prefix": "Editor.",
                        "path": "Editor.removeLines",
                        "outFile": "editor.html#Editor.removeLines"
                    },
                    {
                        "id": "Editor.removeToLineEnd",
                        "type": "class method",
                        "description": "Removes all the words to the right of the current selection, until the end of the line.",
                        "short_description": "Removes all the words to the right of the current selection, until the end of the line.",
                        "line": 6201,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "removeToLineEnd",
                        "name_prefix": "Editor.",
                        "path": "Editor.removeToLineEnd",
                        "outFile": "editor.html#Editor.removeToLineEnd"
                    },
                    {
                        "id": "Editor.removeToLineStart",
                        "type": "class method",
                        "description": "Removes all the words to the left of the current selection, until the start of the line.",
                        "short_description": "Removes all the words to the left of the current selection, until the start of the line.",
                        "line": 6190,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "removeToLineStart",
                        "name_prefix": "Editor.",
                        "path": "Editor.removeToLineStart",
                        "outFile": "editor.html#Editor.removeToLineStart"
                    },
                    {
                        "id": "Editor.removeWordLeft",
                        "type": "class method",
                        "description": "Removes the word directly to the left of the current selection.",
                        "short_description": "Removes the word directly to the left of the current selection.",
                        "line": 6179,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "removeWordLeft",
                        "name_prefix": "Editor.",
                        "path": "Editor.removeWordLeft",
                        "outFile": "editor.html#Editor.removeWordLeft"
                    },
                    {
                        "id": "Editor.removeWordRight",
                        "type": "class method",
                        "description": "Removes the word directly to the right of the current selection.",
                        "short_description": "Removes the word directly to the right of the current selection.",
                        "line": 6168,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "removeWordRight",
                        "name_prefix": "Editor.",
                        "path": "Editor.removeWordRight",
                        "outFile": "editor.html#Editor.removeWordRight"
                    },
                    {
                        "id": "Editor.replace",
                        "type": "class method",
                        "description": "Replaces the first occurance of `options.needle` with the value in `replacement`.",
                        "short_description": "Replaces the first occurance of `options.needle` with the value in `replacement`.",
                        "line": 6928,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "replacement",
                                            "description": "The text to replace with",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "options",
                                            "description": "The [[Search `Search`]] options to use",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "replace",
                        "name_prefix": "Editor.",
                        "path": "Editor.replace",
                        "outFile": "editor.html#Editor.replace"
                    },
                    {
                        "id": "Editor.replaceAll",
                        "type": "class method",
                        "description": "Replaces all occurances of `options.needle` with the value in `replacement`.",
                        "short_description": "Replaces all occurances of `options.needle` with the value in `replacement`.",
                        "line": 6955,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "replacement",
                                            "description": "The text to replace with",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "options",
                                            "description": "The [[Search `Search`]] options to use",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "replaceAll",
                        "name_prefix": "Editor.",
                        "path": "Editor.replaceAll",
                        "outFile": "editor.html#Editor.replaceAll"
                    },
                    {
                        "id": "Editor.resize",
                        "type": "class method",
                        "description": "{:VirtualRenderer.onResize}",
                        "short_description": "{:VirtualRenderer.onResize}",
                        "line": 5347,
                        "author": [],
                        "related": "VirtualRenderer.onResize",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "force",
                                            "description": "If `true`, recomputes the size, even if the height and width haven't changed",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "resize",
                        "name_prefix": "Editor.",
                        "path": "Editor.resize",
                        "outFile": "editor.html#Editor.resize"
                    },
                    {
                        "id": "Editor.scrollPageDown",
                        "type": "class method",
                        "description": "Scrolls the document to wherever \"page down\" is, without changing the cursor position.",
                        "short_description": "Scrolls the document to wherever \"page down\" is, without changing the cursor position.",
                        "line": 6618,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "scrollPageDown",
                        "name_prefix": "Editor.",
                        "path": "Editor.scrollPageDown",
                        "outFile": "editor.html#Editor.scrollPageDown"
                    },
                    {
                        "id": "Editor.scrollPageUp",
                        "type": "class method",
                        "description": "Scrolls the document to wherever \"page up\" is, without changing the cursor position.",
                        "short_description": "Scrolls the document to wherever \"page up\" is, without changing the cursor position.",
                        "line": 6625,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "scrollPageUp",
                        "name_prefix": "Editor.",
                        "path": "Editor.scrollPageUp",
                        "outFile": "editor.html#Editor.scrollPageUp"
                    },
                    {
                        "id": "Editor.scrollToLine",
                        "type": "class method",
                        "description": "Scrolls to a line. If `center` is `true`, it puts the line in middle of screen (or attempts to).",
                        "short_description": "Scrolls to a line. If `center` is `true`, it puts the line in middle of screen (or attempts to).",
                        "line": 6640,
                        "author": [],
                        "related": "VirtualRenderer.scrollToLine",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "line",
                                            "description": "The line to scroll to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "center",
                                            "description": "If `true`",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "animate",
                                            "description": "If `true` animates scrolling",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "callback",
                                            "description": "Function to be called when the animation has finished",
                                            "types": [
                                                "Function"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "scrollToLine",
                        "name_prefix": "Editor.",
                        "path": "Editor.scrollToLine",
                        "outFile": "editor.html#Editor.scrollToLine"
                    },
                    {
                        "id": "Editor.scrollToRow",
                        "type": "class method",
                        "description": "Moves the editor to the specified row.",
                        "short_description": "Moves the editor to the specified row.",
                        "line": 6632,
                        "author": [],
                        "related": "VirtualRenderer.scrollToRow",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "scrollToRow",
                        "name_prefix": "Editor.",
                        "path": "Editor.scrollToRow",
                        "outFile": "editor.html#Editor.scrollToRow"
                    },
                    {
                        "id": "Editor.selectAll",
                        "type": "class method",
                        "description": "Selects all the text in editor.",
                        "short_description": "Selects all the text in editor.",
                        "line": 6698,
                        "author": [],
                        "related": "Selection.selectAll",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "selectAll",
                        "name_prefix": "Editor.",
                        "path": "Editor.selectAll",
                        "outFile": "editor.html#Editor.selectAll"
                    },
                    {
                        "id": "Editor.selectPageDown",
                        "type": "class method",
                        "description": "Selects the text from the current position of the document until where a \"page down\" finishes.",
                        "short_description": "Selects the text from the current position of the document until where a \"page down\" finishes.",
                        "line": 6590,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "selectPageDown",
                        "name_prefix": "Editor.",
                        "path": "Editor.selectPageDown",
                        "outFile": "editor.html#Editor.selectPageDown"
                    },
                    {
                        "id": "Editor.selectPageUp",
                        "type": "class method",
                        "description": "Selects the text from the current position of the document until where a \"page up\" finishes.",
                        "short_description": "Selects the text from the current position of the document until where a \"page up\" finishes.",
                        "line": 6597,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "selectPageUp",
                        "name_prefix": "Editor.",
                        "path": "Editor.selectPageUp",
                        "outFile": "editor.html#Editor.selectPageUp"
                    },
                    {
                        "id": "Editor.setBehavioursEnabled",
                        "type": "class method",
                        "description": "Specifies whether to use behaviors or not. [\"Behaviors\" in this case is the auto-pairing of special characters, like quotation marks, parenthesis, or brackets.]{: #BehaviorsDef}",
                        "short_description": "Specifies whether to use behaviors or not. [\"Behaviors\" in this case is the auto-pairing of special characters, like quotation marks, parenthesis, or brackets.]{: #BehaviorsDef}",
                        "line": 6089,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "enabled",
                                            "description": "Enables or disables behaviors",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setBehavioursEnabled",
                        "name_prefix": "Editor.",
                        "path": "Editor.setBehavioursEnabled",
                        "outFile": "editor.html#Editor.setBehavioursEnabled"
                    },
                    {
                        "id": "Editor.setDragDelay",
                        "type": "class method",
                        "description": "Sets the delay (in milliseconds) of the mouse drag.",
                        "short_description": "Sets the delay (in milliseconds) of the mouse drag.",
                        "line": 5882,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "dragDelay",
                                            "description": "A value indicating the new delay",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setDragDelay",
                        "name_prefix": "Editor.",
                        "path": "Editor.setDragDelay",
                        "outFile": "editor.html#Editor.setDragDelay"
                    },
                    {
                        "id": "Editor.setFontSize",
                        "type": "class method",
                        "description": "Set a new font size (in pixels) for the editor text.",
                        "short_description": "Set a new font size (in pixels) for the editor text.",
                        "line": 5397,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "size",
                                            "description": "A font size",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setFontSize",
                        "name_prefix": "Editor.",
                        "path": "Editor.setFontSize",
                        "outFile": "editor.html#Editor.setFontSize"
                    },
                    {
                        "id": "Editor.setHighlightActiveLine",
                        "type": "class method",
                        "description": "Determines whether or not the current line should be highlighted.",
                        "short_description": "Determines whether or not the current line should be highlighted.",
                        "line": 5938,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "shouldHighlight",
                                            "description": "Set to `true` to highlight the current line",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setHighlightActiveLine",
                        "name_prefix": "Editor.",
                        "path": "Editor.setHighlightActiveLine",
                        "outFile": "editor.html#Editor.setHighlightActiveLine"
                    },
                    {
                        "id": "Editor.setHighlightSelectedWord",
                        "type": "class method",
                        "description": "Determines if the currently selected word should be highlighted.",
                        "short_description": "Determines if the currently selected word should be highlighted.",
                        "line": 5975,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "shouldHighlight",
                                            "description": "Set to `true` to highlight the currently selected word",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setHighlightSelectedWord",
                        "name_prefix": "Editor.",
                        "path": "Editor.setHighlightSelectedWord",
                        "outFile": "editor.html#Editor.setHighlightSelectedWord"
                    },
                    {
                        "id": "Editor.setKeyboardHandler",
                        "type": "class method",
                        "description": "Sets a new key handler, such as \"vim\" or \"windows\".",
                        "short_description": "Sets a new key handler, such as \"vim\" or \"windows\".",
                        "line": 5164,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "keyboardHandler",
                                            "description": "The new key handler",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setKeyboardHandler",
                        "name_prefix": "Editor.",
                        "path": "Editor.setKeyboardHandler",
                        "outFile": "editor.html#Editor.setKeyboardHandler"
                    },
                    {
                        "id": "Editor.setOverwrite",
                        "type": "class method",
                        "description": "Pass in `true` to enable overwrites in your session, or `false` to disable. If overwrites is enabled, any text you enter will type over any text after it. If the value of `overwrite` changes, this function also emites the `changeOverwrite` event.",
                        "short_description": "Pass in `true` to enable overwrites in your session, or `false` to disable. If overwrites is enabled, any text you enter will type over any text after it. If the value of `overwrite` changes, this function also emites the `changeOverwrite` event.",
                        "line": 5835,
                        "author": [],
                        "related": "EditSession.setOverwrite",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "overwrite",
                                            "description": "Defines wheter or not to set overwrites",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setOverwrite",
                        "name_prefix": "Editor.",
                        "path": "Editor.setOverwrite",
                        "outFile": "editor.html#Editor.setOverwrite"
                    },
                    {
                        "id": "Editor.setPrintMarginColumn",
                        "type": "class method",
                        "description": "Sets the column defining where the print margin should be.",
                        "short_description": "Sets the column defining where the print margin should be.",
                        "line": 6049,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "showPrintMargin",
                                            "description": "Specifies the new print margin",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setPrintMarginColumn",
                        "name_prefix": "Editor.",
                        "path": "Editor.setPrintMarginColumn",
                        "outFile": "editor.html#Editor.setPrintMarginColumn"
                    },
                    {
                        "id": "Editor.setReadOnly",
                        "type": "class method",
                        "description": "If `readOnly` is true, then the editor is set to read-only mode, and none of the content can change.",
                        "short_description": "If `readOnly` is true, then the editor is set to read-only mode, and none of the content can change.",
                        "line": 6069,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "readOnly",
                                            "description": "Specifies whether the editor can be modified or not",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setReadOnly",
                        "name_prefix": "Editor.",
                        "path": "Editor.setReadOnly",
                        "outFile": "editor.html#Editor.setReadOnly"
                    },
                    {
                        "id": "Editor.setScrollSpeed",
                        "type": "class method",
                        "description": "Sets how fast the mouse scrolling should do.",
                        "short_description": "Sets how fast the mouse scrolling should do.",
                        "line": 5863,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "speed",
                                            "description": "A value indicating the new speed",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setScrollSpeed",
                        "name_prefix": "Editor.",
                        "path": "Editor.setScrollSpeed",
                        "outFile": "editor.html#Editor.setScrollSpeed"
                    },
                    {
                        "id": "Editor.setSelectionStyle",
                        "type": "class method",
                        "description": "Indicates how selections should occur.  \n\nBy default, selections are set to \"line\". This function also emits the `'changeSelectionStyle'` event.",
                        "short_description": "Indicates how selections should occur.  \n",
                        "line": 5911,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "style",
                                            "description": "The new selection style",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setSelectionStyle",
                        "name_prefix": "Editor.",
                        "path": "Editor.setSelectionStyle",
                        "outFile": "editor.html#Editor.setSelectionStyle"
                    },
                    {
                        "id": "Editor.setSession",
                        "type": "class method",
                        "description": "Sets a new editsession to use. This method also emits the `'changeSession'` event.",
                        "short_description": "Sets a new editsession to use. This method also emits the `'changeSession'` event.",
                        "line": 5192,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "session",
                                            "description": "The new session to use",
                                            "types": [
                                                "EditSession"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setSession",
                        "name_prefix": "Editor.",
                        "path": "Editor.setSession",
                        "outFile": "editor.html#Editor.setSession"
                    },
                    {
                        "id": "Editor.setShowFoldWidgets",
                        "type": "class method",
                        "description": "Indicates whether the fold widgets are shown or not.",
                        "short_description": "Indicates whether the fold widgets are shown or not.",
                        "line": 6108,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "show",
                                            "description": "Specifies whether the fold widgets are shown",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setShowFoldWidgets",
                        "name_prefix": "Editor.",
                        "path": "Editor.setShowFoldWidgets",
                        "outFile": "editor.html#Editor.setShowFoldWidgets"
                    },
                    {
                        "id": "Editor.setShowInvisibles",
                        "type": "class method",
                        "description": "If `showInvisibiles` is set to `true`, invisible characters&mdash;like spaces or new lines&mdash;are show in the editor.",
                        "short_description": "If `showInvisibiles` is set to `true`, invisible characters&mdash;like spaces or new lines&mdash;are show in the editor.",
                        "line": 6005,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "showInvisibles",
                                            "description": "Specifies whether or not to show invisible characters",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setShowInvisibles",
                        "name_prefix": "Editor.",
                        "path": "Editor.setShowInvisibles",
                        "outFile": "editor.html#Editor.setShowInvisibles"
                    },
                    {
                        "id": "Editor.setShowPrintMargin",
                        "type": "class method",
                        "description": "If `showPrintMargin` is set to `true`, the print margin is shown in the editor.",
                        "short_description": "If `showPrintMargin` is set to `true`, the print margin is shown in the editor.",
                        "line": 6031,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "showPrintMargin",
                                            "description": "Specifies whether or not to show the print margin",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setShowPrintMargin",
                        "name_prefix": "Editor.",
                        "path": "Editor.setShowPrintMargin",
                        "outFile": "editor.html#Editor.setShowPrintMargin"
                    },
                    {
                        "id": "Editor.setStyle",
                        "type": "class method",
                        "description": "{:VirtualRenderer.setStyle}",
                        "short_description": "{:VirtualRenderer.setStyle}",
                        "line": 5378,
                        "author": [],
                        "related": "VirtualRenderer.setStyle",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "style",
                                            "description": "A class name",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setStyle",
                        "name_prefix": "Editor.",
                        "path": "Editor.setStyle",
                        "outFile": "editor.html#Editor.setStyle"
                    },
                    {
                        "id": "Editor.setTheme",
                        "type": "class method",
                        "description": "{:VirtualRenderer.setTheme}",
                        "short_description": "{:VirtualRenderer.setTheme}",
                        "line": 5358,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "theme",
                                            "description": "The path to a theme",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setTheme",
                        "name_prefix": "Editor.",
                        "path": "Editor.setTheme",
                        "outFile": "editor.html#Editor.setTheme"
                    },
                    {
                        "id": "Editor.setValue",
                        "type": "class method",
                        "description": "Sets the current document to `val`.",
                        "short_description": "Sets the current document to `val`.",
                        "line": 5305,
                        "author": [],
                        "related": "Document.setValue",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "val",
                                            "description": "The new value to set for the document",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "cursorPos",
                                            "description": "Where to set the new value. `undefined` or 0 is selectAll, -1 is at the document start, and 1 is at the end",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": "The current document value"
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "setValue",
                        "name_prefix": "Editor.",
                        "path": "Editor.setValue",
                        "outFile": "editor.html#Editor.setValue"
                    },
                    {
                        "id": "Editor.splitLine",
                        "type": "class method",
                        "description": "Splits the line at the current selection (by inserting an `'\\n'`).",
                        "short_description": "Splits the line at the current selection (by inserting an `'\\n'`).",
                        "line": 6218,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "splitLine",
                        "name_prefix": "Editor.",
                        "path": "Editor.splitLine",
                        "outFile": "editor.html#Editor.splitLine"
                    },
                    {
                        "id": "Editor.toggleCommentLines",
                        "type": "class method",
                        "description": "Given the currently selected range, this function either comments all lines or uncomments all lines (depending on whether it's commented or not).",
                        "short_description": "Given the currently selected range, this function either comments all lines or uncomments all lines (depending on whether it's commented or not).",
                        "line": 6350,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "toggleCommentLines",
                        "name_prefix": "Editor.",
                        "path": "Editor.toggleCommentLines",
                        "outFile": "editor.html#Editor.toggleCommentLines"
                    },
                    {
                        "id": "Editor.toggleOverwrite",
                        "type": "class method",
                        "description": "Sets the value of overwrite to the opposite of whatever it currently is.",
                        "short_description": "Sets the value of overwrite to the opposite of whatever it currently is.",
                        "line": 5855,
                        "author": [],
                        "related": "EditSession.toggleOverwrite",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "toggleOverwrite",
                        "name_prefix": "Editor.",
                        "path": "Editor.toggleOverwrite",
                        "outFile": "editor.html#Editor.toggleOverwrite"
                    },
                    {
                        "id": "Editor.toLowerCase",
                        "type": "class method",
                        "description": "Converts the current selection entirely into lowercase.",
                        "short_description": "Converts the current selection entirely into lowercase.",
                        "line": 6258,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "toLowerCase",
                        "name_prefix": "Editor.",
                        "path": "Editor.toLowerCase",
                        "outFile": "editor.html#Editor.toLowerCase"
                    },
                    {
                        "id": "Editor.toUpperCase",
                        "type": "class method",
                        "description": "Converts the current selection entirely into uppercase.",
                        "short_description": "Converts the current selection entirely into uppercase.",
                        "line": 6273,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "toUpperCase",
                        "name_prefix": "Editor.",
                        "path": "Editor.toUpperCase",
                        "outFile": "editor.html#Editor.toUpperCase"
                    },
                    {
                        "id": "Editor.transposeLetters",
                        "type": "class method",
                        "description": "Transposes current line.",
                        "short_description": "Transposes current line.",
                        "line": 6232,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "transposeLetters",
                        "name_prefix": "Editor.",
                        "path": "Editor.transposeLetters",
                        "outFile": "editor.html#Editor.transposeLetters"
                    },
                    {
                        "id": "Editor.undo",
                        "type": "class method",
                        "description": "{:UndoManager.undo}",
                        "short_description": "{:UndoManager.undo}",
                        "line": 7094,
                        "author": [],
                        "related": "UndoManager.undo",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "undo",
                        "name_prefix": "Editor.",
                        "path": "Editor.undo",
                        "outFile": "editor.html#Editor.undo"
                    },
                    {
                        "id": "Editor.unsetStyle",
                        "type": "class method",
                        "description": "{:VirtualRenderer.unsetStyle}",
                        "short_description": "{:VirtualRenderer.unsetStyle}",
                        "line": 5389,
                        "author": [],
                        "related": "VirtualRenderer.unsetStyle",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "style",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "unsetStyle",
                        "name_prefix": "Editor.",
                        "path": "Editor.unsetStyle",
                        "outFile": "editor.html#Editor.unsetStyle"
                    },
                    {
                        "id": "Editor@blur",
                        "type": "event",
                        "description": "Emitted once the editor has been blurred.",
                        "short_description": "Emitted once the editor has been blurred.",
                        "line": 5478,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "blur",
                        "name_prefix": "Editor@",
                        "path": "Editor.event.blur",
                        "outFile": "editor.html#Editor.event.blur"
                    },
                    {
                        "id": "Editor@change",
                        "type": "event",
                        "description": "Emitted whenever the document is changed.",
                        "short_description": "Emitted whenever the document is changed.",
                        "line": 5497,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "e",
                                            "description": "Contains a single property, `data`, which has the delta of changes",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "change",
                        "name_prefix": "Editor@",
                        "path": "Editor.event.change",
                        "outFile": "editor.html#Editor.event.change"
                    },
                    {
                        "id": "Editor@changeSelectionStyle",
                        "type": "event",
                        "description": "Emitted when the selection style changes, via [[Editor.setSelectionStyle]].",
                        "short_description": "Emitted when the selection style changes, via [[Editor.setSelectionStyle]].",
                        "line": 5903,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "data",
                                            "description": "Contains one property, `data`, which indicates the new selection style",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "changeSelectionStyle",
                        "name_prefix": "Editor@",
                        "path": "Editor.event.changeSelectionStyle",
                        "outFile": "editor.html#Editor.event.changeSelectionStyle"
                    },
                    {
                        "id": "Editor@changeSession",
                        "type": "event",
                        "description": "Emitted whenever the [[EditSession]] changes.",
                        "short_description": "Emitted whenever the [[EditSession]] changes.",
                        "line": 5185,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "e",
                                            "description": "An object with two properties, `oldSession` and `session`, that represent the old and new [[EditSession]]s.",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "changeSession",
                        "name_prefix": "Editor@",
                        "path": "Editor.event.changeSession",
                        "outFile": "editor.html#Editor.event.changeSession"
                    },
                    {
                        "id": "Editor@copy",
                        "type": "event",
                        "description": "Emitted when text is copied.",
                        "short_description": "Emitted when text is copied.",
                        "line": 5672,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "text",
                                            "description": "The copied text",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "copy",
                        "name_prefix": "Editor@",
                        "path": "Editor.event.copy",
                        "outFile": "editor.html#Editor.event.copy"
                    },
                    {
                        "id": "Editor@focus",
                        "type": "event",
                        "description": "Emitted once the editor comes into focus.",
                        "short_description": "Emitted once the editor comes into focus.",
                        "line": 5463,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "focus",
                        "name_prefix": "Editor@",
                        "path": "Editor.event.focus",
                        "outFile": "editor.html#Editor.event.focus"
                    },
                    {
                        "id": "Editor@paste",
                        "type": "event",
                        "description": "Emitted when text is pasted.",
                        "short_description": "Emitted when text is pasted.",
                        "line": 5708,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "text",
                                            "description": "The pasted text",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                        "name": "paste",
                        "name_prefix": "Editor@",
                        "path": "Editor.event.paste",
                        "outFile": "editor.html#Editor.event.paste"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/editor.js",
                "subclasses": [],
                "name": "Editor",
                "path": "Editor",
                "outFile": "editor.html"
            },
            {
                "id": "EditSession",
                "type": "class",
                "description": "Stores all the data about [[Editor `Editor`]] state providing easy way to change editors state.  \n\n`EditSession` can be attached to only one [[Document `Document`]]. Same `Document` can be attached to several `EditSession`s.",
                "short_description": "Stores all the data about [[Editor `Editor`]] state providing easy way to change editors state.  \n",
                "line": 1530,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "EditSession.$detectNewLine",
                        "type": "class method",
                        "description": "If `text` contains either the newline (`\\n`) or carriage-return ('\\r') characters, `$autoNewLine` stores that value.",
                        "short_description": "If `text` contains either the newline (`\\n`) or carriage-return ('\\r') characters, `$autoNewLine` stores that value.",
                        "line": 2234,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "text",
                                            "description": "A block of text",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "$detectNewLine",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.$detectNewLine",
                        "outFile": "edit_session.html#EditSession.$detectNewLine"
                    },
                    {
                        "id": "EditSession.$getDisplayTokens",
                        "type": "class method",
                        "description": "Given a string, returns an array of the display characters, including tabs and spaces.",
                        "short_description": "Given a string, returns an array of the display characters, including tabs and spaces.",
                        "line": 3446,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "str",
                                            "description": "The string to check",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "offset",
                                            "description": "The value to start at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "$getDisplayTokens",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.$getDisplayTokens",
                        "outFile": "edit_session.html#EditSession.$getDisplayTokens"
                    },
                    {
                        "id": "EditSession.$getStringScreenWidth",
                        "type": "class method",
                        "description": "Calculates the width of the string `str` on the screen while assuming that the string starts at the first column on the screen.",
                        "short_description": "Calculates the width of the string `str` on the screen while assuming that the string starts at the first column on the screen.",
                        "line": 3484,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "str",
                                            "description": "The string to calculate the screen width of",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "maxScreenColumn",
                                            "description": "",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "screenColumn",
                                            "description": "",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "isArray": true,
                                        "description": "Returns an `int[]` array with two elements:<br/>\nThe first position indicates the number of columns for `str` on screen.<br/>\nThe second value contains the position of the document column that this function read until."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "$getStringScreenWidth",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.$getStringScreenWidth",
                        "outFile": "edit_session.html#EditSession.$getStringScreenWidth"
                    },
                    {
                        "id": "EditSession.$mode",
                        "type": "class method",
                        "description": "Sets a new text mode for the `EditSession`. This method also emits the `'changeMode'` event. If a [[BackgroundTokenizer `BackgroundTokenizer`]] is set, the `'tokenizerUpdate'` event is also emitted.",
                        "short_description": "Sets a new text mode for the `EditSession`. This method also emits the `'changeMode'` event. If a [[BackgroundTokenizer `BackgroundTokenizer`]] is set, the `'tokenizerUpdate'` event is also emitted.",
                        "line": 2427,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "mode",
                                            "description": "Set a new text mode",
                                            "types": [
                                                "TextMode"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "$mode",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.$mode",
                        "outFile": "edit_session.html#EditSession.$mode"
                    },
                    {
                        "id": "EditSession.$resetRowCache",
                        "type": "class method",
                        "incomplete": true,
                        "line": 1700,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row to work with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "$resetRowCache",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.$resetRowCache",
                        "outFile": "edit_session.html#EditSession.$resetRowCache"
                    },
                    {
                        "id": "EditSession.addDynamicMarker",
                        "type": "class method",
                        "description": "Adds a dynamic marker to the session.",
                        "short_description": "Adds a dynamic marker to the session.",
                        "line": 2144,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "marker",
                                            "description": "object with update method",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "inFront",
                                            "description": "Set to `true` to establish a front marker",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "addDynamicMarker",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.addDynamicMarker",
                        "outFile": "edit_session.html#EditSession.addDynamicMarker"
                    },
                    {
                        "id": "EditSession.addGutterDecoration",
                        "type": "class method",
                        "description": "Adds `className` to the `row`, to be used for CSS stylings and whatnot.",
                        "short_description": "Adds `className` to the `row`, to be used for CSS stylings and whatnot.",
                        "line": 2026,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row number",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "className",
                                            "description": "The class to add",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "addGutterDecoration",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.addGutterDecoration",
                        "outFile": "edit_session.html#EditSession.addGutterDecoration"
                    },
                    {
                        "id": "EditSession.addMarker",
                        "type": "class method",
                        "description": "Adds a new marker to the given `Range`. If `inFront` is `true`, a front marker is defined, and the `'changeFrontMarker'` event fires; otherwise, the `'changeBackMarker'` event fires.",
                        "short_description": "Adds a new marker to the given `Range`. If `inFront` is `true`, a front marker is defined, and the `'changeFrontMarker'` event fires; otherwise, the `'changeBackMarker'` event fires.",
                        "line": 2111,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "range",
                                            "description": "Define the range of the marker",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "clazz",
                                            "description": "Set the CSS class for the marker",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "type",
                                            "description": "Identify the type of the marker",
                                            "types": [
                                                "Function",
                                                "String"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "inFront",
                                            "description": "Set to `true` to establish a front marker",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "addMarker",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.addMarker",
                        "outFile": "edit_session.html#EditSession.addMarker"
                    },
                    {
                        "id": "EditSession.adjustWrapLimit",
                        "type": "class method",
                        "description": "This should generally only be called by the renderer when a resize is detected.",
                        "short_description": "This should generally only be called by the renderer when a resize is detected.",
                        "line": 3085,
                        "private": true,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "desiredLimit",
                                            "description": "The new wrap limit",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "adjustWrapLimit",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.adjustWrapLimit",
                        "outFile": "edit_session.html#EditSession.adjustWrapLimit"
                    },
                    {
                        "id": "EditSession.clearAnnotations",
                        "type": "class method",
                        "description": "Clears all the annotations for this session. This function also triggers the `'changeAnnotation'` event.",
                        "short_description": "Clears all the annotations for this session. This function also triggers the `'changeAnnotation'` event.",
                        "line": 2226,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "clearAnnotations",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.clearAnnotations",
                        "outFile": "edit_session.html#EditSession.clearAnnotations"
                    },
                    {
                        "id": "EditSession.clearBreakpoint",
                        "type": "class method",
                        "description": "Removes a breakpoint on the row number given by `rows`. This function also emites the `'changeBreakpoint'` event.",
                        "short_description": "Removes a breakpoint on the row number given by `rows`. This function also emites the `'changeBreakpoint'` event.",
                        "line": 2100,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row index",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "clearBreakpoint",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.clearBreakpoint",
                        "outFile": "edit_session.html#EditSession.clearBreakpoint"
                    },
                    {
                        "id": "EditSession.clearBreakpoints",
                        "type": "class method",
                        "description": "Removes all breakpoints on the rows. This function also emites the `'changeBreakpoint'` event.",
                        "short_description": "Removes all breakpoints on the rows. This function also emites the `'changeBreakpoint'` event.",
                        "line": 2075,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "clearBreakpoints",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.clearBreakpoints",
                        "outFile": "edit_session.html#EditSession.clearBreakpoints"
                    },
                    {
                        "id": "EditSession.documentToScreenColumn",
                        "type": "class method",
                        "description": "For the given document row and column, returns the screen column.",
                        "short_description": "For the given document row and column, returns the screen column.",
                        "line": 3796,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "docColumn",
                                            "description": "",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "documentToScreenColumn",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.documentToScreenColumn",
                        "outFile": "edit_session.html#EditSession.documentToScreenColumn"
                    },
                    {
                        "id": "EditSession.documentToScreenPosition",
                        "type": "class method",
                        "description": "Converts document coordinates to screen coordinates. {:conversionConsiderations}",
                        "short_description": "Converts document coordinates to screen coordinates. {:conversionConsiderations}",
                        "line": 3699,
                        "author": [],
                        "related": "EditSession.screenToDocumentPosition",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "docRow",
                                            "description": "The document row to check",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "docColumn",
                                            "description": "The document column to check",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": "The object returned by this method has two properties: `row` and `column`."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "documentToScreenPosition",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.documentToScreenPosition",
                        "outFile": "edit_session.html#EditSession.documentToScreenPosition"
                    },
                    {
                        "id": "EditSession.documentToScreenRow",
                        "type": "class method",
                        "description": "For the given document row and column, returns the screen row.",
                        "short_description": "For the given document row and column, returns the screen row.",
                        "line": 3807,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "docRow",
                                            "description": "",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "docColumn",
                                            "description": "",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "documentToScreenRow",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.documentToScreenRow",
                        "outFile": "edit_session.html#EditSession.documentToScreenRow"
                    },
                    {
                        "id": "EditSession.duplicateLines",
                        "type": "class method",
                        "description": "Duplicates all the text between `firstRow` and `lastRow`.",
                        "short_description": "Duplicates all the text between `firstRow` and `lastRow`.",
                        "line": 2945,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "firstRow",
                                            "description": "The starting row to duplicate",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "lastRow",
                                            "description": "The final row to duplicate",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "Returns the number of new rows added; in other words, `lastRow - firstRow + 1`."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "duplicateLines",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.duplicateLines",
                        "outFile": "edit_session.html#EditSession.duplicateLines"
                    },
                    {
                        "id": "EditSession.getAnnotations",
                        "type": "class method",
                        "description": "Returns the annotations for the `EditSession`.",
                        "short_description": "Returns the annotations for the `EditSession`.",
                        "line": 2218,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getAnnotations",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getAnnotations",
                        "outFile": "edit_session.html#EditSession.getAnnotations"
                    },
                    {
                        "id": "EditSession.getAWordRange",
                        "type": "class method",
                        "description": "Gets the range of a word, including its right whitespace.",
                        "short_description": "Gets the range of a word, including its right whitespace.",
                        "line": 2290,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row number to start from",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "The column number to start from",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getAWordRange",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getAWordRange",
                        "outFile": "edit_session.html#EditSession.getAWordRange"
                    },
                    {
                        "id": "EditSession.getBreakpoints",
                        "type": "class method",
                        "description": "Returns an array of numbers, indicating which rows have breakpoints.",
                        "short_description": "Returns an array of numbers, indicating which rows have breakpoints.",
                        "line": 2052,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getBreakpoints",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getBreakpoints",
                        "outFile": "edit_session.html#EditSession.getBreakpoints"
                    },
                    {
                        "id": "EditSession.getDocument",
                        "type": "class method",
                        "description": "Returns the `Document` associated with this session.",
                        "short_description": "Returns the `Document` associated with this session.",
                        "line": 1692,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Document",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getDocument",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getDocument",
                        "outFile": "edit_session.html#EditSession.getDocument"
                    },
                    {
                        "id": "EditSession.getDocumentLastRowColumn",
                        "type": "class method",
                        "description": "For the given document row and column, this returns the column position of the last screen row.",
                        "short_description": "For the given document row and column, this returns the column position of the last screen row.",
                        "line": 3551,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "docRow",
                                            "description": "",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "docColumn",
                                            "description": "",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getDocumentLastRowColumn",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getDocumentLastRowColumn",
                        "outFile": "edit_session.html#EditSession.getDocumentLastRowColumn"
                    },
                    {
                        "id": "EditSession.getDocumentLastRowColumnPosition",
                        "type": "class method",
                        "description": "For the given document row and column, this returns the document position of the last row.",
                        "short_description": "For the given document row and column, this returns the document position of the last row.",
                        "line": 3562,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "docRow",
                                            "description": "",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "docColumn",
                                            "description": "",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getDocumentLastRowColumnPosition",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getDocumentLastRowColumnPosition",
                        "outFile": "edit_session.html#EditSession.getDocumentLastRowColumnPosition"
                    },
                    {
                        "id": "EditSession.getLength",
                        "type": "class method",
                        "description": "Returns the number of rows in the document.",
                        "short_description": "Returns the number of rows in the document.",
                        "line": 2631,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getLength",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getLength",
                        "outFile": "edit_session.html#EditSession.getLength"
                    },
                    {
                        "id": "EditSession.getLine",
                        "type": "class method",
                        "description": "Returns a verbatim copy of the given line as it is in the document",
                        "short_description": "Returns a verbatim copy of the given line as it is in the document",
                        "line": 2607,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row to retrieve from",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getLine",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getLine",
                        "outFile": "edit_session.html#EditSession.getLine"
                    },
                    {
                        "id": "EditSession.getLines",
                        "type": "class method",
                        "description": "Returns an array of strings of the rows between `firstRow` and `lastRow`. This function is inclusive of `lastRow`.",
                        "short_description": "Returns an array of strings of the rows between `firstRow` and `lastRow`. This function is inclusive of `lastRow`.",
                        "line": 2619,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "firstRow",
                                            "description": "The first row index to retrieve",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "lastRow",
                                            "description": "The final row index to retrieve",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getLines",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getLines",
                        "outFile": "edit_session.html#EditSession.getLines"
                    },
                    {
                        "id": "EditSession.getMarkers",
                        "type": "class method",
                        "description": "Returns an array containing the IDs of all the markers, either front or back.",
                        "short_description": "Returns an array containing the IDs of all the markers, either front or back.",
                        "line": 2189,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "inFront",
                                            "description": "If `true`, indicates you only want front markers; `false` indicates only back markers",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Array",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getMarkers",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getMarkers",
                        "outFile": "edit_session.html#EditSession.getMarkers"
                    },
                    {
                        "id": "EditSession.getMode",
                        "type": "class method",
                        "description": "Returns the current text mode.",
                        "short_description": "Returns the current text mode.",
                        "line": 2512,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "TextMode",
                                        "description": "The current text mode"
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getMode",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getMode",
                        "outFile": "edit_session.html#EditSession.getMode"
                    },
                    {
                        "id": "EditSession.getNewLineMode",
                        "type": "class method",
                        "description": "Returns the current new line mode.",
                        "short_description": "Returns the current new line mode.",
                        "line": 2318,
                        "author": [],
                        "related": "Document.getNewLineMode",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getNewLineMode",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getNewLineMode",
                        "outFile": "edit_session.html#EditSession.getNewLineMode"
                    },
                    {
                        "id": "EditSession.getOverwrite",
                        "type": "class method",
                        "description": "Returns `true` if overwrites are enabled; `false` otherwise.",
                        "short_description": "Returns `true` if overwrites are enabled; `false` otherwise.",
                        "line": 2012,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getOverwrite",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getOverwrite",
                        "outFile": "edit_session.html#EditSession.getOverwrite"
                    },
                    {
                        "id": "EditSession.getRowLength",
                        "type": "class method",
                        "description": "Returns number of screenrows in a wrapped line.",
                        "short_description": "Returns number of screenrows in a wrapped line.",
                        "line": 3525,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row number to check",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getRowLength",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getRowLength",
                        "outFile": "edit_session.html#EditSession.getRowLength"
                    },
                    {
                        "id": "EditSession.getRowSplitData",
                        "type": "class method",
                        "description": "For the given row, this returns the split data.",
                        "short_description": "For the given row, this returns the split data.",
                        "line": 3574,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getRowSplitData",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getRowSplitData",
                        "outFile": "edit_session.html#EditSession.getRowSplitData"
                    },
                    {
                        "id": "EditSession.getScreenLastRowColumn",
                        "type": "class method",
                        "description": "Returns the position (on screen) for the last character in the provided screen row.",
                        "short_description": "Returns the position (on screen) for the last character in the provided screen row.",
                        "line": 3539,
                        "author": [],
                        "related": "EditSession.documentToScreenColumn",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "screenRow",
                                            "description": "The screen row to check",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getScreenLastRowColumn",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getScreenLastRowColumn",
                        "outFile": "edit_session.html#EditSession.getScreenLastRowColumn"
                    },
                    {
                        "id": "EditSession.getScreenLength",
                        "type": "class method",
                        "description": "Returns the length of the screen.",
                        "short_description": "Returns the length of the screen.",
                        "line": 3818,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getScreenLength",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getScreenLength",
                        "outFile": "edit_session.html#EditSession.getScreenLength"
                    },
                    {
                        "id": "EditSession.getScreenTabSize",
                        "type": "class method",
                        "description": "The distance to the next tab stop at the specified screen column.",
                        "short_description": "The distance to the next tab stop at the specified screen column.",
                        "line": 3586,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "screenColumn",
                                            "description": "The screen column to check",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getScreenTabSize",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getScreenTabSize",
                        "outFile": "edit_session.html#EditSession.getScreenTabSize"
                    },
                    {
                        "id": "EditSession.getScreenWidth",
                        "type": "class method",
                        "description": "Returns the width of the screen.",
                        "short_description": "Returns the width of the screen.",
                        "line": 2564,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getScreenWidth",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getScreenWidth",
                        "outFile": "edit_session.html#EditSession.getScreenWidth"
                    },
                    {
                        "id": "EditSession.getScrollLeft",
                        "type": "class method",
                        "description": "[Returns the value of the distance between the left of the editor and the leftmost part of the visible content.]{: #EditSession.getScrollLeft}",
                        "short_description": "[Returns the value of the distance between the left of the editor and the leftmost part of the visible content.]{: #EditSession.getScrollLeft}",
                        "line": 2556,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getScrollLeft",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getScrollLeft",
                        "outFile": "edit_session.html#EditSession.getScrollLeft"
                    },
                    {
                        "id": "EditSession.getScrollTop",
                        "type": "class method",
                        "description": "[Returns the value of the distance between the top of the editor and the topmost part of the visible content.]{: #EditSession.getScrollTop}",
                        "short_description": "[Returns the value of the distance between the top of the editor and the topmost part of the visible content.]{: #EditSession.getScrollTop}",
                        "line": 2535,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getScrollTop",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getScrollTop",
                        "outFile": "edit_session.html#EditSession.getScrollTop"
                    },
                    {
                        "id": "EditSession.getSelection",
                        "type": "class method",
                        "description": "Returns the string of the current selection.",
                        "short_description": "Returns the string of the current selection.",
                        "line": 1801,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getSelection",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getSelection",
                        "outFile": "edit_session.html#EditSession.getSelection"
                    },
                    {
                        "id": "EditSession.getState",
                        "type": "class method",
                        "description": "{:BackgroundTokenizer.getState}",
                        "short_description": "{:BackgroundTokenizer.getState}",
                        "line": 1808,
                        "author": [],
                        "related": "BackgroundTokenizer.getState",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row to start at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getState",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getState",
                        "outFile": "edit_session.html#EditSession.getState"
                    },
                    {
                        "id": "EditSession.getTabSize",
                        "type": "class method",
                        "description": "Returns the current tab size.",
                        "short_description": "Returns the current tab size.",
                        "line": 1978,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getTabSize",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getTabSize",
                        "outFile": "edit_session.html#EditSession.getTabSize"
                    },
                    {
                        "id": "EditSession.getTabString",
                        "type": "class method",
                        "description": "Returns the current value for tabs. If the user is using soft tabs, this will be a series of spaces (defined by [[EditSession.getTabSize `getTabSize()`]]); otherwise it's simply `'\\t'`.",
                        "short_description": "Returns the current value for tabs. If the user is using soft tabs, this will be a series of spaces (defined by [[EditSession.getTabSize `getTabSize()`]]); otherwise it's simply `'\\t'`.",
                        "line": 1929,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getTabString",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getTabString",
                        "outFile": "edit_session.html#EditSession.getTabString"
                    },
                    {
                        "id": "EditSession.getTextRange",
                        "type": "class method",
                        "description": "{:Document.getTextRange.desc}",
                        "short_description": "{:Document.getTextRange.desc}",
                        "line": 2639,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "range",
                                            "description": "The range to work with",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getTextRange",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getTextRange",
                        "outFile": "edit_session.html#EditSession.getTextRange"
                    },
                    {
                        "id": "EditSession.getTokenAt",
                        "type": "class method",
                        "description": "Returns an object indicating the token at the current row. The object has two properties: `index` and `start`.",
                        "short_description": "Returns an object indicating the token at the current row. The object has two properties: `index` and `start`.",
                        "line": 1829,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row number to retrieve from",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "The column number to retrieve from",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getTokenAt",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getTokenAt",
                        "outFile": "edit_session.html#EditSession.getTokenAt"
                    },
                    {
                        "id": "EditSession.getTokens",
                        "type": "class method",
                        "description": "Starts tokenizing at the row indicated. Returns a list of objects of the tokenized rows.",
                        "short_description": "Starts tokenizing at the row indicated. Returns a list of objects of the tokenized rows.",
                        "line": 1818,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row to start at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getTokens",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getTokens",
                        "outFile": "edit_session.html#EditSession.getTokens"
                    },
                    {
                        "id": "EditSession.getUndoManager",
                        "type": "class method",
                        "description": "Returns the current undo manager.",
                        "short_description": "Returns the current undo manager.",
                        "line": 1922,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getUndoManager",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getUndoManager",
                        "outFile": "edit_session.html#EditSession.getUndoManager"
                    },
                    {
                        "id": "EditSession.getUseSoftTabs",
                        "type": "class method",
                        "description": "Returns `true` if soft tabs are being used, `false` otherwise.",
                        "short_description": "Returns `true` if soft tabs are being used, `false` otherwise.",
                        "line": 1954,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getUseSoftTabs",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getUseSoftTabs",
                        "outFile": "edit_session.html#EditSession.getUseSoftTabs"
                    },
                    {
                        "id": "EditSession.getUseWorker",
                        "type": "class method",
                        "description": "Returns `true` if workers are being used.",
                        "short_description": "Returns `true` if workers are being used.",
                        "line": 2346,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getUseWorker",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getUseWorker",
                        "outFile": "edit_session.html#EditSession.getUseWorker"
                    },
                    {
                        "id": "EditSession.getUseWrapMode",
                        "type": "class method",
                        "description": "Returns `true` if wrap mode is being used; `false` otherwise.",
                        "short_description": "Returns `true` if wrap mode is being used; `false` otherwise.",
                        "line": 3056,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getUseWrapMode",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getUseWrapMode",
                        "outFile": "edit_session.html#EditSession.getUseWrapMode"
                    },
                    {
                        "id": "EditSession.getValue",
                        "type": "class method",
                        "description": "Returns the current [[Document `Document`]] as a string.",
                        "short_description": "Returns the current [[Document `Document`]] as a string.",
                        "line": 1791,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getValue",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getValue",
                        "outFile": "edit_session.html#EditSession.getValue"
                    },
                    {
                        "id": "EditSession.getWordRange",
                        "type": "class method",
                        "description": "Given a starting row and column, this method returns the `Range` of the first word boundary it finds.",
                        "short_description": "Given a starting row and column, this method returns the `Range` of the first word boundary it finds.",
                        "line": 2249,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row to start at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "The column to start at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getWordRange",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getWordRange",
                        "outFile": "edit_session.html#EditSession.getWordRange"
                    },
                    {
                        "id": "EditSession.getWrapLimit",
                        "type": "class method",
                        "description": "Returns the value of wrap limit.",
                        "short_description": "Returns the value of wrap limit.",
                        "line": 3121,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getWrapLimit",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getWrapLimit",
                        "outFile": "edit_session.html#EditSession.getWrapLimit"
                    },
                    {
                        "id": "EditSession.getWrapLimitRange",
                        "type": "class method",
                        "description": "Returns an object that defines the minimum and maximum of the wrap limit; it looks something like this:\n\n{ min: wrapLimitRange_min, max: wrapLimitRange_max }",
                        "short_description": "Returns an object that defines the minimum and maximum of the wrap limit; it looks something like this:\n",
                        "line": 3128,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "getWrapLimitRange",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.getWrapLimitRange",
                        "outFile": "edit_session.html#EditSession.getWrapLimitRange"
                    },
                    {
                        "id": "EditSession.indentRows",
                        "type": "class method",
                        "description": "Indents all the rows, from `startRow` to `endRow` (inclusive), by prefixing each row with the token in `indentString`.\n\nIf `indentString` contains the `'\\t'` character, it's replaced by whatever is defined by [[EditSession.getTabString `getTabString()`]].",
                        "short_description": "Indents all the rows, from `startRow` to `endRow` (inclusive), by prefixing each row with the token in `indentString`.\n",
                        "line": 2864,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "startRow",
                                            "description": "Starting row",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "endRow",
                                            "description": "Ending row",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "indentString",
                                            "description": "The indent token",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "indentRows",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.indentRows",
                        "outFile": "edit_session.html#EditSession.indentRows"
                    },
                    {
                        "id": "EditSession.insert",
                        "type": "class method",
                        "description": "Inserts a block of `text` and the indicated `position`.",
                        "short_description": "Inserts a block of `text` and the indicated `position`.",
                        "line": 2649,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "position",
                                            "description": "The position to start inserting at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "text",
                                            "description": "A chunk of text to insert",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "The position of the last line of `text`. If the length of `text` is 0, this function simply returns `position`."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "insert",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.insert",
                        "outFile": "edit_session.html#EditSession.insert"
                    },
                    {
                        "id": "EditSession.isTabStop",
                        "type": "class method",
                        "description": "Returns `true` if the character at the position is a soft tab.",
                        "short_description": "Returns `true` if the character at the position is a soft tab.",
                        "line": 1985,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "position",
                                            "description": "The position to check",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "isTabStop",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.isTabStop",
                        "outFile": "edit_session.html#EditSession.isTabStop"
                    },
                    {
                        "id": "EditSession.moveLinesDown",
                        "type": "class method",
                        "description": "Shifts all the lines in the document down one, starting from `firstRow` and ending at `lastRow`.",
                        "short_description": "Shifts all the lines in the document down one, starting from `firstRow` and ending at `lastRow`.",
                        "line": 2927,
                        "author": [],
                        "related": "Document.insertLines",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "firstRow",
                                            "description": "The starting row to move down",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "lastRow",
                                            "description": "The final row to move down",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "If `firstRow` is less-than or equal to 0, this function returns 0. Otherwise, on success, it returns -1."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "moveLinesDown",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.moveLinesDown",
                        "outFile": "edit_session.html#EditSession.moveLinesDown"
                    },
                    {
                        "id": "EditSession.moveLinesUp",
                        "type": "class method",
                        "description": "Shifts all the lines in the document up one, starting from `firstRow` and ending at `lastRow`.",
                        "short_description": "Shifts all the lines in the document up one, starting from `firstRow` and ending at `lastRow`.",
                        "line": 2910,
                        "author": [],
                        "related": "Document.insertLines",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "firstRow",
                                            "description": "The starting row to move up",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "lastRow",
                                            "description": "The final row to move up",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "If `firstRow` is less-than or equal to 0, this function returns 0. Otherwise, on success, it returns -1."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "moveLinesUp",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.moveLinesUp",
                        "outFile": "edit_session.html#EditSession.moveLinesUp"
                    },
                    {
                        "id": "EditSession.moveText",
                        "type": "class method",
                        "description": "Moves a range of text from the given range to the given position. `toPosition` is an object that looks like this:\n ```json\n   { row: newRowLocation, column: newColumnLocation }\n```",
                        "short_description": "Moves a range of text from the given range to the given position. `toPosition` is an object that looks like this:\n ```json\n   { row: newRowLocation, column: newColumnLocation }\n```",
                        "line": 2822,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "fromRange",
                                            "description": "The range of text you want moved within the document",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "toPosition",
                                            "description": "The location (row and column) where you want to move the text to",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": "The new range where the text was moved to."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "moveText",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.moveText",
                        "outFile": "edit_session.html#EditSession.moveText"
                    },
                    {
                        "id": "new EditSession",
                        "type": "constructor",
                        "description": "Sets up a new `EditSession` and associates it with the given `Document` and `TextMode`.",
                        "short_description": "Sets up a new `EditSession` and associates it with the given `Document` and `TextMode`.",
                        "line": 1627,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "text",
                                            "description": "If `text` is a `Document`, it associates the `EditSession` with it. Otherwise, a new `Document` is created, with the initial text",
                                            "types": [
                                                "Document",
                                                "String"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "mode",
                                            "description": "The inital language mode to use for the document",
                                            "types": [
                                                "TextMode"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "new",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.new",
                        "outFile": "edit_session.html#EditSession.new"
                    },
                    {
                        "id": "EditSession.onReloadTokenizer",
                        "type": "class method",
                        "description": "Reloads all the tokens on the current session. This function calls [[BackgroundTokenizer.start `BackgroundTokenizer.start ()`]] to all the rows; it also emits the `'tokenizerUpdate'` event.",
                        "short_description": "Reloads all the tokens on the current session. This function calls [[BackgroundTokenizer.start `BackgroundTokenizer.start ()`]] to all the rows; it also emits the `'tokenizerUpdate'` event.",
                        "line": 2353,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "e",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "onReloadTokenizer",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.onReloadTokenizer",
                        "outFile": "edit_session.html#EditSession.onReloadTokenizer"
                    },
                    {
                        "id": "EditSession.outdentRows",
                        "type": "class method",
                        "description": "Outdents all the rows defined by the `start` and `end` properties of `range`.",
                        "short_description": "Outdents all the rows defined by the `start` and `end` properties of `range`.",
                        "line": 2880,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "range",
                                            "description": "A range of rows",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "outdentRows",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.outdentRows",
                        "outFile": "edit_session.html#EditSession.outdentRows"
                    },
                    {
                        "id": "EditSession.redoChanges",
                        "type": "class method",
                        "description": "Re-implements a previously undone change to your document.",
                        "short_description": "Re-implements a previously undone change to your document.",
                        "line": 2707,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "deltas",
                                            "description": "An array of previous changes",
                                            "types": [
                                                "Array"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "dontSelect",
                                            "description": "{:dontSelect}",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "redoChanges",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.redoChanges",
                        "outFile": "edit_session.html#EditSession.redoChanges"
                    },
                    {
                        "id": "EditSession.remove",
                        "type": "class method",
                        "description": "Removes the `range` from the document.",
                        "short_description": "Removes the `range` from the document.",
                        "line": 2661,
                        "author": [],
                        "related": "Document.remove",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "range",
                                            "description": "A specified Range to remove",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": "The new `start` property of the range, which contains `startRow` and `startColumn`. If `range` is empty, this function returns the unmodified value of `range.start`."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "remove",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.remove",
                        "outFile": "edit_session.html#EditSession.remove"
                    },
                    {
                        "id": "EditSession.removeGutterDecoration",
                        "type": "class method",
                        "description": "Removes `className` from the `row`.",
                        "short_description": "Removes `className` from the `row`.",
                        "line": 2040,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row number",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "className",
                                            "description": "The class to add",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "removeGutterDecoration",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.removeGutterDecoration",
                        "outFile": "edit_session.html#EditSession.removeGutterDecoration"
                    },
                    {
                        "id": "EditSession.removeMarker",
                        "type": "class method",
                        "description": "Removes the marker with the specified ID. If this marker was in front, the `'changeFrontMarker'` event is emitted. If the marker was in the back, the `'changeBackMarker'` event is emitted.",
                        "short_description": "Removes the marker with the specified ID. If this marker was in front, the `'changeFrontMarker'` event is emitted. If the marker was in the back, the `'changeBackMarker'` event is emitted.",
                        "line": 2170,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "markerId",
                                            "description": "A number representing a marker",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "removeMarker",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.removeMarker",
                        "outFile": "edit_session.html#EditSession.removeMarker"
                    },
                    {
                        "id": "EditSession.replace",
                        "type": "class method",
                        "description": "Replaces a range in the document with the new `text`.",
                        "short_description": "Replaces a range in the document with the new `text`.",
                        "line": 2800,
                        "author": [],
                        "related": "Document.replace",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "range",
                                            "description": "A specified Range to replace",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "text",
                                            "description": "The new text to use as a replacement",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": "An object containing the final row and column, like this:   \n```\n{row: endRow, column: 0}\n```  \nIf the text and range are empty, this function returns an object containing the current `range.start` value.  \nIf the text is the exact same as what currently exists, this function returns an object containing the current `range.end` value."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "replace",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.replace",
                        "outFile": "edit_session.html#EditSession.replace"
                    },
                    {
                        "id": "EditSession.screenToDocumentPosition",
                        "type": "class method",
                        "description": "Converts characters coordinates on the screen to characters coordinates within the document. [This takes into account code folding, word wrap, tab size, and any other visual modifications.]{: #conversionConsiderations}",
                        "short_description": "Converts characters coordinates on the screen to characters coordinates within the document. [This takes into account code folding, word wrap, tab size, and any other visual modifications.]{: #conversionConsiderations}",
                        "line": 3607,
                        "author": [],
                        "related": "EditSession.documentToScreenPosition",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "screenRow",
                                            "description": "The screen row to check",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "screenColumn",
                                            "description": "The screen column to check",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": "The object returned has two properties: `row` and `column`."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "screenToDocumentPosition",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.screenToDocumentPosition",
                        "outFile": "edit_session.html#EditSession.screenToDocumentPosition"
                    },
                    {
                        "id": "EditSession.setAnnotations",
                        "type": "class method",
                        "description": "Sets annotations for the `EditSession`. This functions emits the `'changeAnnotation'` event.",
                        "short_description": "Sets annotations for the `EditSession`. This functions emits the `'changeAnnotation'` event.",
                        "line": 2208,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "annotations",
                                            "description": "A list of annotations",
                                            "types": [
                                                "Array"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setAnnotations",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setAnnotations",
                        "outFile": "edit_session.html#EditSession.setAnnotations"
                    },
                    {
                        "id": "EditSession.setBreakpoint",
                        "type": "class method",
                        "description": "Sets a breakpoint on the row number given by `rows`. This function also emites the `'changeBreakpoint'` event.",
                        "short_description": "Sets a breakpoint on the row number given by `rows`. This function also emites the `'changeBreakpoint'` event.",
                        "line": 2083,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row index",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "className",
                                            "description": "Class of the breakpoint",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setBreakpoint",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setBreakpoint",
                        "outFile": "edit_session.html#EditSession.setBreakpoint"
                    },
                    {
                        "id": "EditSession.setBreakpoints",
                        "type": "class method",
                        "description": "Sets a breakpoint on every row number given by `rows`. This function also emites the `'changeBreakpoint'` event.",
                        "short_description": "Sets a breakpoint on every row number given by `rows`. This function also emites the `'changeBreakpoint'` event.",
                        "line": 2060,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "rows",
                                            "description": "An array of row indicies",
                                            "types": [
                                                "[Number]"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setBreakpoints",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setBreakpoints",
                        "outFile": "edit_session.html#EditSession.setBreakpoints"
                    },
                    {
                        "id": "EditSession.setDocument",
                        "type": "class method",
                        "description": "Sets the `EditSession` to point to a new `Document`. If a `BackgroundTokenizer` exists, it also points to `doc`.",
                        "short_description": "Sets the `EditSession` to point to a new `Document`. If a `BackgroundTokenizer` exists, it also points to `doc`.",
                        "line": 1672,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "doc",
                                            "description": "The new `Document` to use",
                                            "types": [
                                                "Document"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setDocument",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setDocument",
                        "outFile": "edit_session.html#EditSession.setDocument"
                    },
                    {
                        "id": "EditSession.setNewLineMode",
                        "type": "class method",
                        "description": "{:Document.setNewLineMode.desc}",
                        "short_description": "{:Document.setNewLineMode.desc}",
                        "line": 2307,
                        "author": [],
                        "related": "Document.setNewLineMode",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "newLineMode",
                                            "description": "{:Document.setNewLineMode.param}",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setNewLineMode",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setNewLineMode",
                        "outFile": "edit_session.html#EditSession.setNewLineMode"
                    },
                    {
                        "id": "EditSession.setOverwrite",
                        "type": "class method",
                        "description": "Pass in `true` to enable overwrites in your session, or `false` to disable. \n\nIf overwrites is enabled, any text you enter will type over any text after it. If the value of `overwrite` changes, this function also emites the `changeOverwrite` event.",
                        "short_description": "Pass in `true` to enable overwrites in your session, or `false` to disable. \n",
                        "line": 1996,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "overwrite",
                                            "description": "Defines wheter or not to set overwrites",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setOverwrite",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setOverwrite",
                        "outFile": "edit_session.html#EditSession.setOverwrite"
                    },
                    {
                        "id": "EditSession.setScrollLeft",
                        "type": "class method",
                        "description": "[Sets the value of the distance between the left of the editor and the leftmost part of the visible content.]{: #EditSession.setScrollLeft}",
                        "short_description": "[Sets the value of the distance between the left of the editor and the leftmost part of the visible content.]{: #EditSession.setScrollLeft}",
                        "line": 2544,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "scrollLeft",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setScrollLeft",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setScrollLeft",
                        "outFile": "edit_session.html#EditSession.setScrollLeft"
                    },
                    {
                        "id": "EditSession.setScrollTop",
                        "type": "class method",
                        "description": "This function sets the scroll top value. It also emits the `'changeScrollTop'` event.",
                        "short_description": "This function sets the scroll top value. It also emits the `'changeScrollTop'` event.",
                        "line": 2521,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "scrollTop",
                                            "description": "The new scroll top value",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setScrollTop",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setScrollTop",
                        "outFile": "edit_session.html#EditSession.setScrollTop"
                    },
                    {
                        "id": "EditSession.setTabSize",
                        "type": "class method",
                        "description": "Set the number of spaces that define a soft tab; for example, passing in `4` transforms the soft tabs to be equivalent to four spaces. This function also emits the `changeTabSize` event.",
                        "short_description": "Set the number of spaces that define a soft tab; for example, passing in `4` transforms the soft tabs to be equivalent to four spaces. This function also emits the `changeTabSize` event.",
                        "line": 1963,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "tabSize",
                                            "description": "The new tab size",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setTabSize",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setTabSize",
                        "outFile": "edit_session.html#EditSession.setTabSize"
                    },
                    {
                        "id": "EditSession.setUndoManager",
                        "type": "class method",
                        "description": "Sets the undo manager.",
                        "short_description": "Sets the undo manager.",
                        "line": 1865,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "undoManager",
                                            "description": "The new undo manager",
                                            "types": [
                                                "UndoManager"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setUndoManager",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setUndoManager",
                        "outFile": "edit_session.html#EditSession.setUndoManager"
                    },
                    {
                        "id": "EditSession.setUndoSelect",
                        "type": "class method",
                        "description": "Enables or disables highlighting of the range where an undo occured.",
                        "short_description": "Enables or disables highlighting of the range where an undo occured.",
                        "line": 2737,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "enable",
                                            "description": "If `true`, selects the range of the reinserted change",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setUndoSelect",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setUndoSelect",
                        "outFile": "edit_session.html#EditSession.setUndoSelect"
                    },
                    {
                        "id": "EditSession.setUseSoftTabs",
                        "type": "class method",
                        "description": "Pass `true` to enable the use of soft tabs. Soft tabs means you're using spaces instead of the tab character (`'\\t'`).",
                        "short_description": "Pass `true` to enable the use of soft tabs. Soft tabs means you're using spaces instead of the tab character (`'\\t'`).",
                        "line": 1941,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "useSoftTabs",
                                            "description": "Value indicating whether or not to use soft tabs",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setUseSoftTabs",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setUseSoftTabs",
                        "outFile": "edit_session.html#EditSession.setUseSoftTabs"
                    },
                    {
                        "id": "EditSession.setUseWorker",
                        "type": "class method",
                        "description": "Identifies if you want to use a worker for the `EditSession`.",
                        "short_description": "Identifies if you want to use a worker for the `EditSession`.",
                        "line": 2330,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "useWorker",
                                            "description": "Set to `true` to use a worker",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setUseWorker",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setUseWorker",
                        "outFile": "edit_session.html#EditSession.setUseWorker"
                    },
                    {
                        "id": "EditSession.setUseWrapMode",
                        "type": "class method",
                        "description": "Sets whether or not line wrapping is enabled. If `useWrapMode` is different than the current value, the `'changeWrapMode'` event is emitted.",
                        "short_description": "Sets whether or not line wrapping is enabled. If `useWrapMode` is different than the current value, the `'changeWrapMode'` event is emitted.",
                        "line": 3030,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "useWrapMode",
                                            "description": "Enable (or disable) wrap mode",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setUseWrapMode",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setUseWrapMode",
                        "outFile": "edit_session.html#EditSession.setUseWrapMode"
                    },
                    {
                        "id": "EditSession.setValue",
                        "type": "class method",
                        "description": "Sets the session text.",
                        "short_description": "Sets the session text.",
                        "line": 1765,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "text",
                                            "description": "The new text to place",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setValue",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setValue",
                        "outFile": "edit_session.html#EditSession.setValue"
                    },
                    {
                        "id": "EditSession.setWrapLimitRange",
                        "type": "class method",
                        "description": "Sets the boundaries of wrap. Either value can be `null` to have an unconstrained wrap, or, they can be the same number to pin the limit. If the wrap limits for `min` or `max` are different, this method also emits the `'changeWrapMode'` event.",
                        "short_description": "Sets the boundaries of wrap. Either value can be `null` to have an unconstrained wrap, or, they can be the same number to pin the limit. If the wrap limits for `min` or `max` are different, this method also emits the `'changeWrapMode'` event.",
                        "line": 3068,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "min",
                                            "description": "The minimum wrap value (the left side wrap)",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "max",
                                            "description": "The maximum wrap value (the right side wrap)",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "setWrapLimitRange",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.setWrapLimitRange",
                        "outFile": "edit_session.html#EditSession.setWrapLimitRange"
                    },
                    {
                        "id": "EditSession.toggleOverwrite",
                        "type": "class method",
                        "description": "Sets the value of overwrite to the opposite of whatever it currently is.",
                        "short_description": "Sets the value of overwrite to the opposite of whatever it currently is.",
                        "line": 2019,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "toggleOverwrite",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.toggleOverwrite",
                        "outFile": "edit_session.html#EditSession.toggleOverwrite"
                    },
                    {
                        "id": "EditSession.toString",
                        "type": "class method",
                        "description": "Returns the current [[Document `Document`]] as a string.",
                        "short_description": "Returns the current [[Document `Document`]] as a string.",
                        "line": 1784,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "toString",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.toString",
                        "outFile": "edit_session.html#EditSession.toString"
                    },
                    {
                        "id": "EditSession.undoChanges",
                        "type": "class method",
                        "description": "Reverts previous changes to your document.",
                        "short_description": "Reverts previous changes to your document.",
                        "line": 2673,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "deltas",
                                            "description": "An array of previous changes",
                                            "types": [
                                                "Array"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "dontSelect",
                                            "description": "[If `true`, doesn't select the range of where the change occured]{: #dontSelect}",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "undoChanges",
                        "name_prefix": "EditSession.",
                        "path": "EditSession.undoChanges",
                        "outFile": "edit_session.html#EditSession.undoChanges"
                    },
                    {
                        "id": "EditSession@change",
                        "type": "event",
                        "description": "Emitted when the document changes.",
                        "short_description": "Emitted when the document changes.",
                        "line": 1540,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "e",
                                            "description": "An object containing a `delta` of information about the change.",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "change",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.change",
                        "outFile": "edit_session.html#EditSession.event.change"
                    },
                    {
                        "id": "EditSession@changeAnnotation",
                        "type": "event",
                        "description": "Emitted when an annotation changes, like through [[EditSession.setAnnotations]].",
                        "short_description": "Emitted when an annotation changes, like through [[EditSession.setAnnotations]].",
                        "line": 1571,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "changeAnnotation",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.changeAnnotation",
                        "outFile": "edit_session.html#EditSession.event.changeAnnotation"
                    },
                    {
                        "id": "EditSession@changeBackMarker",
                        "type": "event",
                        "description": "Emitted when a back marker changes.",
                        "short_description": "Emitted when a back marker changes.",
                        "line": 1566,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "changeBackMarker",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.changeBackMarker",
                        "outFile": "edit_session.html#EditSession.event.changeBackMarker"
                    },
                    {
                        "id": "EditSession@changeBreakpoint",
                        "type": "event",
                        "description": "Emitted when the gutter changes, either by setting or removing breakpoints, or when the gutter decorations change.",
                        "short_description": "Emitted when the gutter changes, either by setting or removing breakpoints, or when the gutter decorations change.",
                        "line": 1556,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "changeBreakpoint",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.changeBreakpoint",
                        "outFile": "edit_session.html#EditSession.event.changeBreakpoint"
                    },
                    {
                        "id": "EditSession@changeFold",
                        "type": "event",
                        "description": "Emitted when a code fold is added or removed.",
                        "short_description": "Emitted when a code fold is added or removed.",
                        "line": 1607,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "changeFold",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.changeFold",
                        "outFile": "edit_session.html#EditSession.event.changeFold"
                    },
                    {
                        "id": "EditSession@changeFrontMarker",
                        "type": "event",
                        "description": "Emitted when a front marker changes.",
                        "short_description": "Emitted when a front marker changes.",
                        "line": 1561,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "changeFrontMarker",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.changeFrontMarker",
                        "outFile": "edit_session.html#EditSession.event.changeFrontMarker"
                    },
                    {
                        "id": "EditSession@changeMode",
                        "type": "event",
                        "description": "Emitted when the current mode changes.",
                        "short_description": "Emitted when the current mode changes.",
                        "line": 1589,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "changeMode",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.changeMode",
                        "outFile": "edit_session.html#EditSession.event.changeMode"
                    },
                    {
                        "id": "EditSession@changeOverwrite",
                        "type": "event",
                        "description": "Emitted when the ability to overwrite text changes, via [[EditSession.setOverwrite]].",
                        "short_description": "Emitted when the ability to overwrite text changes, via [[EditSession.setOverwrite]].",
                        "line": 1551,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "changeOverwrite",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.changeOverwrite",
                        "outFile": "edit_session.html#EditSession.event.changeOverwrite"
                    },
                    {
                        "id": "EditSession@changeScrollLeft",
                        "type": "event",
                        "description": "Emitted when the scroll left changes.",
                        "short_description": "Emitted when the scroll left changes.",
                        "line": 1619,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "scrollLeft",
                                            "description": "The new scroll left value",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "changeScrollLeft",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.changeScrollLeft",
                        "outFile": "edit_session.html#EditSession.event.changeScrollLeft"
                    },
                    {
                        "id": "EditSession@changeScrollTop",
                        "type": "event",
                        "description": "Emitted when the scroll top changes.",
                        "short_description": "Emitted when the scroll top changes.",
                        "line": 1613,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "scrollTop",
                                            "description": "The new scroll top value",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "changeScrollTop",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.changeScrollTop",
                        "outFile": "edit_session.html#EditSession.event.changeScrollTop"
                    },
                    {
                        "id": "EditSession@changeTabSize",
                        "type": "event",
                        "description": "Emitted when the tab size changes, via [[EditSession.setTabSize]].",
                        "short_description": "Emitted when the tab size changes, via [[EditSession.setTabSize]].",
                        "line": 1546,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "changeTabSize",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.changeTabSize",
                        "outFile": "edit_session.html#EditSession.event.changeTabSize"
                    },
                    {
                        "id": "EditSession@changeWrapLimit",
                        "type": "event",
                        "description": "Emitted when the wrapping limit changes.",
                        "short_description": "Emitted when the wrapping limit changes.",
                        "line": 1601,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "changeWrapLimit",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.changeWrapLimit",
                        "outFile": "edit_session.html#EditSession.event.changeWrapLimit"
                    },
                    {
                        "id": "EditSession@changeWrapMode",
                        "type": "event",
                        "description": "Emitted when the wrap mode changes.",
                        "short_description": "Emitted when the wrap mode changes.",
                        "line": 1595,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "changeWrapMode",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.changeWrapMode",
                        "outFile": "edit_session.html#EditSession.event.changeWrapMode"
                    },
                    {
                        "id": "EditSession@loadMode",
                        "type": "event",
                        "description": "Emitted when the mode is loaded.",
                        "short_description": "Emitted when the mode is loaded.",
                        "line": 1583,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "loadMode",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.loadMode",
                        "outFile": "edit_session.html#EditSession.event.loadMode"
                    },
                    {
                        "id": "EditSession@tokenizerUpdate",
                        "type": "event",
                        "description": "Emitted when a background tokenizer asynchronously processes new rows.",
                        "short_description": "Emitted when a background tokenizer asynchronously processes new rows.",
                        "line": 1576,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "e",
                                            "description": "An object containing one property, `\"data\"`, that contains information about the changing rows",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                        "name": "tokenizerUpdate",
                        "name_prefix": "EditSession@",
                        "path": "EditSession.event.tokenizerUpdate",
                        "outFile": "edit_session.html#EditSession.event.tokenizerUpdate"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/edit_session.js",
                "subclasses": [],
                "name": "EditSession",
                "path": "EditSession",
                "outFile": "edit_session.html"
            },
            {
                "id": "PlaceHolder",
                "type": "class",
                "incomplete": true,
                "line": 14534,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "PlaceHolder.cancel",
                        "type": "class method",
                        "description": "PlaceHolder.cancel()\n\nTODO",
                        "short_description": "PlaceHolder.cancel()\n",
                        "line": 14747,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/placeholder.js",
                        "name": "cancel",
                        "name_prefix": "PlaceHolder.",
                        "path": "PlaceHolder.cancel",
                        "outFile": "placeholder.html#PlaceHolder.cancel"
                    },
                    {
                        "id": "PlaceHolder.detach",
                        "type": "class method",
                        "description": "PlaceHolder.detach()\n\nTODO",
                        "short_description": "PlaceHolder.detach()\n",
                        "line": 14729,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/placeholder.js",
                        "name": "detach",
                        "name_prefix": "PlaceHolder.",
                        "path": "PlaceHolder.detach",
                        "outFile": "placeholder.html#PlaceHolder.detach"
                    },
                    {
                        "id": "PlaceHolder.hideOtherMarkers",
                        "type": "class method",
                        "description": "PlaceHolder.hideOtherMarkers()\n\nHides all over markers in the [[EditSession `EditSession`]] that are not the currently selected one.",
                        "short_description": "PlaceHolder.hideOtherMarkers()\n",
                        "line": 14628,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/placeholder.js",
                        "name": "hideOtherMarkers",
                        "name_prefix": "PlaceHolder.",
                        "path": "PlaceHolder.hideOtherMarkers",
                        "outFile": "placeholder.html#PlaceHolder.hideOtherMarkers"
                    },
                    {
                        "id": "new PlaceHolder",
                        "type": "constructor",
                        "description": "- session (Document): The document to associate with the anchor\n- length (Number): The starting row position\n- pos (Number): The starting column position\n- others (String):\n- mainClass (String):\n- othersClass (String):",
                        "short_description": "- session (Document): The document to associate with the anchor\n- length (Number): The starting row position\n- pos (Number): The starting column position\n- others (String):\n- mainClass (String):\n- othersClass (String):",
                        "line": 14540,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/placeholder.js",
                        "name": "new",
                        "name_prefix": "PlaceHolder.",
                        "path": "PlaceHolder.new",
                        "outFile": "placeholder.html#PlaceHolder.new"
                    },
                    {
                        "id": "PlaceHolder.onCursorChange",
                        "type": "class method",
                        "description": "PlaceHolder@onCursorChange(e)\n\nEmitted when the cursor changes.",
                        "short_description": "PlaceHolder@onCursorChange(e)\n",
                        "line": 14710,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "event",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/placeholder.js",
                        "name": "onCursorChange",
                        "name_prefix": "PlaceHolder.",
                        "path": "PlaceHolder.onCursorChange",
                        "outFile": "placeholder.html#PlaceHolder.onCursorChange"
                    },
                    {
                        "id": "PlaceHolder.onUpdate",
                        "type": "class method",
                        "description": "PlaceHolder@onUpdate(e)\n\nEmitted when the place holder updates.",
                        "short_description": "PlaceHolder@onUpdate(e)\n",
                        "line": 14642,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "event",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/placeholder.js",
                        "name": "onUpdate",
                        "name_prefix": "PlaceHolder.",
                        "path": "PlaceHolder.onUpdate",
                        "outFile": "placeholder.html#PlaceHolder.onUpdate"
                    },
                    {
                        "id": "PlaceHolder.setup",
                        "type": "class method",
                        "description": "PlaceHolder.setup()\n\nTODO",
                        "short_description": "PlaceHolder.setup()\n",
                        "line": 14582,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/placeholder.js",
                        "name": "setup",
                        "name_prefix": "PlaceHolder.",
                        "path": "PlaceHolder.setup",
                        "outFile": "placeholder.html#PlaceHolder.setup"
                    },
                    {
                        "id": "PlaceHolder.showOtherMarkers",
                        "type": "class method",
                        "description": "PlaceHolder.showOtherMarkers()\n\nTODO",
                        "short_description": "PlaceHolder.showOtherMarkers()\n",
                        "line": 14608,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/placeholder.js",
                        "name": "showOtherMarkers",
                        "name_prefix": "PlaceHolder.",
                        "path": "PlaceHolder.showOtherMarkers",
                        "outFile": "placeholder.html#PlaceHolder.showOtherMarkers"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/placeholder.js",
                "subclasses": [],
                "name": "PlaceHolder",
                "path": "PlaceHolder",
                "outFile": "placeholder.html"
            },
            {
                "id": "Range",
                "type": "class",
                "description": "This object is used in various places to indicate a region within the editor. To better visualize how this works, imagine a rectangle. Each quadrant of the rectangle is analogus to a range, as ranges contain a starting row and starting column, and an ending row, and ending column.",
                "short_description": "This object is used in various places to indicate a region within the editor. To better visualize how this works, imagine a rectangle. Each quadrant of the rectangle is analogus to a range, as ranges contain a starting row and starting column, and an ending row, and ending column.",
                "line": 14780,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "Range.clipRows",
                        "type": "class method",
                        "description": "Returns the part of the current `Range` that occurs within the boundaries of `firstRow` and `lastRow` as a new `Range` object.",
                        "short_description": "Returns the part of the current `Range` that occurs within the boundaries of `firstRow` and `lastRow` as a new `Range` object.",
                        "line": 15188,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "firstRow",
                                            "description": "The starting row",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "lastRow",
                                            "description": "The ending row",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "clipRows",
                        "name_prefix": "Range.",
                        "path": "Range.clipRows",
                        "outFile": "range.html#Range.clipRows"
                    },
                    {
                        "id": "Range.clone",
                        "type": "class method",
                        "description": "Returns a duplicate of the calling range.",
                        "short_description": "Returns a duplicate of the calling range.",
                        "line": 15261,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "clone",
                        "name_prefix": "Range.",
                        "path": "Range.clone",
                        "outFile": "range.html#Range.clone"
                    },
                    {
                        "id": "Range.collapseRows",
                        "type": "class method",
                        "description": "Returns a range containing the starting and ending rows of the original range, but with a column value of `0`.",
                        "short_description": "Returns a range containing the starting and ending rows of the original range, but with a column value of `0`.",
                        "line": 15270,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "collapseRows",
                        "name_prefix": "Range.",
                        "path": "Range.collapseRows",
                        "outFile": "range.html#Range.collapseRows"
                    },
                    {
                        "id": "Range.compare",
                        "type": "class method",
                        "description": "Checks the row and column points with the row and column points of the calling range.",
                        "short_description": "Checks the row and column points with the row and column points of the calling range.",
                        "line": 15067,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "A column point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "This method returns one of the following numbers:<br/>\n`0` if the two points are exactly equal <br/>\n`-1` if `p.row` is less then the calling range <br/>\n`1` if `p.row` is greater than the calling range <br/>\n<br/>\nIf the starting row of the calling range is equal to `p.row`, and: <br/>\n`p.column` is greater than or equal to the calling range's starting column, this returns `0`<br/>\nOtherwise, it returns -1<br/>\n<br/>\nIf the ending row of the calling range is equal to `p.row`, and: <br/>\n`p.column` is less than or equal to the calling range's ending column, this returns `0` <br/>\nOtherwise, it returns 1"
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "compare",
                        "name_prefix": "Range.",
                        "path": "Range.compare",
                        "outFile": "range.html#Range.compare"
                    },
                    {
                        "id": "Range.compareEnd",
                        "type": "class method",
                        "description": "Checks the row and column points with the row and column points of the calling range.",
                        "short_description": "Checks the row and column points with the row and column points of the calling range.",
                        "line": 15138,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "A column point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "This method returns one of the following numbers:<br/>\n`0` if the two points are exactly equal<br/>\n`-1` if `p.row` is less then the calling range<br/>\n`1` if `p.row` is greater than the calling range, or if `isEnd` is `true.<br/>\n<br/>\nIf the starting row of the calling range is equal to `p.row`, and:<br/>\n`p.column` is greater than or equal to the calling range's starting column, this returns `0`<br/>\nOtherwise, it returns -1<br/>\n<br/>\nIf the ending row of the calling range is equal to `p.row`, and:<br/>\n`p.column` is less than or equal to the calling range's ending column, this returns `0`<br/>\nOtherwise, it returns 1"
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "compareEnd",
                        "name_prefix": "Range.",
                        "path": "Range.compareEnd",
                        "outFile": "range.html#Range.compareEnd"
                    },
                    {
                        "id": "Range.compareInside",
                        "type": "class method",
                        "description": "Checks the row and column points with the row and column points of the calling range.",
                        "short_description": "Checks the row and column points with the row and column points of the calling range.",
                        "line": 15165,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "A column point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "This method returns one of the following numbers:<br/>\n* `1` if the ending row of the calling range is equal to `row`, and the ending column of the calling range is equal to `column`<br/>\n* `-1` if the starting row of the calling range is equal to `row`, and the starting column of the calling range is equal to `column`<br/>\n<br/>\nOtherwise, it returns the value after calling [[Range.compare `compare()`]]."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "compareInside",
                        "name_prefix": "Range.",
                        "path": "Range.compareInside",
                        "outFile": "range.html#Range.compareInside"
                    },
                    {
                        "id": "Range.comparePoint",
                        "type": "class method",
                        "description": "Checks the row and column points of `p` with the row and column points of the calling range.",
                        "short_description": "Checks the row and column points of `p` with the row and column points of the calling range.",
                        "line": 14898,
                        "author": [],
                        "related": "Range.compare",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "p",
                                            "description": "A point to compare with",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "This method returns one of the following numbers:<br/>\n* `0` if the two points are exactly equal<br/>\n* `-1` if `p.row` is less then the calling range<br/>\n* `1` if `p.row` is greater than the calling range<br/>\n<br/>\nIf the starting row of the calling range is equal to `p.row`, and:<br/>\n* `p.column` is greater than or equal to the calling range's starting column, this returns `0`<br/>\n* Otherwise, it returns -1<br/>\n<br/>\nIf the ending row of the calling range is equal to `p.row`, and:<br/>\n* `p.column` is less than or equal to the calling range's ending column, this returns `0`<br/>\n* Otherwise, it returns 1<br/>"
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "comparePoint",
                        "name_prefix": "Range.",
                        "path": "Range.comparePoint",
                        "outFile": "range.html#Range.comparePoint"
                    },
                    {
                        "id": "Range.compareRange",
                        "type": "class method",
                        "description": "Compares `this` range (A) with another range (B).",
                        "short_description": "Compares `this` range (A) with another range (B).",
                        "line": 14854,
                        "author": [],
                        "related": "Range.compare",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "range",
                                            "description": "A range to compare with",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "This method returns one of the following numbers:<br/>\n<br/>\n* `-2`: (B) is in front of (A), and doesn't intersect with (A)<br/>\n* `-1`: (B) begins before (A) but ends inside of (A)<br/>\n* `0`: (B) is completely inside of (A) OR (A) is completely inside of (B)<br/>\n* `+1`: (B) begins inside of (A) but ends outside of (A)<br/>\n* `+2`: (B) is after (A) and doesn't intersect with (A)<br/>\n* `42`: FTW state: (B) ends in (A) but starts outside of (A)"
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "compareRange",
                        "name_prefix": "Range.",
                        "path": "Range.compareRange",
                        "outFile": "range.html#Range.compareRange"
                    },
                    {
                        "id": "Range.compareStart",
                        "type": "class method",
                        "description": "Checks the row and column points with the row and column points of the calling range.",
                        "short_description": "Checks the row and column points with the row and column points of the calling range.",
                        "line": 15108,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "A column point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": "This method returns one of the following numbers:<br/>\n<br/>\n`0` if the two points are exactly equal<br/>\n`-1` if `p.row` is less then the calling range<br/>\n`1` if `p.row` is greater than the calling range, or if `isStart` is `true`.<br/>\n<br/>\nIf the starting row of the calling range is equal to `p.row`, and:<br/>\n`p.column` is greater than or equal to the calling range's starting column, this returns `0`<br/>\nOtherwise, it returns -1<br/>\n<br/>\nIf the ending row of the calling range is equal to `p.row`, and:<br/>\n`p.column` is less than or equal to the calling range's ending column, this returns `0`<br/>\nOtherwise, it returns 1"
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "compareStart",
                        "name_prefix": "Range.",
                        "path": "Range.compareStart",
                        "outFile": "range.html#Range.compareStart"
                    },
                    {
                        "id": "Range.contains",
                        "type": "class method",
                        "description": "Returns `true` if the `row` and `column` provided are within the given range. This can better be expressed as returning `true` if:\n```javascript\n   this.start.row <= row <= this.end.row &&\n   this.start.column <= column <= this.end.column\n```",
                        "short_description": "Returns `true` if the `row` and `column` provided are within the given range. This can better be expressed as returning `true` if:\n```javascript\n   this.start.row <= row <= this.end.row &&\n   this.start.column <= column <= this.end.column\n```",
                        "line": 14837,
                        "author": [],
                        "related": "Range.compare",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row to check for",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "A column to check for",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "contains",
                        "name_prefix": "Range.",
                        "path": "Range.contains",
                        "outFile": "range.html#Range.contains"
                    },
                    {
                        "id": "Range.containsRange",
                        "type": "class method",
                        "description": "Checks the start and end points of `range` and compares them to the calling range. Returns `true` if the `range` is contained within the caller's range.",
                        "short_description": "Checks the start and end points of `range` and compares them to the calling range. Returns `true` if the `range` is contained within the caller's range.",
                        "line": 14922,
                        "author": [],
                        "related": "Range.comparePoint",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "range",
                                            "description": "A range to compare with",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "containsRange",
                        "name_prefix": "Range.",
                        "path": "Range.containsRange",
                        "outFile": "range.html#Range.containsRange"
                    },
                    {
                        "id": "Range.extend",
                        "type": "class method",
                        "description": "Changes the row and column points for the calling range for both the starting and ending points.",
                        "short_description": "Changes the row and column points for the calling range for both the starting and ending points.",
                        "line": 15227,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A new row to extend to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "A new column to extend to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": "The original range with the new row"
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "extend",
                        "name_prefix": "Range.",
                        "path": "Range.extend",
                        "outFile": "range.html#Range.extend"
                    },
                    {
                        "id": "Range.fromPoints",
                        "type": "class method",
                        "description": "Creates and returns a new `Range` based on the row and column of the given parameters.",
                        "short_description": "Creates and returns a new `Range` based on the row and column of the given parameters.",
                        "line": 15303,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "start",
                                            "description": "A starting point to use",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "end",
                                            "description": "An ending point to use",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "fromPoints",
                        "name_prefix": "Range.",
                        "path": "Range.fromPoints",
                        "outFile": "range.html#Range.fromPoints"
                    },
                    {
                        "id": "Range.inside",
                        "type": "class method",
                        "description": "Returns `true` if the `row` and `column` are within the given range.",
                        "short_description": "Returns `true` if the `row` and `column` are within the given range.",
                        "line": 15006,
                        "author": [],
                        "related": "Range.compare",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "A column point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "inside",
                        "name_prefix": "Range.",
                        "path": "Range.inside",
                        "outFile": "range.html#Range.inside"
                    },
                    {
                        "id": "Range.insideEnd",
                        "type": "class method",
                        "description": "Returns `true` if the `row` and `column` are within the given range's ending points.",
                        "short_description": "Returns `true` if the `row` and `column` are within the given range's ending points.",
                        "line": 15046,
                        "author": [],
                        "related": "Range.compare",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "A column point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "insideEnd",
                        "name_prefix": "Range.",
                        "path": "Range.insideEnd",
                        "outFile": "range.html#Range.insideEnd"
                    },
                    {
                        "id": "Range.insideStart",
                        "type": "class method",
                        "description": "Returns `true` if the `row` and `column` are within the given range's starting points.",
                        "short_description": "Returns `true` if the `row` and `column` are within the given range's starting points.",
                        "line": 15026,
                        "author": [],
                        "related": "Range.compare",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "A column point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "insideStart",
                        "name_prefix": "Range.",
                        "path": "Range.insideStart",
                        "outFile": "range.html#Range.insideStart"
                    },
                    {
                        "id": "Range.intersects",
                        "type": "class method",
                        "description": "Returns `true` if passed in `range` intersects with the one calling this method.",
                        "short_description": "Returns `true` if passed in `range` intersects with the one calling this method.",
                        "line": 14934,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "range",
                                            "description": "A range to compare with",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "intersects",
                        "name_prefix": "Range.",
                        "path": "Range.intersects",
                        "outFile": "range.html#Range.intersects"
                    },
                    {
                        "id": "Range.isEnd",
                        "type": "class method",
                        "description": "Returns `true` if the caller's ending row point is the same as `row`, and if the caller's ending column is the same as `column`.",
                        "short_description": "Returns `true` if the caller's ending row point is the same as `row`, and if the caller's ending column is the same as `column`.",
                        "line": 14946,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "A column point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "isEnd",
                        "name_prefix": "Range.",
                        "path": "Range.isEnd",
                        "outFile": "range.html#Range.isEnd"
                    },
                    {
                        "id": "Range.isEqual",
                        "type": "class method",
                        "description": "Returns `true` if and only if the starting row and column, and ending tow and column, are equivalent to those given by `range`.",
                        "short_description": "Returns `true` if and only if the starting row and column, and ending tow and column, are equivalent to those given by `range`.",
                        "line": 14810,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "range",
                                            "description": "A range to check against",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "isEqual",
                        "name_prefix": "Range.",
                        "path": "Range.isEqual",
                        "outFile": "range.html#Range.isEqual"
                    },
                    {
                        "id": "Range.isMultiLine",
                        "type": "class method",
                        "description": "Returns `true` if the range spans across multiple lines.",
                        "short_description": "Returns `true` if the range spans across multiple lines.",
                        "line": 15252,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "isMultiLine",
                        "name_prefix": "Range.",
                        "path": "Range.isMultiLine",
                        "outFile": "range.html#Range.isMultiLine"
                    },
                    {
                        "id": "Range.isStart",
                        "type": "class method",
                        "description": "Returns `true` if the caller's starting row point is the same as `row`, and if the caller's starting column is the same as `column`.",
                        "short_description": "Returns `true` if the caller's starting row point is the same as `row`, and if the caller's starting column is the same as `column`.",
                        "line": 14958,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "A column point to compare with",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "isStart",
                        "name_prefix": "Range.",
                        "path": "Range.isStart",
                        "outFile": "range.html#Range.isStart"
                    },
                    {
                        "id": "new Range",
                        "type": "constructor",
                        "description": "Creates a new `Range` object with the given starting and ending row and column points.",
                        "short_description": "Creates a new `Range` object with the given starting and ending row and column points.",
                        "line": 14787,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "startRow",
                                            "description": "The starting row",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "startColumn",
                                            "description": "The starting column",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "endRow",
                                            "description": "The ending row",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "endColumn",
                                            "description": "The ending column",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "new",
                        "name_prefix": "Range.",
                        "path": "Range.new",
                        "outFile": "range.html#Range.new"
                    },
                    {
                        "id": "Range.setEnd",
                        "type": "class method",
                        "description": "Sets the starting row and column for the range.",
                        "short_description": "Sets the starting row and column for the range.",
                        "line": 14988,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row point to set",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "A column point to set",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "setEnd",
                        "name_prefix": "Range.",
                        "path": "Range.setEnd",
                        "outFile": "range.html#Range.setEnd"
                    },
                    {
                        "id": "Range.setStart",
                        "type": "class method",
                        "description": "Sets the starting row and column for the range.",
                        "short_description": "Sets the starting row and column for the range.",
                        "line": 14970,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row point to set",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "A column point to set",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "setStart",
                        "name_prefix": "Range.",
                        "path": "Range.setStart",
                        "outFile": "range.html#Range.setStart"
                    },
                    {
                        "id": "Range.toScreenRange",
                        "type": "class method",
                        "description": "Given the current `Range`, this function converts those starting and ending points into screen positions, and then returns a new `Range` object.",
                        "short_description": "Given the current `Range`, this function converts those starting and ending points into screen positions, and then returns a new `Range` object.",
                        "line": 15282,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "session",
                                            "description": "The `EditSession` to retrieve coordinates from",
                                            "types": [
                                                "EditSession"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "toScreenRange",
                        "name_prefix": "Range.",
                        "path": "Range.toScreenRange",
                        "outFile": "range.html#Range.toScreenRange"
                    },
                    {
                        "id": "Range.toString",
                        "type": "class method",
                        "description": "Returns a string containing the range's row and column information, given like this:\n```\n   [start.row/start.column] -> [end.row/end.column]\n```",
                        "short_description": "Returns a string containing the range's row and column information, given like this:\n```\n   [start.row/start.column] -> [end.row/end.column]\n```",
                        "line": 14824,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                        "name": "toString",
                        "name_prefix": "Range.",
                        "path": "Range.toString",
                        "outFile": "range.html#Range.toString"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/range.js",
                "subclasses": [],
                "name": "Range",
                "path": "Range",
                "outFile": "range.html"
            },
            {
                "id": "RenderLoop",
                "type": "class",
                "description": "Batches changes (that force something to be redrawn) in the background.",
                "short_description": "Batches changes (that force something to be redrawn) in the background.",
                "line": 15431,
                "author": [],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/renderloop.js",
                "subclasses": [],
                "name": "RenderLoop",
                "path": "RenderLoop",
                "outFile": "renderloop.html"
            },
            {
                "id": "ScrollBar",
                "type": "class",
                "description": "A set of methods for setting and retrieving the editor's scrollbar.",
                "short_description": "A set of methods for setting and retrieving the editor's scrollbar.",
                "line": 15530,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "ScrollBar.getWidth",
                        "type": "class method",
                        "description": "Returns the width of the scroll bar.",
                        "short_description": "Returns the width of the scroll bar.",
                        "line": 15582,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/scrollbar.js",
                        "name": "getWidth",
                        "name_prefix": "ScrollBar.",
                        "path": "ScrollBar.getWidth",
                        "outFile": "scrollbar.html#ScrollBar.getWidth"
                    },
                    {
                        "id": "new ScrollBar",
                        "type": "constructor",
                        "description": "Creates a new `ScrollBar`. `parent` is the owner of the scroll bar.",
                        "short_description": "Creates a new `ScrollBar`. `parent` is the owner of the scroll bar.",
                        "line": 15537,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "parent",
                                            "description": "A DOM element",
                                            "types": [
                                                "DOMElement"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/scrollbar.js",
                        "name": "new",
                        "name_prefix": "ScrollBar.",
                        "path": "ScrollBar.new",
                        "outFile": "scrollbar.html#ScrollBar.new"
                    },
                    {
                        "id": "ScrollBar.setHeight",
                        "type": "class method",
                        "description": "Sets the height of the scroll bar, in pixels.",
                        "short_description": "Sets the height of the scroll bar, in pixels.",
                        "line": 15591,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "height",
                                            "description": "The new height",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/scrollbar.js",
                        "name": "setHeight",
                        "name_prefix": "ScrollBar.",
                        "path": "ScrollBar.setHeight",
                        "outFile": "scrollbar.html#ScrollBar.setHeight"
                    },
                    {
                        "id": "ScrollBar.setInnerHeight",
                        "type": "class method",
                        "description": "Sets the inner height of the scroll bar, in pixels.",
                        "short_description": "Sets the inner height of the scroll bar, in pixels.",
                        "line": 15602,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "height",
                                            "description": "The new inner height",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/scrollbar.js",
                        "name": "setInnerHeight",
                        "name_prefix": "ScrollBar.",
                        "path": "ScrollBar.setInnerHeight",
                        "outFile": "scrollbar.html#ScrollBar.setInnerHeight"
                    },
                    {
                        "id": "ScrollBar.setScrollTop",
                        "type": "class method",
                        "description": "Sets the scroll top of the scroll bar.",
                        "short_description": "Sets the scroll top of the scroll bar.",
                        "line": 15616,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "scrollTop",
                                            "description": "The new scroll top",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/scrollbar.js",
                        "name": "setScrollTop",
                        "name_prefix": "ScrollBar.",
                        "path": "ScrollBar.setScrollTop",
                        "outFile": "scrollbar.html#ScrollBar.setScrollTop"
                    },
                    {
                        "id": "ScrollBar@scroll",
                        "type": "event",
                        "description": "Emitted when the scroll bar, well, scrolls.",
                        "short_description": "Emitted when the scroll bar, well, scrolls.",
                        "line": 15570,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "e",
                                            "description": "Contains one property, `\"data\"`, which indicates the current scroll top position",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/scrollbar.js",
                        "name": "scroll",
                        "name_prefix": "ScrollBar@",
                        "path": "ScrollBar.event.scroll",
                        "outFile": "scrollbar.html#ScrollBar.event.scroll"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/scrollbar.js",
                "subclasses": [],
                "name": "ScrollBar",
                "path": "ScrollBar",
                "outFile": "scrollbar.html"
            },
            {
                "id": "Search",
                "type": "class",
                "description": "A class designed to handle all sorts of text searches within a [[Document `Document`]].",
                "short_description": "A class designed to handle all sorts of text searches within a [[Document `Document`]].",
                "line": 15653,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "Search.find",
                        "type": "class method",
                        "description": "Searches for `options.needle`. If found, this method returns the [[Range `Range`]] where the text first occurs. If `options.backwards` is `true`, the search goes backwards in the session.",
                        "short_description": "Searches for `options.needle`. If found, this method returns the [[Range `Range`]] where the text first occurs. If `options.backwards` is `true`, the search goes backwards in the session.",
                        "line": 15712,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "session",
                                            "description": "The session to search with",
                                            "types": [
                                                "EditSession"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/search.js",
                        "name": "find",
                        "name_prefix": "Search.",
                        "path": "Search.find",
                        "outFile": "search.html#Search.find"
                    },
                    {
                        "id": "Search.findAll",
                        "type": "class method",
                        "description": "Searches for all occurances `options.needle`. If found, this method returns an array of [[Range `Range`s]] where the text first occurs. If `options.backwards` is `true`, the search goes backwards in the session.",
                        "short_description": "Searches for all occurances `options.needle`. If found, this method returns an array of [[Range `Range`s]] where the text first occurs. If `options.backwards` is `true`, the search goes backwards in the session.",
                        "line": 15738,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "session",
                                            "description": "The session to search with",
                                            "types": [
                                                "EditSession"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/search.js",
                        "name": "findAll",
                        "name_prefix": "Search.",
                        "path": "Search.findAll",
                        "outFile": "search.html#Search.findAll"
                    },
                    {
                        "id": "Search.getOptions",
                        "type": "class method",
                        "description": "[Returns an object containing all the search options.]{: #Search.getOptions}",
                        "short_description": "[Returns an object containing all the search options.]{: #Search.getOptions}",
                        "line": 15696,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/search.js",
                        "name": "getOptions",
                        "name_prefix": "Search.",
                        "path": "Search.getOptions",
                        "outFile": "search.html#Search.getOptions"
                    },
                    {
                        "id": "new Search",
                        "type": "constructor",
                        "description": "Creates a new `Search` object. The following search options are avaliable:\n\n- `needle`: The string or regular expression you're looking for\n- `backwards`: Whether to search backwards from where cursor currently is. Defaults to `false`.\n- `wrap`: Whether to wrap the search back to the beginning when it hits the end. Defaults to `false`.\n- `caseSensitive`: Whether the search ought to be case-sensitive. Defaults to `false`.\n- `wholeWord`: Whether the search matches only on whole words. Defaults to `false`.\n- `range`: The [[Range]] to search within. Set this to `null` for the whole document\n- `regExp`: Whether the search is a regular expression or not. Defaults to `false`.\n- `start`: The starting [[Range]] or cursor position to begin the search\n- `skipCurrent`: Whether or not to include the current line in the search. Default to `false`.",
                        "short_description": "Creates a new `Search` object. The following search options are avaliable:\n",
                        "line": 15660,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/search.js",
                        "name": "new",
                        "name_prefix": "Search.",
                        "path": "Search.new",
                        "outFile": "search.html#Search.new"
                    },
                    {
                        "id": "Search.replace",
                        "type": "class method",
                        "description": "Searches for `options.needle` in `input`, and, if found, replaces it with `replacement`.",
                        "short_description": "Searches for `options.needle` in `input`, and, if found, replaces it with `replacement`.",
                        "line": 15801,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "input",
                                            "description": "The text to search in",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "replacement",
                                            "description": "The replacing text\n+ (String): If `options.regExp` is `true`, this function returns `input` with the replacement already made. Otherwise, this function just returns `replacement`.<br/>\nIf `options.needle` was not found, this function returns `null`.",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/search.js",
                        "name": "replace",
                        "name_prefix": "Search.",
                        "path": "Search.replace",
                        "outFile": "search.html#Search.replace"
                    },
                    {
                        "id": "Search.set",
                        "type": "class method",
                        "description": "Sets the search options via the `options` parameter.",
                        "short_description": "Sets the search options via the `options` parameter.",
                        "line": 15683,
                        "chainable": true,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "options",
                                            "description": "An object containing all the new search properties",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Search",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/search.js",
                        "name": "set",
                        "name_prefix": "Search.",
                        "path": "Search.set",
                        "outFile": "search.html#Search.set"
                    },
                    {
                        "id": "Search.setOptions",
                        "type": "class method",
                        "description": "Sets the search options via the `options` parameter.",
                        "short_description": "Sets the search options via the `options` parameter.",
                        "line": 15704,
                        "author": [],
                        "related": "Search.set",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "An",
                                            "description": "object containing all the search propertie",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/search.js",
                        "name": "setOptions",
                        "name_prefix": "Search.",
                        "path": "Search.setOptions",
                        "outFile": "search.html#Search.setOptions"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/search.js",
                "subclasses": [],
                "name": "Search",
                "path": "Search",
                "outFile": "search.html"
            },
            {
                "id": "Selection",
                "type": "class",
                "description": "Contains the cursor position and the text selection of an edit session.\n\nThe row/columns used in the selection are in document coordinates representing ths coordinates as thez appear in the document before applying soft wrap and folding.",
                "short_description": "Contains the cursor position and the text selection of an edit session.\n",
                "line": 15839,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "Selection.clearSelection",
                        "type": "class method",
                        "description": "[Empties the selection (by de-selecting it). This function also emits the `'changeSelection'` event.]{: #Selection.clearSelection}",
                        "short_description": "[Empties the selection (by de-selecting it). This function also emits the `'changeSelection'` event.]{: #Selection.clearSelection}",
                        "line": 16023,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "clearSelection",
                        "name_prefix": "Selection.",
                        "path": "Selection.clearSelection",
                        "outFile": "selection.html#Selection.clearSelection"
                    },
                    {
                        "id": "Selection.getCursor",
                        "type": "class method",
                        "description": "Gets the current position of the cursor.",
                        "short_description": "Gets the current position of the cursor.",
                        "line": 15922,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "getCursor",
                        "name_prefix": "Selection.",
                        "path": "Selection.getCursor",
                        "outFile": "selection.html#Selection.getCursor"
                    },
                    {
                        "id": "Selection.getRange",
                        "type": "class method",
                        "description": "[Returns the [[Range]] for the selected text.]{: #Selection.getRange}",
                        "short_description": "[Returns the [[Range]] for the selected text.]{: #Selection.getRange}",
                        "line": 16004,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "getRange",
                        "name_prefix": "Selection.",
                        "path": "Selection.getRange",
                        "outFile": "selection.html#Selection.getRange"
                    },
                    {
                        "id": "Selection.getSelectionAnchor",
                        "type": "class method",
                        "description": "Returns an object containing the `row` and `column` of the calling selection anchor.",
                        "short_description": "Returns an object containing the `row` and `column` of the calling selection anchor.",
                        "line": 15946,
                        "author": [],
                        "related": "Anchor.getPosition",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "getSelectionAnchor",
                        "name_prefix": "Selection.",
                        "path": "Selection.getSelectionAnchor",
                        "outFile": "selection.html#Selection.getSelectionAnchor"
                    },
                    {
                        "id": "Selection.getSelectionLead",
                        "type": "class method",
                        "description": "Returns an object containing the `row` and `column` of the calling selection lead.",
                        "short_description": "Returns an object containing the `row` and `column` of the calling selection lead.",
                        "line": 15957,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "getSelectionLead",
                        "name_prefix": "Selection.",
                        "path": "Selection.getSelectionLead",
                        "outFile": "selection.html#Selection.getSelectionLead"
                    },
                    {
                        "id": "Selection.getWordRange",
                        "type": "class method",
                        "description": "Moves the selection to highlight the entire word.",
                        "short_description": "Moves the selection to highlight the entire word.",
                        "line": 16178,
                        "author": [],
                        "related": "EditSession.getWordRange",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "getWordRange",
                        "name_prefix": "Selection.",
                        "path": "Selection.getWordRange",
                        "outFile": "selection.html#Selection.getWordRange"
                    },
                    {
                        "id": "Selection.isBackwards",
                        "type": "class method",
                        "description": "Returns `true` if the selection is going backwards in the document.",
                        "short_description": "Returns `true` if the selection is going backwards in the document.",
                        "line": 15994,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "isBackwards",
                        "name_prefix": "Selection.",
                        "path": "Selection.isBackwards",
                        "outFile": "selection.html#Selection.isBackwards"
                    },
                    {
                        "id": "Selection.isEmpty",
                        "type": "class method",
                        "description": "Returns `true` if the selection is empty.",
                        "short_description": "Returns `true` if the selection is empty.",
                        "line": 15898,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "isEmpty",
                        "name_prefix": "Selection.",
                        "path": "Selection.isEmpty",
                        "outFile": "selection.html#Selection.isEmpty"
                    },
                    {
                        "id": "Selection.isMultiLine",
                        "type": "class method",
                        "description": "Returns `true` if the selection is a multi-line.",
                        "short_description": "Returns `true` if the selection is a multi-line.",
                        "line": 15910,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "isMultiLine",
                        "name_prefix": "Selection.",
                        "path": "Selection.isMultiLine",
                        "outFile": "selection.html#Selection.isMultiLine"
                    },
                    {
                        "id": "Selection.moveCursorBy",
                        "type": "class method",
                        "description": "Moves the cursor to position indicated by the parameters. Negative numbers move the cursor backwards in the document.",
                        "short_description": "Moves the cursor to position indicated by the parameters. Negative numbers move the cursor backwards in the document.",
                        "line": 16567,
                        "author": [],
                        "related": "EditSession.documentToScreenPosition",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "rows",
                                            "description": "The number of rows to move by",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "chars",
                                            "description": "The number of characters to move by",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "moveCursorBy",
                        "name_prefix": "Selection.",
                        "path": "Selection.moveCursorBy",
                        "outFile": "selection.html#Selection.moveCursorBy"
                    },
                    {
                        "id": "Selection.moveCursorDown",
                        "type": "class method",
                        "description": "Moves the cursor down one row.",
                        "short_description": "Moves the cursor down one row.",
                        "line": 16241,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "moveCursorDown",
                        "name_prefix": "Selection.",
                        "path": "Selection.moveCursorDown",
                        "outFile": "selection.html#Selection.moveCursorDown"
                    },
                    {
                        "id": "Selection.moveCursorFileEnd",
                        "type": "class method",
                        "description": "Moves the cursor to the end of the file.",
                        "short_description": "Moves the cursor to the end of the file.",
                        "line": 16350,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "moveCursorFileEnd",
                        "name_prefix": "Selection.",
                        "path": "Selection.moveCursorFileEnd",
                        "outFile": "selection.html#Selection.moveCursorFileEnd"
                    },
                    {
                        "id": "Selection.moveCursorFileStart",
                        "type": "class method",
                        "description": "Moves the cursor to the start of the file.",
                        "short_description": "Moves the cursor to the start of the file.",
                        "line": 16360,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "moveCursorFileStart",
                        "name_prefix": "Selection.",
                        "path": "Selection.moveCursorFileStart",
                        "outFile": "selection.html#Selection.moveCursorFileStart"
                    },
                    {
                        "id": "Selection.moveCursorLeft",
                        "type": "class method",
                        "description": "Moves the cursor left one column.",
                        "short_description": "Moves the cursor left one column.",
                        "line": 16249,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "moveCursorLeft",
                        "name_prefix": "Selection.",
                        "path": "Selection.moveCursorLeft",
                        "outFile": "selection.html#Selection.moveCursorLeft"
                    },
                    {
                        "id": "Selection.moveCursorLineEnd",
                        "type": "class method",
                        "description": "Moves the cursor to the end of the line.",
                        "short_description": "Moves the cursor to the end of the line.",
                        "line": 16331,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "moveCursorLineEnd",
                        "name_prefix": "Selection.",
                        "path": "Selection.moveCursorLineEnd",
                        "outFile": "selection.html#Selection.moveCursorLineEnd"
                    },
                    {
                        "id": "Selection.moveCursorLineStart",
                        "type": "class method",
                        "description": "Moves the cursor to the start of the line.",
                        "short_description": "Moves the cursor to the start of the line.",
                        "line": 16299,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "moveCursorLineStart",
                        "name_prefix": "Selection.",
                        "path": "Selection.moveCursorLineStart",
                        "outFile": "selection.html#Selection.moveCursorLineStart"
                    },
                    {
                        "id": "Selection.moveCursorLongWordLeft",
                        "type": "class method",
                        "description": "Moves the cursor to the word on the left.",
                        "short_description": "Moves the cursor to the word on the left.",
                        "line": 16414,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "moveCursorLongWordLeft",
                        "name_prefix": "Selection.",
                        "path": "Selection.moveCursorLongWordLeft",
                        "outFile": "selection.html#Selection.moveCursorLongWordLeft"
                    },
                    {
                        "id": "Selection.moveCursorLongWordRight",
                        "type": "class method",
                        "description": "Moves the cursor to the word on the right.",
                        "short_description": "Moves the cursor to the word on the right.",
                        "line": 16368,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "moveCursorLongWordRight",
                        "name_prefix": "Selection.",
                        "path": "Selection.moveCursorLongWordRight",
                        "outFile": "selection.html#Selection.moveCursorLongWordRight"
                    },
                    {
                        "id": "Selection.moveCursorRight",
                        "type": "class method",
                        "description": "Moves the cursor right one column.",
                        "short_description": "Moves the cursor right one column.",
                        "line": 16274,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "moveCursorRight",
                        "name_prefix": "Selection.",
                        "path": "Selection.moveCursorRight",
                        "outFile": "selection.html#Selection.moveCursorRight"
                    },
                    {
                        "id": "Selection.moveCursorTo",
                        "type": "class method",
                        "description": "Moves the cursor to the row and column provided. [If `preventUpdateDesiredColumn` is `true`, then the cursor stays in the same column position as its original point.]{: #preventUpdateBoolDesc}",
                        "short_description": "Moves the cursor to the row and column provided. [If `preventUpdateDesiredColumn` is `true`, then the cursor stays in the same column position as its original point.]{: #preventUpdateBoolDesc}",
                        "line": 16604,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row to move to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "The column to move to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "keepDesiredColumn",
                                            "description": "[If `true`, the cursor move does not respect the previous column]{: #preventUpdateBool}",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "moveCursorTo",
                        "name_prefix": "Selection.",
                        "path": "Selection.moveCursorTo",
                        "outFile": "selection.html#Selection.moveCursorTo"
                    },
                    {
                        "id": "Selection.moveCursorToPosition",
                        "type": "class method",
                        "description": "Moves the selection to the position indicated by its `row` and `column`.",
                        "short_description": "Moves the selection to the position indicated by its `row` and `column`.",
                        "line": 16594,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "position",
                                            "description": "The position to move to",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "moveCursorToPosition",
                        "name_prefix": "Selection.",
                        "path": "Selection.moveCursorToPosition",
                        "outFile": "selection.html#Selection.moveCursorToPosition"
                    },
                    {
                        "id": "Selection.moveCursorToScreen",
                        "type": "class method",
                        "description": "Moves the cursor to the screen position indicated by row and column. {:preventUpdateBoolDesc}",
                        "short_description": "Moves the cursor to the screen position indicated by row and column. {:preventUpdateBoolDesc}",
                        "line": 16628,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row to move to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "The column to move to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "keepDesiredColumn",
                                            "description": "{:preventUpdateBool}",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "moveCursorToScreen",
                        "name_prefix": "Selection.",
                        "path": "Selection.moveCursorToScreen",
                        "outFile": "selection.html#Selection.moveCursorToScreen"
                    },
                    {
                        "id": "Selection.moveCursorUp",
                        "type": "class method",
                        "description": "Moves the cursor up one row.",
                        "short_description": "Moves the cursor up one row.",
                        "line": 16233,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "moveCursorUp",
                        "name_prefix": "Selection.",
                        "path": "Selection.moveCursorUp",
                        "outFile": "selection.html#Selection.moveCursorUp"
                    },
                    {
                        "id": "new Selection",
                        "type": "constructor",
                        "description": "Creates a new `Selection` object.",
                        "short_description": "Creates a new `Selection` object.",
                        "line": 15863,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "session",
                                            "description": "The session to use",
                                            "types": [
                                                "EditSession"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "new",
                        "name_prefix": "Selection.",
                        "path": "Selection.new",
                        "outFile": "selection.html#Selection.new"
                    },
                    {
                        "id": "Selection.selectAll",
                        "type": "class method",
                        "description": "Selects all the text in the document.",
                        "short_description": "Selects all the text in the document.",
                        "line": 16033,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectAll",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectAll",
                        "outFile": "selection.html#Selection.selectAll"
                    },
                    {
                        "id": "Selection.selectAWord",
                        "type": "class method",
                        "description": "Selects a word, including its right whitespace.",
                        "short_description": "Selects a word, including its right whitespace.",
                        "line": 16199,
                        "author": [],
                        "related": "EditSession.getAWordRange",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectAWord",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectAWord",
                        "outFile": "selection.html#Selection.selectAWord"
                    },
                    {
                        "id": "Selection.selectDown",
                        "type": "class method",
                        "description": "Moves the selection down one row.",
                        "short_description": "Moves the selection down one row.",
                        "line": 16105,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectDown",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectDown",
                        "outFile": "selection.html#Selection.selectDown"
                    },
                    {
                        "id": "Selection.selectFileEnd",
                        "type": "class method",
                        "description": "Moves the selection to the end of the file.",
                        "short_description": "Moves the selection to the end of the file.",
                        "line": 16146,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectFileEnd",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectFileEnd",
                        "outFile": "selection.html#Selection.selectFileEnd"
                    },
                    {
                        "id": "Selection.selectFileStart",
                        "type": "class method",
                        "description": "Moves the selection to the start of the file.",
                        "short_description": "Moves the selection to the start of the file.",
                        "line": 16154,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectFileStart",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectFileStart",
                        "outFile": "selection.html#Selection.selectFileStart"
                    },
                    {
                        "id": "Selection.selectLeft",
                        "type": "class method",
                        "description": "Moves the selection left one column.",
                        "short_description": "Moves the selection left one column.",
                        "line": 16122,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectLeft",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectLeft",
                        "outFile": "selection.html#Selection.selectLeft"
                    },
                    {
                        "id": "Selection.selectLine",
                        "type": "class method",
                        "description": "Selects the entire line.",
                        "short_description": "Selects the entire line.",
                        "line": 16226,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectLine",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectLine",
                        "outFile": "selection.html#Selection.selectLine"
                    },
                    {
                        "id": "Selection.selectLineEnd",
                        "type": "class method",
                        "description": "Moves the selection to the end of the current line.",
                        "short_description": "Moves the selection to the end of the current line.",
                        "line": 16138,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectLineEnd",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectLineEnd",
                        "outFile": "selection.html#Selection.selectLineEnd"
                    },
                    {
                        "id": "Selection.selectLineStart",
                        "type": "class method",
                        "description": "Moves the selection to the beginning of the current line.",
                        "short_description": "Moves the selection to the beginning of the current line.",
                        "line": 16130,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectLineStart",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectLineStart",
                        "outFile": "selection.html#Selection.selectLineStart"
                    },
                    {
                        "id": "Selection.selectRight",
                        "type": "class method",
                        "description": "Moves the selection right one column.",
                        "short_description": "Moves the selection right one column.",
                        "line": 16113,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectRight",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectRight",
                        "outFile": "selection.html#Selection.selectRight"
                    },
                    {
                        "id": "Selection.selectTo",
                        "type": "class method",
                        "description": "Moves the selection cursor to the indicated row and column.",
                        "short_description": "Moves the selection cursor to the indicated row and column.",
                        "line": 16070,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The row to select to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "The column to select to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectTo",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectTo",
                        "outFile": "selection.html#Selection.selectTo"
                    },
                    {
                        "id": "Selection.selectToPosition",
                        "type": "class method",
                        "description": "Moves the selection cursor to the row and column indicated by `pos`.",
                        "short_description": "Moves the selection cursor to the row and column indicated by `pos`.",
                        "line": 16084,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "pos",
                                            "description": "An object containing the row and column",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectToPosition",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectToPosition",
                        "outFile": "selection.html#Selection.selectToPosition"
                    },
                    {
                        "id": "Selection.selectUp",
                        "type": "class method",
                        "description": "Moves the selection up one row.",
                        "short_description": "Moves the selection up one row.",
                        "line": 16097,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectUp",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectUp",
                        "outFile": "selection.html#Selection.selectUp"
                    },
                    {
                        "id": "Selection.selectWord",
                        "type": "class method",
                        "description": "Selects an entire word boundary.",
                        "short_description": "Selects an entire word boundary.",
                        "line": 16191,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectWord",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectWord",
                        "outFile": "selection.html#Selection.selectWord"
                    },
                    {
                        "id": "Selection.selectWordLeft",
                        "type": "class method",
                        "description": "Moves the selection to the first word on the left.",
                        "short_description": "Moves the selection to the first word on the left.",
                        "line": 16170,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectWordLeft",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectWordLeft",
                        "outFile": "selection.html#Selection.selectWordLeft"
                    },
                    {
                        "id": "Selection.selectWordRight",
                        "type": "class method",
                        "description": "Moves the selection to the first word on the right.",
                        "short_description": "Moves the selection to the first word on the right.",
                        "line": 16162,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "selectWordRight",
                        "name_prefix": "Selection.",
                        "path": "Selection.selectWordRight",
                        "outFile": "selection.html#Selection.selectWordRight"
                    },
                    {
                        "id": "Selection.setSelectionAnchor",
                        "type": "class method",
                        "description": "Sets the row and column position of the anchor. This function also emits the `'changeSelection'` event.",
                        "short_description": "Sets the row and column position of the anchor. This function also emits the `'changeSelection'` event.",
                        "line": 15930,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The new row",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "The new column",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "setSelectionAnchor",
                        "name_prefix": "Selection.",
                        "path": "Selection.setSelectionAnchor",
                        "outFile": "selection.html#Selection.setSelectionAnchor"
                    },
                    {
                        "id": "Selection.setSelectionRange",
                        "type": "class method",
                        "description": "Sets the selection to the provided range.",
                        "short_description": "Sets the selection to the provided range.",
                        "line": 16042,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "range",
                                            "description": "The range of text to select",
                                            "types": [
                                                "Range"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "reverse",
                                            "description": "Indicates if the range should go backwards (`true`) or not",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "setSelectionRange",
                        "name_prefix": "Selection.",
                        "path": "Selection.setSelectionRange",
                        "outFile": "selection.html#Selection.setSelectionRange"
                    },
                    {
                        "id": "Selection.shiftSelection",
                        "type": "class method",
                        "description": "Shifts the selection up (or down, if [[Selection.isBackwards `isBackwards()`]] is true) the given number of columns.",
                        "short_description": "Shifts the selection up (or down, if [[Selection.isBackwards `isBackwards()`]] is true) the given number of columns.",
                        "line": 15966,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "columns",
                                            "description": "The number of columns to shift by",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "shiftSelection",
                        "name_prefix": "Selection.",
                        "path": "Selection.shiftSelection",
                        "outFile": "selection.html#Selection.shiftSelection"
                    },
                    {
                        "id": "Selection@changeCursor",
                        "type": "event",
                        "description": "Emitted when the cursor position changes.",
                        "short_description": "Emitted when the cursor position changes.",
                        "line": 15849,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "changeCursor",
                        "name_prefix": "Selection@",
                        "path": "Selection.event.changeCursor",
                        "outFile": "selection.html#Selection.event.changeCursor"
                    },
                    {
                        "id": "Selection@changeSelection",
                        "type": "event",
                        "description": "Emitted when the cursor selection changes.",
                        "short_description": "Emitted when the cursor selection changes.",
                        "line": 15856,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "cancelable": [],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                        "name": "changeSelection",
                        "name_prefix": "Selection@",
                        "path": "Selection.event.changeSelection",
                        "outFile": "selection.html#Selection.event.changeSelection"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/selection.js",
                "subclasses": [],
                "name": "Selection",
                "path": "Selection",
                "outFile": "selection.html"
            },
            {
                "id": "Split",
                "type": "class",
                "incomplete": true,
                "line": 16682,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "Split.blur",
                        "type": "class method",
                        "description": "Blurs the current editor.",
                        "short_description": "Blurs the current editor.",
                        "line": 16795,
                        "author": [],
                        "related": "Editor.blur",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/split.js",
                        "name": "blur",
                        "name_prefix": "Split.",
                        "path": "Split.blur",
                        "outFile": "split.html#Split.blur"
                    },
                    {
                        "id": "Split.focus",
                        "type": "class method",
                        "description": "Focuses the current editor.",
                        "short_description": "Focuses the current editor.",
                        "line": 16787,
                        "author": [],
                        "related": "Editor.focus",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/split.js",
                        "name": "focus",
                        "name_prefix": "Split.",
                        "path": "Split.focus",
                        "outFile": "split.html#Split.focus"
                    },
                    {
                        "id": "Split.forEach",
                        "type": "class method",
                        "incomplete": true,
                        "line": 16829,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "callback",
                                            "description": "A callback function to execute",
                                            "types": [
                                                "Function"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "scope",
                                            "description": "The default scope for the callback\n\nExecutes `callback` on all of the available editors.",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/split.js",
                        "name": "forEach",
                        "name_prefix": "Split.",
                        "path": "Split.forEach",
                        "outFile": "split.html#Split.forEach"
                    },
                    {
                        "id": "Split.getCurrentEditor",
                        "type": "class method",
                        "description": "Returns the current editor.",
                        "short_description": "Returns the current editor.",
                        "line": 16778,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Editor",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/split.js",
                        "name": "getCurrentEditor",
                        "name_prefix": "Split.",
                        "path": "Split.getCurrentEditor",
                        "outFile": "split.html#Split.getCurrentEditor"
                    },
                    {
                        "id": "Split.getEditor",
                        "type": "class method",
                        "incomplete": true,
                        "line": 16768,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "idx",
                                            "description": "The index of the editor you want\n\nReturns the editor identified by the index `idx`.",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/split.js",
                        "name": "getEditor",
                        "name_prefix": "Split.",
                        "path": "Split.getEditor",
                        "outFile": "split.html#Split.getEditor"
                    },
                    {
                        "id": "Split.getOrientation",
                        "type": "class method",
                        "description": "Returns the orientation.",
                        "short_description": "Returns the orientation.",
                        "line": 16917,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/split.js",
                        "name": "getOrientation",
                        "name_prefix": "Split.",
                        "path": "Split.getOrientation",
                        "outFile": "split.html#Split.getOrientation"
                    },
                    {
                        "id": "Split.getSplits",
                        "type": "class method",
                        "description": "Returns the number of splits.",
                        "short_description": "Returns the number of splits.",
                        "line": 16759,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/split.js",
                        "name": "getSplits",
                        "name_prefix": "Split.",
                        "path": "Split.getSplits",
                        "outFile": "split.html#Split.getSplits"
                    },
                    {
                        "id": "Split.resize",
                        "type": "class method",
                        "description": "Split.resize() -> Void\n\n\nResizes the editor.",
                        "short_description": "Split.resize() -> Void\n",
                        "line": 16941,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/split.js",
                        "name": "resize",
                        "name_prefix": "Split.",
                        "path": "Split.resize",
                        "outFile": "split.html#Split.resize"
                    },
                    {
                        "id": "Split.setFontSize",
                        "type": "class method",
                        "incomplete": true,
                        "line": 16843,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "size",
                                            "description": "The new font size\n\nSets the font size, in pixels, for all the available editors.",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/split.js",
                        "name": "setFontSize",
                        "name_prefix": "Split.",
                        "path": "Split.setFontSize",
                        "outFile": "split.html#Split.setFontSize"
                    },
                    {
                        "id": "Split.setKeyboardHandler",
                        "type": "class method",
                        "incomplete": true,
                        "line": 16816,
                        "author": [],
                        "related": "editor.setKeyboardHandler",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "keybinding",
                                            "description": "Sets the keyboard handler for the editor.",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/split.js",
                        "name": "setKeyboardHandler",
                        "name_prefix": "Split.",
                        "path": "Split.setKeyboardHandler",
                        "outFile": "split.html#Split.setKeyboardHandler"
                    },
                    {
                        "id": "Split.setOrientation",
                        "type": "class method",
                        "incomplete": true,
                        "line": 16926,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "orientation",
                                            "description": "The new orientation value\n\nSets the orientation.",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/split.js",
                        "name": "setOrientation",
                        "name_prefix": "Split.",
                        "path": "Split.setOrientation",
                        "outFile": "split.html#Split.setOrientation"
                    },
                    {
                        "id": "Split.setSession",
                        "type": "class method",
                        "incomplete": true,
                        "line": 16883,
                        "author": [],
                        "related": "Editor.setSession",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "session",
                                            "description": "The new edit session",
                                            "types": [
                                                "EditSession"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "idx",
                                            "description": "The editor's index you're interested in\n\nSets a new [[EditSession `EditSession`]] for the indicated editor.",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/split.js",
                        "name": "setSession",
                        "name_prefix": "Split.",
                        "path": "Split.setSession",
                        "outFile": "split.html#Split.setSession"
                    },
                    {
                        "id": "Split.setTheme",
                        "type": "class method",
                        "incomplete": true,
                        "line": 16803,
                        "author": [],
                        "related": "Editor.setTheme",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "theme",
                                            "description": "The name of the theme to set\n\nSets a theme for each of the available editors.",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/split.js",
                        "name": "setTheme",
                        "name_prefix": "Split.",
                        "path": "Split.setTheme",
                        "outFile": "split.html#Split.setTheme"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/split.js",
                "subclasses": [],
                "name": "Split",
                "path": "Split",
                "outFile": "split.html"
            },
            {
                "id": "TokenIterator",
                "type": "class",
                "description": "This class provides an essay way to treat the document as a stream of tokens, and provides methods to iterate over these tokens.",
                "short_description": "This class provides an essay way to treat the document as a stream of tokens, and provides methods to iterate over these tokens.",
                "line": 16974,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "TokenIterator.getCurrentToken",
                        "type": "class method",
                        "description": "Returns the current tokenized string.",
                        "short_description": "Returns the current tokenized string.",
                        "line": 17045,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/token_iterator.js",
                        "name": "getCurrentToken",
                        "name_prefix": "TokenIterator.",
                        "path": "TokenIterator.getCurrentToken",
                        "outFile": "token_iterator.html#TokenIterator.getCurrentToken"
                    },
                    {
                        "id": "TokenIterator.getCurrentTokenColumn",
                        "type": "class method",
                        "description": "Returns the current column.",
                        "short_description": "Returns the current column.",
                        "line": 17063,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/token_iterator.js",
                        "name": "getCurrentTokenColumn",
                        "name_prefix": "TokenIterator.",
                        "path": "TokenIterator.getCurrentTokenColumn",
                        "outFile": "token_iterator.html#TokenIterator.getCurrentTokenColumn"
                    },
                    {
                        "id": "TokenIterator.getCurrentTokenRow",
                        "type": "class method",
                        "description": "Returns the current row.",
                        "short_description": "Returns the current row.",
                        "line": 17054,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/token_iterator.js",
                        "name": "getCurrentTokenRow",
                        "name_prefix": "TokenIterator.",
                        "path": "TokenIterator.getCurrentTokenRow",
                        "outFile": "token_iterator.html#TokenIterator.getCurrentTokenRow"
                    },
                    {
                        "id": "new TokenIterator",
                        "type": "constructor",
                        "description": "Creates a new token iterator object. The inital token index is set to the provided row and column coordinates.",
                        "short_description": "Creates a new token iterator object. The inital token index is set to the provided row and column coordinates.",
                        "line": 16981,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "session",
                                            "description": "The session to associate with",
                                            "types": [
                                                "EditSession"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "initialRow",
                                            "description": "The row to start the tokenizing at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "initialColumn",
                                            "description": "The column to start the tokenizing at",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/token_iterator.js",
                        "name": "new",
                        "name_prefix": "TokenIterator.",
                        "path": "TokenIterator.new",
                        "outFile": "token_iterator.html#TokenIterator.new"
                    },
                    {
                        "id": "TokenIterator.stepBackward",
                        "type": "class method",
                        "description": "Tokenizes all the items from the current point to the row prior in the document.",
                        "short_description": "Tokenizes all the items from the current point to the row prior in the document.",
                        "line": 17000,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/token_iterator.js",
                        "name": "stepBackward",
                        "name_prefix": "TokenIterator.",
                        "path": "TokenIterator.stepBackward",
                        "outFile": "token_iterator.html#TokenIterator.stepBackward"
                    },
                    {
                        "id": "TokenIterator.stepForward",
                        "type": "class method",
                        "description": "Tokenizes all the items from the current point until the next row in the document. If the current point is at the end of the file, this function returns `null`. Otherwise, it returns the tokenized string.",
                        "short_description": "Tokenizes all the items from the current point until the next row in the document. If the current point is at the end of the file, this function returns `null`. Otherwise, it returns the tokenized string.",
                        "line": 17022,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/token_iterator.js",
                        "name": "stepForward",
                        "name_prefix": "TokenIterator.",
                        "path": "TokenIterator.stepForward",
                        "outFile": "token_iterator.html#TokenIterator.stepForward"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/token_iterator.js",
                "subclasses": [],
                "name": "TokenIterator",
                "path": "TokenIterator",
                "outFile": "token_iterator.html"
            },
            {
                "id": "Tokenizer",
                "type": "class",
                "description": "This class takes a set of highlighting rules, and creates a tokenizer out of them. For more information, see [the wiki on extending highlighters](https://github.com/ajaxorg/ace/wiki/Creating-or-Extending-an-Edit-Mode#wiki-extendingTheHighlighter).",
                "short_description": "This class takes a set of highlighting rules, and creates a tokenizer out of them. For more information, see [the wiki on extending highlighters](https://github.com/ajaxorg/ace/wiki/Creating-or-Extending-an-Edit-Mode#wiki-extendingTheHighlighter).",
                "line": 17105,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "Tokenizer.getLineTokens",
                        "type": "class method",
                        "description": "Returns an object containing two properties: `tokens`, which contains all the tokens; and `state`, the current state.",
                        "short_description": "Returns an object containing two properties: `tokens`, which contains all the tokens; and `state`, the current state.",
                        "line": 17167,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "line",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "startState",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/tokenizer.js",
                        "name": "getLineTokens",
                        "name_prefix": "Tokenizer.",
                        "path": "Tokenizer.getLineTokens",
                        "outFile": "tokenizer.html#Tokenizer.getLineTokens"
                    },
                    {
                        "id": "new Tokenizer",
                        "type": "constructor",
                        "description": "Constructs a new tokenizer based on the given rules and flags.",
                        "short_description": "Constructs a new tokenizer based on the given rules and flags.",
                        "line": 17112,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "rules",
                                            "description": "The highlighting rules",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "flag",
                                            "description": "Any additional regular expression flags to pass (like \"i\" for case insensitive)",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/tokenizer.js",
                        "name": "new",
                        "name_prefix": "Tokenizer.",
                        "path": "Tokenizer.new",
                        "outFile": "tokenizer.html#Tokenizer.new"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/tokenizer.js",
                "subclasses": [],
                "name": "Tokenizer",
                "path": "Tokenizer",
                "outFile": "tokenizer.html"
            },
            {
                "id": "UndoManager",
                "type": "class",
                "description": "This object maintains the undo stack for an [[EditSession `EditSession`]].",
                "short_description": "This object maintains the undo stack for an [[EditSession `EditSession`]].",
                "line": 17363,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "UndoManager.execute",
                        "type": "class method",
                        "description": "Provides a means for implementing your own undo manager. `options` has one property, `args`, an [[Array `Array`]], with two elements:\n\n- `args[0]` is an array of deltas\n- `args[1]` is the document to associate with",
                        "short_description": "Provides a means for implementing your own undo manager. `options` has one property, `args`, an [[Array `Array`]], with two elements:\n",
                        "line": 17383,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "options",
                                            "description": "Contains additional properties",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/undomanager.js",
                        "name": "execute",
                        "name_prefix": "UndoManager.",
                        "path": "UndoManager.execute",
                        "outFile": "undomanager.html#UndoManager.execute"
                    },
                    {
                        "id": "UndoManager.hasRedo",
                        "type": "class method",
                        "description": "Returns `true` if there are redo operations left to perform.",
                        "short_description": "Returns `true` if there are redo operations left to perform.",
                        "line": 17452,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/undomanager.js",
                        "name": "hasRedo",
                        "name_prefix": "UndoManager.",
                        "path": "UndoManager.hasRedo",
                        "outFile": "undomanager.html#UndoManager.hasRedo"
                    },
                    {
                        "id": "UndoManager.hasUndo",
                        "type": "class method",
                        "description": "Returns `true` if there are undo operations left to perform.",
                        "short_description": "Returns `true` if there are undo operations left to perform.",
                        "line": 17443,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/undomanager.js",
                        "name": "hasUndo",
                        "name_prefix": "UndoManager.",
                        "path": "UndoManager.hasUndo",
                        "outFile": "undomanager.html#UndoManager.hasUndo"
                    },
                    {
                        "id": "new UndoManager",
                        "type": "constructor",
                        "description": "Resets the current undo state and creates a new `UndoManager`.",
                        "short_description": "Resets the current undo state and creates a new `UndoManager`.",
                        "line": 17370,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/undomanager.js",
                        "name": "new",
                        "name_prefix": "UndoManager.",
                        "path": "UndoManager.new",
                        "outFile": "undomanager.html#UndoManager.new"
                    },
                    {
                        "id": "UndoManager.redo",
                        "type": "class method",
                        "description": "[Perform a redo operation on the document, reimplementing the last change.]{: #UndoManager.redo}",
                        "short_description": "[Perform a redo operation on the document, reimplementing the last change.]{: #UndoManager.redo}",
                        "line": 17417,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "dontSelect",
                                            "description": "{:dontSelect}",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/undomanager.js",
                        "name": "redo",
                        "name_prefix": "UndoManager.",
                        "path": "UndoManager.redo",
                        "outFile": "undomanager.html#UndoManager.redo"
                    },
                    {
                        "id": "UndoManager.reset",
                        "type": "class method",
                        "description": "Destroys the stack of undo and redo redo operations.",
                        "short_description": "Destroys the stack of undo and redo redo operations.",
                        "line": 17434,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/undomanager.js",
                        "name": "reset",
                        "name_prefix": "UndoManager.",
                        "path": "UndoManager.reset",
                        "outFile": "undomanager.html#UndoManager.reset"
                    },
                    {
                        "id": "UndoManager.undo",
                        "type": "class method",
                        "description": "[Perform an undo operation on the document, reverting the last change.]{: #UndoManager.undo}",
                        "short_description": "[Perform an undo operation on the document, reverting the last change.]{: #UndoManager.undo}",
                        "line": 17399,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "dontSelect",
                                            "description": "{:dontSelect}",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Range",
                                        "description": "The range of the undo."
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/undomanager.js",
                        "name": "undo",
                        "name_prefix": "UndoManager.",
                        "path": "UndoManager.undo",
                        "outFile": "undomanager.html#UndoManager.undo"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/undomanager.js",
                "subclasses": [],
                "name": "UndoManager",
                "path": "UndoManager",
                "outFile": "undomanager.html"
            },
            {
                "id": "VirtualRenderer",
                "type": "class",
                "description": "The class that is responsible for drawing everything you see on the screen!",
                "short_description": "The class that is responsible for drawing everything you see on the screen!",
                "line": 17556,
                "author": [],
                "aliases": [],
                "children": [
                    {
                        "id": "VirtualRenderer.addGutterDecoration",
                        "type": "class method",
                        "description": "Deprecated; (moved to [[EditSession]])",
                        "short_description": "Deprecated; (moved to [[EditSession]])",
                        "line": 18386,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "className",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "addGutterDecoration",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.addGutterDecoration",
                        "outFile": "virtual_renderer.html#VirtualRenderer.addGutterDecoration"
                    },
                    {
                        "id": "VirtualRenderer.adjustWrapLimit",
                        "type": "class method",
                        "description": "Adjusts the wrap limit, which is the number of characters that can fit within the width of the edit area on screen.",
                        "short_description": "Adjusts the wrap limit, which is the number of characters that can fit within the width of the edit area on screen.",
                        "line": 17845,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "adjustWrapLimit",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.adjustWrapLimit",
                        "outFile": "virtual_renderer.html#VirtualRenderer.adjustWrapLimit"
                    },
                    {
                        "id": "VirtualRenderer.destroy",
                        "type": "class method",
                        "description": "Destroys the text and cursor layers for this renderer.",
                        "short_description": "Destroys the text and cursor layers for this renderer.",
                        "line": 18874,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "destroy",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.destroy",
                        "outFile": "virtual_renderer.html#VirtualRenderer.destroy"
                    },
                    {
                        "id": "VirtualRenderer.getAnimatedScroll",
                        "type": "class method",
                        "description": "Returns whether an animated scroll happens or not.",
                        "short_description": "Returns whether an animated scroll happens or not.",
                        "line": 17866,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getAnimatedScroll",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getAnimatedScroll",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getAnimatedScroll"
                    },
                    {
                        "id": "VirtualRenderer.getContainerElement",
                        "type": "class method",
                        "description": "Returns the root element containing this renderer.",
                        "short_description": "Returns the root element containing this renderer.",
                        "line": 18032,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "DOMElement",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getContainerElement",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getContainerElement",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getContainerElement"
                    },
                    {
                        "id": "VirtualRenderer.getFirstFullyVisibleRow",
                        "type": "class method",
                        "description": "Returns the index of the first fully visible row. \"Fully\" here means that the characters in the row are not truncated; that the top and the bottom of the row are on the screen.",
                        "short_description": "Returns the index of the first fully visible row. \"Fully\" here means that the characters in the row are not truncated; that the top and the bottom of the row are on the screen.",
                        "line": 18097,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getFirstFullyVisibleRow",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getFirstFullyVisibleRow",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getFirstFullyVisibleRow"
                    },
                    {
                        "id": "VirtualRenderer.getFirstVisibleRow",
                        "type": "class method",
                        "description": "[Returns the index of the first visible row.]{: #VirtualRenderer.getFirstVisibleRow}",
                        "short_description": "[Returns the index of the first visible row.]{: #VirtualRenderer.getFirstVisibleRow}",
                        "line": 18088,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getFirstVisibleRow",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getFirstVisibleRow",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getFirstVisibleRow"
                    },
                    {
                        "id": "VirtualRenderer.getHScrollBarAlwaysVisible",
                        "type": "class method",
                        "description": "Returns whether the horizontal scrollbar is set to be always visible.",
                        "short_description": "Returns whether the horizontal scrollbar is set to be always visible.",
                        "line": 18144,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getHScrollBarAlwaysVisible",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getHScrollBarAlwaysVisible",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getHScrollBarAlwaysVisible"
                    },
                    {
                        "id": "VirtualRenderer.getLastFullyVisibleRow",
                        "type": "class method",
                        "description": "Returns the index of the last fully visible row. \"Fully\" here means that the characters in the row are not truncated; that the top and the bottom of the row are on the screen.",
                        "short_description": "Returns the index of the last fully visible row. \"Fully\" here means that the characters in the row are not truncated; that the top and the bottom of the row are on the screen.",
                        "line": 18106,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getLastFullyVisibleRow",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getLastFullyVisibleRow",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getLastFullyVisibleRow"
                    },
                    {
                        "id": "VirtualRenderer.getLastVisibleRow",
                        "type": "class method",
                        "description": "[Returns the index of the last visible row.]{: #VirtualRenderer.getLastVisibleRow}",
                        "short_description": "[Returns the index of the last visible row.]{: #VirtualRenderer.getLastVisibleRow}",
                        "line": 18116,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getLastVisibleRow",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getLastVisibleRow",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getLastVisibleRow"
                    },
                    {
                        "id": "VirtualRenderer.getMouseEventTarget",
                        "type": "class method",
                        "description": "Returns the element that the mouse events are attached to",
                        "short_description": "Returns the element that the mouse events are attached to",
                        "line": 18041,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "DOMElement",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getMouseEventTarget",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getMouseEventTarget",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getMouseEventTarget"
                    },
                    {
                        "id": "VirtualRenderer.getPrintMarginColumn",
                        "type": "class method",
                        "description": "Returns whether the print margin column is being shown or not.",
                        "short_description": "Returns whether the print margin column is being shown or not.",
                        "line": 17941,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getPrintMarginColumn",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getPrintMarginColumn",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getPrintMarginColumn"
                    },
                    {
                        "id": "VirtualRenderer.getScrollBottomRow",
                        "type": "class method",
                        "description": "Returns the last visible row, regardless of whether it's fully visible or not.",
                        "short_description": "Returns the last visible row, regardless of whether it's fully visible or not.",
                        "line": 18515,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getScrollBottomRow",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getScrollBottomRow",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getScrollBottomRow"
                    },
                    {
                        "id": "VirtualRenderer.getScrollLeft",
                        "type": "class method",
                        "description": "{:EditSession.getScrollLeft}",
                        "short_description": "{:EditSession.getScrollLeft}",
                        "line": 18497,
                        "author": [],
                        "related": "EditSession.getScrollLeft",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getScrollLeft",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getScrollLeft",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getScrollLeft"
                    },
                    {
                        "id": "VirtualRenderer.getScrollTop",
                        "type": "class method",
                        "description": "{:EditSession.getScrollTop}",
                        "short_description": "{:EditSession.getScrollTop}",
                        "line": 18488,
                        "author": [],
                        "related": "EditSession.getScrollTop",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getScrollTop",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getScrollTop",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getScrollTop"
                    },
                    {
                        "id": "VirtualRenderer.getScrollTopRow",
                        "type": "class method",
                        "description": "Returns the first visible row, regardless of whether it's fully visible or not.",
                        "short_description": "Returns the first visible row, regardless of whether it's fully visible or not.",
                        "line": 18506,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getScrollTopRow",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getScrollTopRow",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getScrollTopRow"
                    },
                    {
                        "id": "VirtualRenderer.getShowGutter",
                        "type": "class method",
                        "description": "Returns `true` if the gutter is being shown.",
                        "short_description": "Returns `true` if the gutter is being shown.",
                        "line": 17950,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getShowGutter",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getShowGutter",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getShowGutter"
                    },
                    {
                        "id": "VirtualRenderer.getShowInvisibles",
                        "type": "class method",
                        "description": "Returns whether invisible characters are being shown or not.",
                        "short_description": "Returns whether invisible characters are being shown or not.",
                        "line": 17887,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getShowInvisibles",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getShowInvisibles",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getShowInvisibles"
                    },
                    {
                        "id": "VirtualRenderer.getShowPrintMargin",
                        "type": "class method",
                        "description": "Returns whether the print margin is being shown or not.",
                        "short_description": "Returns whether the print margin is being shown or not.",
                        "line": 17919,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getShowPrintMargin",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getShowPrintMargin",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getShowPrintMargin"
                    },
                    {
                        "id": "VirtualRenderer.getTextAreaContainer",
                        "type": "class method",
                        "description": "Returns the element to which the hidden text area is added.",
                        "short_description": "Returns the element to which the hidden text area is added.",
                        "line": 18050,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "DOMElement",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getTextAreaContainer",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getTextAreaContainer",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getTextAreaContainer"
                    },
                    {
                        "id": "VirtualRenderer.getTheme",
                        "type": "class method",
                        "description": "[Returns the path of the current theme.]{: #VirtualRenderer.getTheme}",
                        "short_description": "[Returns the path of the current theme.]{: #VirtualRenderer.getTheme}",
                        "line": 18842,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                },
                                "returns": [
                                    {
                                        "type": "String",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "getTheme",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.getTheme",
                        "outFile": "virtual_renderer.html#VirtualRenderer.getTheme"
                    },
                    {
                        "id": "VirtualRenderer.hideComposition",
                        "type": "class method",
                        "description": "Hides the current composition.",
                        "short_description": "Hides the current composition.",
                        "line": 18761,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "hideComposition",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.hideComposition",
                        "outFile": "virtual_renderer.html#VirtualRenderer.hideComposition"
                    },
                    {
                        "id": "VirtualRenderer.hideCursor",
                        "type": "class method",
                        "description": "Hides the cursor icon.",
                        "short_description": "Hides the cursor icon.",
                        "line": 18431,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "hideCursor",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.hideCursor",
                        "outFile": "virtual_renderer.html#VirtualRenderer.hideCursor"
                    },
                    {
                        "id": "VirtualRenderer.isScrollableBy",
                        "type": "class method",
                        "description": "Returns `true` if you can still scroll by either parameter; in other words, you haven't reached the end of the file or line.",
                        "short_description": "Returns `true` if you can still scroll by either parameter; in other words, you haven't reached the end of the file or line.",
                        "line": 18657,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "deltaX",
                                            "description": "The x value to scroll by",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "deltaY",
                                            "description": "The y value to scroll by",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Boolean",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "isScrollableBy",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.isScrollableBy",
                        "outFile": "virtual_renderer.html#VirtualRenderer.isScrollableBy"
                    },
                    {
                        "id": "new VirtualRenderer",
                        "type": "constructor",
                        "description": "Constructs a new `VirtualRenderer` within the `container` specified, applying the given `theme`.",
                        "short_description": "Constructs a new `VirtualRenderer` within the `container` specified, applying the given `theme`.",
                        "line": 17563,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "container",
                                            "description": "The root element of the editor",
                                            "types": [
                                                "DOMElement"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "theme",
                                            "description": "The starting theme",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "new",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.new",
                        "outFile": "virtual_renderer.html#VirtualRenderer.new"
                    },
                    {
                        "id": "VirtualRenderer.onResize",
                        "type": "class method",
                        "description": "[Triggers a resize of the editor.]{: #VirtualRenderer.onResize}",
                        "short_description": "[Triggers a resize of the editor.]{: #VirtualRenderer.onResize}",
                        "line": 17787,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "force",
                                            "description": "If `true`, recomputes the size, even if the height and width haven't changed",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "gutterWidth",
                                            "description": "The width of the gutter in pixels",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "width",
                                            "description": "The width of the editor in pixels",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "height",
                                            "description": "The hiehgt of the editor, in pixels",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "onResize",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.onResize",
                        "outFile": "virtual_renderer.html#VirtualRenderer.onResize"
                    },
                    {
                        "id": "VirtualRenderer.removeGutterDecoration",
                        "type": "class method",
                        "description": "Deprecated; (moved to [[EditSession]])",
                        "short_description": "Deprecated; (moved to [[EditSession]])",
                        "line": 18395,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "className",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "removeGutterDecoration",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.removeGutterDecoration",
                        "outFile": "virtual_renderer.html#VirtualRenderer.removeGutterDecoration"
                    },
                    {
                        "id": "VirtualRenderer.scrollBy",
                        "type": "class method",
                        "description": "Scrolls the editor across both x- and y-axes.",
                        "short_description": "Scrolls the editor across both x- and y-axes.",
                        "line": 18645,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "deltaX",
                                            "description": "The x value to scroll by",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "deltaY",
                                            "description": "The y value to scroll by",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "scrollBy",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.scrollBy",
                        "outFile": "virtual_renderer.html#VirtualRenderer.scrollBy"
                    },
                    {
                        "id": "VirtualRenderer.scrollCursorIntoView",
                        "type": "class method",
                        "description": "Scrolls the cursor into the first visibile area of the editor",
                        "short_description": "Scrolls the cursor into the first visibile area of the editor",
                        "line": 18453,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "cursor",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "offset",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "scrollCursorIntoView",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.scrollCursorIntoView",
                        "outFile": "virtual_renderer.html#VirtualRenderer.scrollCursorIntoView"
                    },
                    {
                        "id": "VirtualRenderer.scrollToLine",
                        "type": "class method",
                        "description": "Gracefully scrolls the editor to the row indicated.",
                        "short_description": "Gracefully scrolls the editor to the row indicated.",
                        "line": 18563,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "line",
                                            "description": "A line number",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "center",
                                            "description": "If `true`, centers the editor the to indicated line",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "animate",
                                            "description": "If `true` animates scrolling",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "callback",
                                            "description": "Function to be called after the animation has finished",
                                            "types": [
                                                "Function"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "scrollToLine",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.scrollToLine",
                        "outFile": "virtual_renderer.html#VirtualRenderer.scrollToLine"
                    },
                    {
                        "id": "VirtualRenderer.scrollToRow",
                        "type": "class method",
                        "description": "Gracefully scrolls from the top of the editor to the row indicated.",
                        "short_description": "Gracefully scrolls from the top of the editor to the row indicated.",
                        "line": 18524,
                        "author": [],
                        "related": "EditSession.setScrollTop",
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "A row id",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "scrollToRow",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.scrollToRow",
                        "outFile": "virtual_renderer.html#VirtualRenderer.scrollToRow"
                    },
                    {
                        "id": "VirtualRenderer.scrollToX",
                        "type": "class method",
                        "description": "Scrolls the editor across the x-axis to the pixel indicated.",
                        "short_description": "Scrolls the editor across the x-axis to the pixel indicated.",
                        "line": 18629,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "scrollLeft",
                                            "description": "The position to scroll to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "scrollToX",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.scrollToX",
                        "outFile": "virtual_renderer.html#VirtualRenderer.scrollToX"
                    },
                    {
                        "id": "VirtualRenderer.scrollToY",
                        "type": "class method",
                        "description": "Scrolls the editor to the y pixel indicated.",
                        "short_description": "Scrolls the editor to the y pixel indicated.",
                        "line": 18613,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "scrollTop",
                                            "description": "The position to scroll to",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Number",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "scrollToY",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.scrollToY",
                        "outFile": "virtual_renderer.html#VirtualRenderer.scrollToY"
                    },
                    {
                        "id": "VirtualRenderer.setAnimatedScroll",
                        "type": "class method",
                        "description": "Identifies whether you want to have an animated scroll or not.",
                        "short_description": "Identifies whether you want to have an animated scroll or not.",
                        "line": 17855,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "shouldAnimate",
                                            "description": "Set to `true` to show animated scrolls",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "setAnimatedScroll",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.setAnimatedScroll",
                        "outFile": "virtual_renderer.html#VirtualRenderer.setAnimatedScroll"
                    },
                    {
                        "id": "VirtualRenderer.setAnnotations",
                        "type": "class method",
                        "description": "Sets annotations for the gutter.",
                        "short_description": "Sets annotations for the gutter.",
                        "line": 18411,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "annotations",
                                            "description": "An array containing annotations",
                                            "types": [
                                                "Array"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "setAnnotations",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.setAnnotations",
                        "outFile": "virtual_renderer.html#VirtualRenderer.setAnnotations"
                    },
                    {
                        "id": "VirtualRenderer.setCompositionText",
                        "type": "class method",
                        "incomplete": true,
                        "line": 18752,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "text",
                                            "description": "A string of text to use\n\nSets the inner text of the current composition to `text`.",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "setCompositionText",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.setCompositionText",
                        "outFile": "virtual_renderer.html#VirtualRenderer.setCompositionText"
                    },
                    {
                        "id": "VirtualRenderer.setHScrollBarAlwaysVisible",
                        "type": "class method",
                        "description": "Identifies whether you want to show the horizontal scrollbar or not.",
                        "short_description": "Identifies whether you want to show the horizontal scrollbar or not.",
                        "line": 18153,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "alwaysVisible",
                                            "description": "Set to `true` to make the horizontal scroll bar visible",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "setHScrollBarAlwaysVisible",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.setHScrollBarAlwaysVisible",
                        "outFile": "virtual_renderer.html#VirtualRenderer.setHScrollBarAlwaysVisible"
                    },
                    {
                        "id": "VirtualRenderer.setPadding",
                        "type": "class method",
                        "description": "Sets the padding for all the layers.",
                        "short_description": "Sets the padding for all the layers.",
                        "line": 18127,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "padding",
                                            "description": "A new padding value (in pixels)",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "setPadding",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.setPadding",
                        "outFile": "virtual_renderer.html#VirtualRenderer.setPadding"
                    },
                    {
                        "id": "VirtualRenderer.setPrintMarginColumn",
                        "type": "class method",
                        "description": "Identifies whether you want to show the print margin column or not.",
                        "short_description": "Identifies whether you want to show the print margin column or not.",
                        "line": 17929,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "showPrintMargin",
                                            "description": "Set to `true` to show the print margin column",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "setPrintMarginColumn",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.setPrintMarginColumn",
                        "outFile": "virtual_renderer.html#VirtualRenderer.setPrintMarginColumn"
                    },
                    {
                        "id": "VirtualRenderer.setSession",
                        "type": "class method",
                        "description": "Associates the renderer with an [[EditSession `EditSession`]].",
                        "short_description": "Associates the renderer with an [[EditSession `EditSession`]].",
                        "line": 17706,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "session",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "setSession",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.setSession",
                        "outFile": "virtual_renderer.html#VirtualRenderer.setSession"
                    },
                    {
                        "id": "VirtualRenderer.setShowGutter",
                        "type": "class method",
                        "description": "Identifies whether you want to show the gutter or not.",
                        "short_description": "Identifies whether you want to show the gutter or not.",
                        "line": 17959,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "show",
                                            "description": "Set to `true` to show the gutter",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "setShowGutter",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.setShowGutter",
                        "outFile": "virtual_renderer.html#VirtualRenderer.setShowGutter"
                    },
                    {
                        "id": "VirtualRenderer.setShowInvisibles",
                        "type": "class method",
                        "description": "Identifies whether you want to show invisible characters or not.",
                        "short_description": "Identifies whether you want to show invisible characters or not.",
                        "line": 17875,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "showInvisibles",
                                            "description": "Set to `true` to show invisibles",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "setShowInvisibles",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.setShowInvisibles",
                        "outFile": "virtual_renderer.html#VirtualRenderer.setShowInvisibles"
                    },
                    {
                        "id": "VirtualRenderer.setShowPrintMargin",
                        "type": "class method",
                        "description": "Identifies whether you want to show the print margin or not.",
                        "short_description": "Identifies whether you want to show the print margin or not.",
                        "line": 17907,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "showPrintMargin",
                                            "description": "Set to `true` to show the print margin",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "setShowPrintMargin",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.setShowPrintMargin",
                        "outFile": "virtual_renderer.html#VirtualRenderer.setShowPrintMargin"
                    },
                    {
                        "id": "VirtualRenderer.setStyle",
                        "type": "class method",
                        "description": "[Adds a new class, `style`, to the editor.]{: #VirtualRenderer.setStyle}",
                        "short_description": "[Adds a new class, `style`, to the editor.]{: #VirtualRenderer.setStyle}",
                        "line": 18854,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "style",
                                            "description": "A class name",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "setStyle",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.setStyle",
                        "outFile": "virtual_renderer.html#VirtualRenderer.setStyle"
                    },
                    {
                        "id": "VirtualRenderer.setTheme",
                        "type": "class method",
                        "description": "[Sets a new theme for the editor. `theme` should exist, and be a directory path, like `ace/theme/textmate`.]{: #VirtualRenderer.setTheme}",
                        "short_description": "[Sets a new theme for the editor. `theme` should exist, and be a directory path, like `ace/theme/textmate`.]{: #VirtualRenderer.setTheme}",
                        "line": 18782,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "theme",
                                            "description": "The path to a theme",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "setTheme",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.setTheme",
                        "outFile": "virtual_renderer.html#VirtualRenderer.setTheme"
                    },
                    {
                        "id": "VirtualRenderer.showComposition",
                        "type": "class method",
                        "incomplete": true,
                        "line": 18734,
                        "private": true,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "position",
                                            "description": "",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "showComposition",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.showComposition",
                        "outFile": "virtual_renderer.html#VirtualRenderer.showComposition"
                    },
                    {
                        "id": "VirtualRenderer.showCursor",
                        "type": "class method",
                        "description": "Shows the cursor icon.",
                        "short_description": "Shows the cursor icon.",
                        "line": 18439,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "showCursor",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.showCursor",
                        "outFile": "virtual_renderer.html#VirtualRenderer.showCursor"
                    },
                    {
                        "id": "VirtualRenderer.textToScreenCoordinates",
                        "type": "class method",
                        "description": "Returns an object containing the `pageX` and `pageY` coordinates of the document position.",
                        "short_description": "Returns an object containing the `pageX` and `pageY` coordinates of the document position.",
                        "line": 18696,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "row",
                                            "description": "The document row position",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "column",
                                            "description": "The document column position",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                },
                                "returns": [
                                    {
                                        "type": "Object",
                                        "description": ""
                                    }
                                ]
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "textToScreenCoordinates",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.textToScreenCoordinates",
                        "outFile": "virtual_renderer.html#VirtualRenderer.textToScreenCoordinates"
                    },
                    {
                        "id": "VirtualRenderer.unsetStyle",
                        "type": "class method",
                        "description": "[Removes the class `style` from the editor.]{: #VirtualRenderer.unsetStyle}",
                        "short_description": "[Removes the class `style` from the editor.]{: #VirtualRenderer.unsetStyle}",
                        "line": 18864,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "style",
                                            "description": "A class name",
                                            "types": [
                                                "String"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "unsetStyle",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.unsetStyle",
                        "outFile": "virtual_renderer.html#VirtualRenderer.unsetStyle"
                    },
                    {
                        "id": "VirtualRenderer.updateBackMarkers",
                        "type": "class method",
                        "description": "Schedules an update to all the back markers in the document.",
                        "short_description": "Schedules an update to all the back markers in the document.",
                        "line": 18377,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "updateBackMarkers",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.updateBackMarkers",
                        "outFile": "virtual_renderer.html#VirtualRenderer.updateBackMarkers"
                    },
                    {
                        "id": "VirtualRenderer.updateBreakpoints",
                        "type": "class method",
                        "description": "Redraw breakpoints.",
                        "short_description": "Redraw breakpoints.",
                        "line": 18403,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "rows",
                                            "description": "",
                                            "types": [
                                                "Object"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "updateBreakpoints",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.updateBreakpoints",
                        "outFile": "virtual_renderer.html#VirtualRenderer.updateBreakpoints"
                    },
                    {
                        "id": "VirtualRenderer.updateCursor",
                        "type": "class method",
                        "description": "Updates the cursor icon.",
                        "short_description": "Updates the cursor icon.",
                        "line": 18423,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "updateCursor",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.updateCursor",
                        "outFile": "virtual_renderer.html#VirtualRenderer.updateCursor"
                    },
                    {
                        "id": "VirtualRenderer.updateFontSize",
                        "type": "class method",
                        "description": "Updates the font size.",
                        "short_description": "Updates the font size.",
                        "line": 17779,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "updateFontSize",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.updateFontSize",
                        "outFile": "virtual_renderer.html#VirtualRenderer.updateFontSize"
                    },
                    {
                        "id": "VirtualRenderer.updateFrontMarkers",
                        "type": "class method",
                        "description": "Schedules an update to all the front markers in the document.",
                        "short_description": "Schedules an update to all the front markers in the document.",
                        "line": 18368,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "updateFrontMarkers",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.updateFrontMarkers",
                        "outFile": "virtual_renderer.html#VirtualRenderer.updateFrontMarkers"
                    },
                    {
                        "id": "VirtualRenderer.updateFull",
                        "type": "class method",
                        "description": "Triggers a full update of all the layers, for all the rows.",
                        "short_description": "Triggers a full update of all the layers, for all the rows.",
                        "line": 17764,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "force",
                                            "description": "If `true`, forces the changes through",
                                            "types": [
                                                "Boolean"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "updateFull",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.updateFull",
                        "outFile": "virtual_renderer.html#VirtualRenderer.updateFull"
                    },
                    {
                        "id": "VirtualRenderer.updateLines",
                        "type": "class method",
                        "description": "Triggers a partial update of the text, from the range given by the two parameters.",
                        "short_description": "Triggers a partial update of the text, from the range given by the two parameters.",
                        "line": 17724,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": [
                                        {
                                            "name": "firstRow",
                                            "description": "The first row to update",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        },
                                        {
                                            "name": "lastRow",
                                            "description": "The last row to update",
                                            "types": [
                                                "Number"
                                            ],
                                            "optional": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "updateLines",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.updateLines",
                        "outFile": "virtual_renderer.html#VirtualRenderer.updateLines"
                    },
                    {
                        "id": "VirtualRenderer.updateText",
                        "type": "class method",
                        "description": "Triggers a full update of the text, for all the rows.",
                        "short_description": "Triggers a full update of the text, for all the rows.",
                        "line": 17757,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "updateText",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.updateText",
                        "outFile": "virtual_renderer.html#VirtualRenderer.updateText"
                    },
                    {
                        "id": "VirtualRenderer.visualizeBlur",
                        "type": "class method",
                        "description": "Blurs the current container.",
                        "short_description": "Blurs the current container.",
                        "line": 18726,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "visualizeBlur",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.visualizeBlur",
                        "outFile": "virtual_renderer.html#VirtualRenderer.visualizeBlur"
                    },
                    {
                        "id": "VirtualRenderer.visualizeFocus",
                        "type": "class method",
                        "description": "Focuses the current container.",
                        "short_description": "Focuses the current container.",
                        "line": 18718,
                        "author": [],
                        "signatures": [
                            {
                                "arguments": {
                                    "arguments": []
                                }
                            }
                        ],
                        "aliases": [],
                        "children": [],
                        "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                        "name": "visualizeFocus",
                        "name_prefix": "VirtualRenderer.",
                        "path": "VirtualRenderer.visualizeFocus",
                        "outFile": "virtual_renderer.html#VirtualRenderer.visualizeFocus"
                    }
                ],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/virtual_renderer.js",
                "subclasses": [],
                "name": "VirtualRenderer",
                "path": "VirtualRenderer",
                "outFile": "virtual_renderer.html"
            },
            {
                "id": ".addRange",
                "type": "class method",
                "description": "extension\nSelection.addRange(range, $blockChangeEvents)\n- range (Range): The new range to add\n- $blockChangeEvents (Boolean): Whether or not to block changing events\n\nAdds a range to a selection by entering multiselect mode, if necessary.",
                "short_description": "extension\nSelection.addRange(range, $blockChangeEvents)\n- range (Range): The new range to add\n- $blockChangeEvents (Boolean): Whether or not to block changing events\n",
                "line": 13729,
                "author": [],
                "signatures": [
                    {
                        "arguments": {
                            "arguments": [
                                {
                                    "name": "range",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                },
                                {
                                    "name": "$blockChangeEvents",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                }
                            ]
                        }
                    }
                ],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/multi_select.js",
                "name": "addRange",
                "name_prefix": ".",
                "path": ".addRange",
                "outFile": "multi_select.html#.addRange"
            },
            {
                "id": ".addSelectionMarker",
                "type": "class method",
                "description": "Editor.addSelectionMarker(orientedRange) -> Range\n- orientedRange (Range): A range containing a cursor\n\nAdds the selection and cursor.",
                "short_description": "Editor.addSelectionMarker(orientedRange) -> Range\n- orientedRange (Range): A range containing a cursor\n",
                "line": 13997,
                "author": [],
                "signatures": [
                    {
                        "arguments": {
                            "arguments": [
                                {
                                    "name": "orientedRange",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                }
                            ]
                        }
                    }
                ],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/multi_select.js",
                "name": "addSelectionMarker",
                "name_prefix": ".",
                "path": ".addSelectionMarker",
                "outFile": "multi_select.html#.addSelectionMarker"
            },
            {
                "id": ".alignCursors",
                "type": "class method",
                "description": "extension\nEditor.alignCursors()\n\naligns cursors or selected text",
                "short_description": "extension\nEditor.alignCursors()\n",
                "line": 14339,
                "author": [],
                "signatures": [
                    {
                        "arguments": {
                            "arguments": []
                        }
                    }
                ],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/multi_select.js",
                "name": "alignCursors",
                "name_prefix": ".",
                "path": ".alignCursors",
                "outFile": "multi_select.html#.alignCursors"
            },
            {
                "id": ".Editor",
                "type": "class method",
                "description": "Adds a cursor above or below the active cursor. .selectMoreLines",
                "short_description": "Adds a cursor above or below the active cursor. .selectMoreLines",
                "line": 14222,
                "author": [],
                "signatures": [
                    {
                        "arguments": {
                            "arguments": [
                                {
                                    "name": "dir",
                                    "description": "The direction of lines to select: -1 for up, 1 for down",
                                    "types": [
                                        "Number"
                                    ],
                                    "optional": false
                                },
                                {
                                    "name": "skip",
                                    "description": "If `true`, removes the active selection range",
                                    "types": [
                                        "Boolean"
                                    ],
                                    "optional": false
                                }
                            ]
                        }
                    }
                ],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/multi_select.js",
                "name": "Editor",
                "name_prefix": ".",
                "path": ".Editor",
                "outFile": "multi_select.html#.Editor"
            },
            {
                "id": ".exitMultiSelectMode",
                "type": "class method",
                "description": "Editor.exitMultiSelectMode() -> Void\n\nRemoves all the selections except the last added one.",
                "short_description": "Editor.exitMultiSelectMode() -> Void\n",
                "line": 14140,
                "author": [],
                "signatures": [
                    {
                        "arguments": {
                            "arguments": []
                        }
                    }
                ],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/multi_select.js",
                "name": "exitMultiSelectMode",
                "name_prefix": ".",
                "path": ".exitMultiSelectMode",
                "outFile": "multi_select.html#.exitMultiSelectMode"
            },
            {
                "id": ".findAll",
                "type": "class method",
                "description": "Editor.findAll(needle, options, additive) -> Number\n- needle (String): The text to find\n- options (Object): The search options\n- additive (Boolean): keeps\n\nFinds and selects all the occurences of `needle`.",
                "short_description": "Editor.findAll(needle, options, additive) -> Number\n- needle (String): The text to find\n- options (Object): The search options\n- additive (Boolean): keeps\n",
                "line": 14191,
                "author": [],
                "signatures": [
                    {
                        "arguments": {
                            "arguments": [
                                {
                                    "name": "needle",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                },
                                {
                                    "name": "options",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                },
                                {
                                    "name": "additive",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                }
                            ]
                        }
                    }
                ],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/multi_select.js",
                "name": "findAll",
                "name_prefix": ".",
                "path": ".findAll",
                "outFile": "multi_select.html#.findAll"
            },
            {
                "id": ".forEachSelection",
                "type": "class method",
                "description": "Editor.forEachSelection(cmd, args)\n- cmd (String): The command to execute\n- args (String): Any arguments for the command\n\nExecutes a command for each selection range.",
                "short_description": "Editor.forEachSelection(cmd, args)\n- cmd (String): The command to execute\n- args (String): Any arguments for the command\n",
                "line": 14103,
                "author": [],
                "signatures": [
                    {
                        "arguments": {
                            "arguments": [
                                {
                                    "name": "cmd",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                },
                                {
                                    "name": "args",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                }
                            ]
                        }
                    }
                ],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/multi_select.js",
                "name": "forEachSelection",
                "name_prefix": ".",
                "path": ".forEachSelection",
                "outFile": "multi_select.html#.forEachSelection"
            },
            {
                "id": ".mergeOverlappingRanges",
                "type": "class method",
                "description": "extension\nSelection.mergeOverlappingRanges()\n\nMerges overlapping ranges ensuring consistency after changes",
                "short_description": "extension\nSelection.mergeOverlappingRanges()\n",
                "line": 13792,
                "author": [],
                "signatures": [
                    {
                        "arguments": {
                            "arguments": []
                        }
                    }
                ],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/multi_select.js",
                "name": "mergeOverlappingRanges",
                "name_prefix": ".",
                "path": ".mergeOverlappingRanges",
                "outFile": "multi_select.html#.mergeOverlappingRanges"
            },
            {
                "id": ".rectangularRangeBlock",
                "type": "class method",
                "description": "extension\nSelection.rectangularRangeBlock(screenCursor, screenAnchor, includeEmptyLines) -> Range\n- screenCursor (Cursor): The cursor to use\n- screenAnchor (Anchor): The anchor to use\n- includeEmptyLines (Boolean): If true, this includes ranges inside the block which are empty due to clipping\n\nGets list of ranges composing rectangular block on the screen",
                "short_description": "extension\nSelection.rectangularRangeBlock(screenCursor, screenAnchor, includeEmptyLines) -> Range\n- screenCursor (Cursor): The cursor to use\n- screenAnchor (Anchor): The anchor to use\n- includeEmptyLines (Boolean): If true, this includes ranges inside the block which are empty due to clipping\n",
                "line": 13909,
                "author": [],
                "signatures": [
                    {
                        "arguments": {
                            "arguments": [
                                {
                                    "name": "screenCursor",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                },
                                {
                                    "name": "screenAnchor",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                },
                                {
                                    "name": "includeEmptyLines",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                }
                            ]
                        }
                    }
                ],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/multi_select.js",
                "name": "rectangularRangeBlock",
                "name_prefix": ".",
                "path": ".rectangularRangeBlock",
                "outFile": "multi_select.html#.rectangularRangeBlock"
            },
            {
                "id": ".removeSelectionMarker",
                "type": "class method",
                "description": "Editor.removeSelectionMarker(range)\n- range (Range): The selection range added with [[Editor.addSelectionMarker `addSelectionMarker()`]].\n\nRemoves the selection marker.",
                "short_description": "Editor.removeSelectionMarker(range)\n- range (Range): The selection range added with [[Editor.addSelectionMarker `addSelectionMarker()`]].\n",
                "line": 14015,
                "author": [],
                "signatures": [
                    {
                        "arguments": {
                            "arguments": [
                                {
                                    "name": "range",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                }
                            ]
                        }
                    }
                ],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/multi_select.js",
                "name": "removeSelectionMarker",
                "name_prefix": ".",
                "path": ".removeSelectionMarker",
                "outFile": "multi_select.html#.removeSelectionMarker"
            },
            {
                "id": ".selectMore",
                "type": "class method",
                "description": "extension\nEditor.selectMore(dir, skip)\n- dir (Number): The direction of lines to select: -1 for up, 1 for down\n- skip (Boolean): If `true`, removes the active selection range\n\nFinds the next occurence of text in an active selection and adds it to the selections.",
                "short_description": "extension\nEditor.selectMore(dir, skip)\n- dir (Number): The direction of lines to select: -1 for up, 1 for down\n- skip (Boolean): If `true`, removes the active selection range\n",
                "line": 14311,
                "author": [],
                "signatures": [
                    {
                        "arguments": {
                            "arguments": [
                                {
                                    "name": "dir",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                },
                                {
                                    "name": "skip",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                }
                            ]
                        }
                    }
                ],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/multi_select.js",
                "name": "selectMore",
                "name_prefix": ".",
                "path": ".selectMore",
                "outFile": "multi_select.html#.selectMore"
            },
            {
                "id": ".substractPoint",
                "type": "class method",
                "description": "extension\nSelection.substractPoint(pos) -> Range\n- pos (Range): The position to remove, as a `{row, column}` object\n\nRemoves a Range containing pos (if it exists).",
                "short_description": "extension\nSelection.substractPoint(pos) -> Range\n- pos (Range): The position to remove, as a `{row, column}` object\n",
                "line": 13778,
                "author": [],
                "signatures": [
                    {
                        "arguments": {
                            "arguments": [
                                {
                                    "name": "pos",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                }
                            ]
                        }
                    }
                ],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/multi_select.js",
                "name": "substractPoint",
                "name_prefix": ".",
                "path": ".substractPoint",
                "outFile": "multi_select.html#.substractPoint"
            },
            {
                "id": ".transposeSelections",
                "type": "class method",
                "description": "extension\nEditor.transposeSelections(dir)\n- dir (Number): The direction to rotate selections\n\nTransposes the selected ranges.",
                "short_description": "extension\nEditor.transposeSelections(dir)\n- dir (Number): The direction to rotate selections\n",
                "line": 14268,
                "author": [],
                "signatures": [
                    {
                        "arguments": {
                            "arguments": [
                                {
                                    "name": "dir",
                                    "description": "",
                                    "types": [
                                        "Object"
                                    ],
                                    "optional": false
                                }
                            ]
                        }
                    }
                ],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/multi_select.js",
                "name": "transposeSelections",
                "name_prefix": ".",
                "path": ".transposeSelections",
                "outFile": "multi_select.html#.transposeSelections"
            },
            {
                "id": ".updateSelectionMarkers",
                "type": "class method",
                "description": "Editor.updateSelectionMarkers()\n\nUpdates the cursor and marker layers.",
                "short_description": "Editor.updateSelectionMarkers()\n",
                "line": 13987,
                "author": [],
                "signatures": [
                    {
                        "arguments": {
                            "arguments": []
                        }
                    }
                ],
                "aliases": [],
                "children": [],
                "file": "/Users/gjtorikian/Developer/ace/lib/ace/multi_select.js",
                "name": "updateSelectionMarkers",
                "name_prefix": ".",
                "path": ".updateSelectionMarkers",
                "outFile": "multi_select.html#.updateSelectionMarkers"
            }
        ]
    }
}